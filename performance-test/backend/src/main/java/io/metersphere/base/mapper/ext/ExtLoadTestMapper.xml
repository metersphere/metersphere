<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.metersphere.base.mapper.ext.ExtLoadTestMapper">
    <resultMap id="BaseResultMap" type="io.metersphere.dto.LoadTestDTO"
               extends="io.metersphere.base.mapper.LoadTestMapper.BaseResultMap">
        <result column="project_name" property="projectName"/>
        <result column="user_name" property="userName"/>
    </resultMap>

    <sql id="condition">
        <choose>
            <when test='${object}.operator == "like"'>
                LIKE CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "not like"'>
                NOT LIKE CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "in"'>
                IN
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "not in"'>
                NOT IN
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "between"'>
                BETWEEN #{${object}.value[0]} AND #{${object}.value[1]}
            </when>
            <when test='${object}.operator == "gt"'>
                &gt; #{${object}.value}
            </when>
            <when test='${object}.operator == "lt"'>
                &lt; #{${object}.value}
            </when>
            <when test='${object}.operator == "ge"'>
                &gt;= #{${object}.value}
            </when>
            <when test='${object}.operator == "le"'>
                &lt;= #{${object}.value}
            </when>
            <when test='${object}.operator == "current user"'>
                = '${@io.metersphere.commons.utils.SessionUtils@getUserId()}'
            </when>
            <otherwise>
                = #{${object}.value}
            </otherwise>
        </choose>
    </sql>

    <sql id="combine">
        <if test='${condition}.name != null and (${name} == null or ${name} == "")'>
            AND load_test.name
            <include refid="condition">
                <property name="object" value="${condition}.name"/>
            </include>
        </if>
        <if test='${condition}.id != null'>
            and load_test.num
            <include refid="condition">
                <property name="object" value="${condition}.id"/>
            </include>
        </if>
        <if test="${condition}.followPeople != null">
            and load_test.id in (
            select test_id from load_test_follow where follow_id
            <include refid="condition">
                <property name="object" value="${condition}.followPeople"/>
            </include>
            )
        </if>
        <if test="${condition}.updateTime != null">
            AND load_test.update_time
            <include refid="condition">
                <property name="object" value="${condition}.updateTime"/>
            </include>
        </if>
        <if test="${condition}.projectName != null">
            AND project.name
            <include refid="condition">
                <property name="object" value="${condition}.projectName"/>
            </include>
        </if>
        <if test="${condition}.createTime != null">
            AND load_test.create_time
            <include refid="condition">
                <property name="object" value="${condition}.createTime"/>
            </include>
        </if>
        <if test="${condition}.status != null">
            AND load_test.status
            <include refid="condition">
                <property name="object" value="${condition}.status"/>
            </include>
        </if>
        <if test="${condition}.creator != null">
            AND load_test.user_id
            <include refid="condition">
                <property name="object" value="${condition}.creator"/>
            </include>
        </if>
    </sql>

    <sql id="countCombine">
        <if test='${condition}.name != null and (${name} == null or ${name} == "")'>
            AND load_test.name
            <include refid="condition">
                <property name="object" value="${condition}.name"/>
            </include>
        </if>
        <if test="${condition}.followPeople != null">
            and load_test.id in (
            select test_id from load_test_follow where follow_id
            <include refid="condition">
                <property name="object" value="${condition}.followPeople"/>
            </include>
            )
        </if>
        <if test="${condition}.updateTime != null">
            AND load_test.update_time
            <include refid="condition">
                <property name="object" value="${condition}.updateTime"/>
            </include>
        </if>
        <if test="${condition}.createTime != null">
            AND load_test.create_time
            <include refid="condition">
                <property name="object" value="${condition}.createTime"/>
            </include>
        </if>
        <if test="${condition}.status != null">
            AND load_test.status
            <include refid="condition">
                <property name="object" value="${condition}.status"/>
            </include>
        </if>
        <if test="${condition}.creator != null">
            AND load_test.create_user
            <include refid="condition">
                <property name="object" value="${condition}.creator"/>
            </include>
        </if>
    </sql>

    <select id="list" resultMap="BaseResultMap"
            parameterType="io.metersphere.request.QueryTestPlanRequest">
        SELECT load_test.*, project.name AS project_name, user.name AS user_name, project_version.name as version_name
        FROM load_test
        LEFT JOIN project ON load_test.project_id = project.id
        LEFT JOIN user ON load_test.user_id = user.id
        LEFT JOIN project_version on project.id = project_version.project_id AND project_version.id =
        load_test.version_id
        <where>
            <if test="request.combine != null">
                <include refid="combine">
                    <property name="condition" value="request.combine"/>
                    <property name="name" value="request.name"/>
                </include>
            </if>
            <if test="request.name != null">
                and load_test.name LIKE CONCAT('%', #{request.name}, '%')
            </if>
            <if test="request.userId != null">
                AND load_test.user_id = #{request.userId}
            </if>
            <if test="request.workspaceId != null">
                AND project.workspace_id = #{request.workspaceId}
            </if>
            <if test="request.projectId != null">
                AND project.id = #{request.projectId}
            </if>
            <if test="request.id != null">
                AND load_test.id = #{request.id}
            </if>
            <if test="request.filters != null and request.filters.size() > 0">
                <foreach collection="request.filters.entrySet()" index="key" item="values">
                    <if test="values != null and values.size() > 0">
                        <choose>
                            <when test="key == 'id'">
                                AND load_test.id IN
                                <foreach collection="values" item="value" separator="," open="(" close=")">
                                    #{value}
                                </foreach>
                            </when>
                            <when test="key == 'status'">
                                AND load_test.status IN
                                <foreach collection="values" item="value" separator="," open="(" close=")">
                                    #{value}
                                </foreach>
                            </when>
                            <when test="key == 'user_id'">
                                AND load_test.user_id IN
                                <foreach collection="values" item="value" separator="," open="(" close=")">
                                    #{value}
                                </foreach>
                            </when>
                            <when test="key == 'project_id'">
                                AND load_test.project_id IN
                                <foreach collection="values" item="value" separator="," open="(" close=")">
                                    #{value}
                                </foreach>
                            </when>
                            <when test="key=='version_id'">
                                and load_test.version_id in
                                <foreach collection="values" item="value" separator="," open="(" close=")">
                                    #{value}
                                </foreach>
                            </when>
                        </choose>
                    </if>
                </foreach>
            </if>
            <include refid="queryVersionCondition">
                <property name="versionTable" value="load_test"/>
            </include>
        </where>
        <if test="request.orders != null and request.orders.size() > 0">
            ORDER BY
            <foreach collection="request.orders" separator="," item="order">
                <if test="order.name == 'user_name'">
                    user_name ${order.type}
                </if>
                <if test="order.name != 'user_name'">
                    load_test.${order.name} ${order.type}
                </if>
            </foreach>
        </if>
    </select>
    <select id="getLoadTestByProjectId" resultType="io.metersphere.base.domain.LoadTest">
        SELECT id, name
        FROM load_test
        WHERE project_id = #{projectId}
    </select>

    <select id="checkLoadTestOwner" resultType="int">
        SELECT COUNT(1)
        FROM load_test
        LEFT JOIN project ON load_test.project_id = project.id
        <where>
            <if test="testId != null">
                and load_test.id = #{testId}
            </if>
            <if test="projectIds != null and projectIds.size() > 0">
                AND project_id IN
                <foreach collection="projectIds" item="id" separator="," open="(" close=")">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>
    <select id="getNextNum" resultType="io.metersphere.base.domain.LoadTest">
        select *
        from load_test lt
        where lt.project_id = #{projectId}
        ORDER BY num DESC LIMIT 1;
    </select>

    <select id="moduleCount" resultType="java.lang.Integer">
        select count(load_test.id) from load_test
        left join project on load_test.project_id = project.id
        <where>
            <if test="request.combine != null">
                <include refid="countCombine">
                    <property name="condition" value="request.combine"/>
                    <property name="name" value="request.name"/>
                    <property name="objectKey" value="request.combine.tags"/>
                </include>
            </if>
            <if test="request.workspaceId != null">
                AND project.workspace_id = #{request.workspaceId}
            </if>
        </where>
    </select>

    <sql id="filter">
        <if test="request.filters != null and request.filters.size() > 0">
            <foreach collection="request.filters.entrySet()" index="key" item="values">
                <if test="values != null and values.size() > 0">
                    <choose>
                        <when test="key=='status'">
                            and load_test.status in
                            <foreach collection="values" item="value" separator="," open="(" close=")">
                                #{value}
                            </foreach>
                        </when>
                        <when test="key=='method'">
                            and load_test.method in
                            <foreach collection="values" item="value" separator="," open="(" close=")">
                                #{value}
                            </foreach>
                        </when>
                        <when test="key=='user_id'">
                            and load_test.user_id in
                            <foreach collection="values" item="value" separator="," open="(" close=")">
                                #{value}
                            </foreach>
                        </when>
                        <when test="key=='user_name'">
                            and load_test.user_id in
                            <foreach collection="values" item="value" separator="," open="(" close=")">
                                #{value}
                            </foreach>
                        </when>
                        <when test="key=='case_status'">
                            and load_test.case_status in
                            <foreach collection="values" item="value" separator="," open="(" close=")">
                                #{value}
                            </foreach>
                        </when>
                        <when test="key=='version_id'">
                            and load_test.version_id in
                            <foreach collection="values" item="value" separator="," open="(" close=")">
                                #{value}
                            </foreach>
                        </when>
                    </choose>
                </if>
            </foreach>
        </if>
    </sql>

    <sql id="queryWhereCondition">
        <where>
            <if test="request.combine != null">
                <include refid="combine">
                    <property name="condition" value="request.combine"/>
                    <property name="name" value="request.name"/>
                    <property name="objectKey" value="request.combine.tags"/>
                </include>
            </if>
            <if test="request.name != null">
                and (load_test.name like CONCAT('%', #{request.name},'%')
                or load_test.num like CONCAT('%', #{request.name},'%')
            </if>

            <if test="request.notEqStatus != null">
                and (load_test.status is null or load_test.status != #{request.notEqStatus})
            </if>

            <if test="request.id != null">
                AND load_test.id = #{request.id}
            </if>
            <if test="request.userId != null">
                AND load_test.user_id = #{request.userId}
            </if>
            <if test="request.createTime >0">
                AND load_test.create_time >= #{request.createTime}
            </if>
            <if test="request.notInIds != null and request.notInIds.size() > 0">
                and load_test.id not in
                <foreach collection="request.notInIds" item="id" separator="," open="(" close=")">
                    #{id}
                </foreach>
            </if>
            <if test="request.projectId != null">
                AND load_test.project_id = #{request.projectId}
            </if>
            <include refid="filter"/>
            <include refid="queryVersionCondition">
                <property name="versionTable" value="load_test"/>
            </include>
        </where>
    </sql>


    <select id="getProjectFiles" resultType="io.metersphere.base.domain.FileMetadata">
        SELECT file_metadata.*
        FROM file_metadata
        WHERE file_metadata.type IN
        <foreach collection="loadTypes" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
        AND project_id = #{projectId,jdbcType=VARCHAR}
        <if test="request.name != null">
            AND file_metadata.name LIKE CONCAT('%', #{request.name}, '%')
        </if>
        <if test="request.ids != null and request.ids.size() > 0">
            AND file_metadata.id NOT IN (
            SELECT file_id
            FROM load_test_file t
            WHERE t.test_id IN
            <foreach collection="request.ids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
            )
        </if>
        ORDER BY update_time DESC
    </select>

    <select id="selectProjectIds" resultType="java.lang.String">
        select DISTINCT project_id
        from load_test;
    </select>
    <select id="getIdsOrderByUpdateTime" resultType="java.lang.String">
        select id
        from load_test
        where project_id = #{projectId}
        order by update_time ASC;
    </select>

    <select id="getLastOrder" resultType="java.lang.Long">
        select `order` from load_test where project_id = #{projectId}
        <if test="baseOrder != null">
            and `order` &gt; #{baseOrder}
        </if>
        order by `order` desc limit 1;
    </select>

    <select id="getPreOrder" resultType="java.lang.Long">
        select `order` from load_test where project_id = #{projectId}
        <if test="baseOrder != null">
            and `order` &lt; #{baseOrder}
        </if>
        order by `order` desc limit 1;
    </select>

    <sql id="queryVersionCondition">
        <if test="request.versionId != null">
            and ${versionTable}.version_id = #{request.versionId}
        </if>
        <if test="request.refId != null">
            and ${versionTable}.ref_id = #{request.refId}
        </if>
        <if test="request.versionId == null and request.refId == null and request.id == null">
            AND ${versionTable}.latest = 1
        </if>
    </sql>

    <update id="addLatestVersion">
        UPDATE load_test
            INNER JOIN ((
            SELECT tmp.id
            FROM load_test tmp
            JOIN project_version
            ON tmp.project_id = project_version.project_id AND
            tmp.version_id = project_version.id AND project_version.latest = TRUE
            WHERE ref_id = #{refId,jdbcType=VARCHAR}
            LIMIT 1
            )
            UNION ALL
            (
            SELECT tmp.id
            FROM load_test tmp
            JOIN project_version
            ON tmp.project_id = project_version.project_id AND
            tmp.version_id = project_version.id
            AND NOT EXISTS (SELECT ref_id
            FROM load_test tmp2
            JOIN project_version
            ON tmp2.project_id =
            project_version.project_id AND
            version_id =
            project_version.id AND
            project_version.latest = TRUE
            WHERE tmp.ref_id = tmp2.ref_id)
            WHERE tmp.ref_id = #{refId,jdbcType=VARCHAR}
            ORDER BY tmp.update_time DESC
            LIMIT 1)) AS t
        ON load_test.id = t.id
            SET load_test.latest = TRUE
        WHERE ref_id = #{refId,jdbcType=VARCHAR}
    </update>

    <update id="clearLatestVersion">
        UPDATE load_test
        SET latest = 0
        where ref_id = #{refId}
    </update>

    <select id="selectRefIdsForVersionChange" resultType="java.lang.String">
        SELECT DISTINCT ref_id
        FROM load_test
        WHERE ref_id NOT IN (
            SELECT DISTINCT ref_id
            FROM load_test
            WHERE version_id = #{versionId}
              AND project_id = #{projectId}
        )
          AND project_id = #{projectId}
    </select>

    <select id="getFileMetadataByIds" resultType="io.metersphere.base.domain.FileMetadata">
        SELECT file_metadata.*
        FROM load_test_file
                 JOIN file_metadata ON file_id = file_metadata.id
        WHERE test_id = #{testId}
        ORDER BY sort
    </select>

    <select id="selectIds" resultType="java.lang.String">
        select load_test.id
        from load_test
        <include refid="queryWhereCondition"/>
        <include refid="io.metersphere.base.mapper.ext.ExtBaseMapper.orders"/>
    </select>

    <select id="countByRequest" resultType="io.metersphere.dto.LoadCaseCountChartResult">
        select
        <if test="testCaseGroupColumn != null and testCaseGroupColumn != ''">
            ${loadCaseGroupColumn} AS groupName,
        </if>
        count(id) AS countNum
        FROM load_test
        <where>
            project_id = #{projectId} AND latest = 1
            <if test="startTime > 0">
                AND (create_time &gt;= #{startTime})
            </if>
            <if test="endTime > 0">
                AND ( create_time &lt;= #{endTime})
            </if>
            <if test="loadFilterSearchList != null and loadFilterSearchList.size() > 0">
                AND
                <trim prefix="(" prefixOverrides="AND|OR" suffix=")">
                    <foreach collection="loadFilterSearchList.entrySet()" index="key" item="values">
                        <if test="values != null and values.size() > 0">
                            <choose>
                                <when test="key=='creator'">
                                    ${filterType} create_user in
                                    <foreach collection="values" item="value" separator="," open="(" close=")">
                                        #{value}
                                    </foreach>
                                </when>
                                <when test="key=='casestatus'">
                                    ${filterType} UPPER(status) in
                                    <foreach collection="values" item="value" separator="," open="(" close=")">
                                        #{value}
                                    </foreach>
                                </when>
                            </choose>
                        </if>
                    </foreach>
                </trim>
            </if>
        </where>
        <if test="testCaseGroupColumn != null and testCaseGroupColumn != ''">
            GROUP BY ${loadCaseGroupColumn}
        </if>
    </select>

    <select id="relevanceLoadList" resultType="io.metersphere.dto.LoadTestDTO">
        SELECT
        atc.id,
        atc.project_id,
        atc. NAME,
        atc.num,
        atc. STATUS,
        atc.create_time,
        atc.update_time,
        atc.version_id
        FROM
        load_test atc
        LEFT JOIN test_case_test tct ON atc.id = tct.test_id
        and tct.test_case_id = #{request.testCaseId}
        WHERE
        (atc.status is null or atc.status != 'Trash')
        <if test="request.projectId != null and request.projectId!=''">
          and atc.project_id = #{request.projectId}
        </if>
        <if test="request.name != null and request.name!=''">
          and (atc.name like CONCAT('%', #{request.name},'%')
          or atc.num like CONCAT('%', #{request.name},'%'))
        </if>
        <include refid="queryVersionCondition">
          <property name="versionTable" value="atc"/>
        </include>
        <if test="request.notInIds != null and request.notInIds.size() > 0">
          and atc.id not in
          <foreach collection="request.notInIds" item="notInId" separator="," open="(" close=")">
            #{notInId}
          </foreach>
        </if>
        <if test="request.combine != null">
          <include refid="loadCaseCombine">
            <property name="condition" value="request.combine"/>
            <property name="name" value="request.name"/>
            <property name="objectKey" value="request.combine.tags"/>
          </include>
        </if>
        <if test="request.filters != null and request.filters.size() > 0">
          <foreach collection="request.filters.entrySet()" index="key" item="values">
            <if test="values != null and values.size() > 0">
              <choose>
                <when test="key=='version_id'">
                  and atc.version_id in
                  <foreach collection="values" item="value" separator="," open="(" close=")">
                    #{value}
                  </foreach>
                </when>
              </choose>
            </if>
          </foreach>
        </if>
        <include refid="io.metersphere.base.mapper.ext.ExtBaseMapper.orders"/>
    </select>

    <sql id="loadCaseCombine">
        <if test='${condition}.name != null and (${name} == null or ${name} == "")'>
            and atc.name
            <include refid="condition">
                <property name="object" value="${condition}.name"/>
            </include>
        </if>
        <if test="${condition}.updateTime != null">
            and atc.update_time
            <include refid="condition">
                <property name="object" value="${condition}.updateTime"/>
            </include>
        </if>
        <if test="${condition}.createTime != null">
            and atc.create_time
            <include refid="condition">
                <property name="object" value="${condition}.createTime"/>
            </include>
        </if>
        <if test="${condition}.priority != null">
            and atc.priority
            <include refid="condition">
                <property name="object" value="${condition}.priority"/>
            </include>
        </if>
        <if test="${condition}.status != null">
            and atc.status
            <include refid="condition">
                <property name="object" value="${condition}.status"/>
            </include>
        </if>
        <if test='${condition}.tags != null and ${objectKey}.operator == "like"'>
            and atc.tags
            <include refid="condition">
                <property name="object" value="${condition}.tags"/>
            </include>
        </if>
        <if test="${condition}.creator != null">
            and atc.create_user
            <include refid="condition">
                <property name="object" value="${condition}.creator"/>
            </include>
        </if>
    </sql>

    <select id="selectBaseCaseByProjectId" resultType="io.metersphere.dto.BaseCase">
        select load_test.id, load_test.name, load_test.project_id,'性能测试' as type, project_version.name as version_name
        from load_test inner join project_version on project_version.project_id = load_test.project_id and
        project_version.id = load_test.version_id
        <where>
            <if test="projectId!=null">
                and load_test.project_id= #{projectId}
            </if>
        </where>
    </select>
</mapper>
