<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.base.mapper.ext.ExtTestPlanLoadCaseMapper">
    <update id="updateCaseStatus">
        update test_plan_load_case tplc
        set status = #{status}
        where tplc.load_report_id = #{reportId}
    </update>
    <update id="updateCaseStatusByApi">
        update test_plan_load_case tplc
        set status = #{status}
        where tplc.load_case_id = #{loadCaseId}
          and tplc.test_plan_id = #{testPlanId}
    </update>

    <select id="selectIdsNotInPlan" resultType="java.lang.String">
        select load_test.id
        from load_test
        where load_test.project_id = #{request.projectId}
        <if test="!request.repeatCase">
            and load_test.id not in (
            select tplc.load_case_id from test_plan_load_case tplc where tplc.test_plan_id = #{request.testPlanId}
            )
        </if>
        <if test="request.name != null and request.name != ''">
            and (load_test.name like CONCAT('%', #{request.name},'%') OR load_test.num like CONCAT('%',
            #{request.name},'%'))
        </if>
        <if test="request.versionId != null">
            and load_test.version_id = #{request.versionId}
        </if>
        <if test="request.refId != null">
            and load_test.ref_id = #{request.refId}
        </if>
        <if test="request.filters != null and request.filters.size() > 0">
            <foreach collection="request.filters.entrySet()" index="key" item="values">
                <if test="values != null and values.size() > 0">
                    <choose>
                        <when test="key=='status'">
                            and load_test.status in
                            <foreach collection="values" item="value" separator="," open="(" close=")">
                                #{value}
                            </foreach>
                        </when>
                        <when test="key=='version_id'">
                            and load_test.version_id in
                            <foreach collection="values" item="value" separator="," open="(" close=")">
                                #{value}
                            </foreach>
                        </when>
                    </choose>
                </if>
            </foreach>
        </if>
        <if test="request.combine != null">
            <include refid="combine">
                <property name="condition" value="request.combine"/>
                <property name="name" value="request.name"/>
                <property name="objectKey" value="request.combine.tags"/>
            </include>
        </if>
    </select>
    <sql id="condition">
        <choose>
            <when test='${object}.operator == "like"'>
                like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "not like"'>
                not like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "in"'>
                in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "not in"'>
                not in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "between"'>
                between #{${object}.value[0]} and #{${object}.value[1]}
            </when>
            <when test='${object}.operator == "gt"'>
                &gt; #{${object}.value}
            </when>
            <when test='${object}.operator == "lt"'>
                &lt; #{${object}.value}
            </when>
            <when test='${object}.operator == "ge"'>
                &gt;= #{${object}.value}
            </when>
            <when test='${object}.operator == "le"'>
                &lt;= #{${object}.value}
            </when>
            <when test='${object}.operator == "current user"'>
                = '${@io.metersphere.commons.utils.SessionUtils@getUserId()}'
            </when>
            <otherwise>
                = #{${object}.value}
            </otherwise>
        </choose>
    </sql>
    <sql id="combine">
        <if test='${condition}.name != null and (${name} == null or ${name} == "")'>
            and load_test.name
            <include refid="condition">
                <property name="object" value="${condition}.name"/>
            </include>
        </if>
        <if test="${condition}.updateTime != null">
            and load_test.update_time
            <include refid="condition">
                <property name="object" value="${condition}.updateTime"/>
            </include>
        </if>
        <if test="${condition}.createTime != null">
            and load_test.create_time
            <include refid="condition">
                <property name="object" value="${condition}.createTime"/>
            </include>
        </if>
        <if test="${condition}.status != null">
            and load_test.status
            <include refid="condition">
                <property name="object" value="${condition}.status"/>
            </include>
        </if>
        <if test="${condition}.creator != null">
            and load_test.create_user
            <include refid="condition">
                <property name="object" value="${condition}.creator"/>
            </include>
        </if>
        <include refid="io.metersphere.base.mapper.ext.ExtBaseMapper.orders"/>
    </sql>
    <select id="selectTestPlanLoadCaseList" resultType="io.metersphere.plan.dto.TestPlanLoadCaseDTO">
        select tplc.id,
        u.name as userName,
        tplc.create_time,
        tplc.update_time,
        tplc.test_plan_id,
        tplc.load_case_id,
        lt.status,
        lt.num,
        tplc.status as caseStatus,
        lt.name as caseName,
        tplc.load_report_id,
        p.name as projectName,
        pv.name versionName,
        lt.version_id versionId
        from test_plan_load_case tplc
        inner join load_test lt on tplc.load_case_id = lt.id
        left join user u on lt.user_id = u.id
        left join project p on lt.project_id = p.id
        left join project_version pv on lt.project_id = pv.project_id and lt.version_id = pv.id
        <where>
            tplc.test_plan_id = #{request.testPlanId}
            <if test="request.caseIds != null and request.caseIds.size > 0">
                AND lt.id IN
                <foreach collection="request.caseIds" item="value" separator="," open="(" close=")">
                    #{value}
                </foreach>
            </if>
            <if test="request.projectId != null and request.projectId != ''">
                and lt.project_id = #{request.projectId}
            </if>
            <if test="request.name != null">
                and (lt.name like CONCAT('%', #{request.name},'%') or lt.num like CONCAT('%', #{request.name},'%'))
            </if>
            <if test="request.status != null">
                and tplc.status like CONCAT('%', #{request.status},'%')
            </if>
            <if test="request.filters != null and request.filters.size() > 0">
                <foreach collection="request.filters.entrySet()" index="key" item="values">
                    <if test="values != null and values.size() > 0">
                        <choose>
                            <when test="key=='status'">
                                and lt.status in
                                <foreach collection="values" item="value" separator="," open="(" close=")">
                                    #{value}
                                </foreach>
                            </when>
                            <when test="key=='version_id'">
                                and lt.version_id in
                                <foreach collection="values" item="value" separator="," open="(" close=")">
                                    #{value}
                                </foreach>
                            </when>
                        </choose>
                    </if>
                </foreach>
            </if>
        </where>
        <include refid="queryVersionCondition">
            <property name="versionTable" value="lt"/>
        </include>
        <if test="request.orders != null and request.orders.size() > 0">
            order by
            <foreach collection="request.orders" separator="," item="order">
                <choose>
                    <when test="order.name == 'num'">
                        lt.${order.name} ${order.type}
                    </when>
                    <when test="order.name == 'case_name'">
                        lt.name ${order.type}
                    </when>
                    <otherwise>
                        tplc.${order.name} ${order.type}
                    </otherwise>
                </choose>
            </foreach>
        </if>
    </select>

    <select id="selectByIdIn" resultType="io.metersphere.plan.dto.TestPlanLoadCaseDTO">
        select tplc.id,
        u.name as userName,
        tplc.create_time,
        tplc.update_time,
        tplc.test_plan_id,
        tplc.load_case_id,
        lt.status,
        lt.num,
        tplc.status as caseStatus,
        lt.name as caseName,
        tplc.load_report_id,
        p.name as projectName
        from test_plan_load_case tplc
        inner join load_test lt on tplc.load_case_id = lt.id
        inner join user u on lt.user_id = u.id
        inner join project p on lt.project_id = p.id
        WHERE tplc.id in
        <foreach collection="request.ids" item="value" separator="," open="(" close=")">
            #{value}
        </foreach>
        <if test="request.orders != null and request.orders.size() > 0">
            order by
            <foreach collection="request.orders" separator="," item="order">
                tplc.${order.name} ${order.type}
            </foreach>
        </if>
    </select>
    <select id="selectTestPlanLoadCaseId" resultType="java.lang.String">
        select tplc.id
        from test_plan_load_case tplc
        inner join load_test lt on tplc.load_case_id = lt.id
        inner join user u on lt.user_id = u.id
        inner join project p on lt.project_id = p.id
        <where>
            tplc.test_plan_id = #{request.testPlanId}
            <if test="request.projectId != null and request.projectId != ''">
                and lt.project_id = #{request.projectId}
            </if>
            <if test="request.name != null">
                and (lt.name like CONCAT('%', #{request.name},'%') or lt.num like CONCAT('%', #{request.name},'%'))
            </if>
            <if test="request.status != null">
                and tplc.status like CONCAT('%', #{request.status},'%')
            </if>
            <if test="request.filters != null and request.filters.size() > 0">
                <foreach collection="request.filters.entrySet()" index="key" item="values">
                    <if test="values != null and values.size() > 0">
                        <choose>
                            <when test="key=='status'">
                                and lt.status in
                                <foreach collection="values" item="value" separator="," open="(" close=")">
                                    #{value}
                                </foreach>
                            </when>
                        </choose>
                    </if>
                </foreach>
            </if>
        </where>
        <if test="request.orders != null and request.orders.size() > 0">
            order by
            <foreach collection="request.orders" separator="," item="order">
                tplc.${order.name} ${order.type}
            </foreach>
        </if>
    </select>
    <select id="getStatusByTestPlanId" resultType="java.lang.String">
        select status
        from test_plan_load_case tplc
        where tplc.test_plan_id = #{planId}
    </select>
    <select id="selectForPlanReport" resultType="io.metersphere.dto.PlanReportCaseDTO">
        select tplc.id, tplc.status
        from test_plan_load_case tplc
                 inner join load_test lt on tplc.load_case_id = lt.id
        where tplc.test_plan_id = #{planId};
    </select>
    <select id="getCases" resultType="io.metersphere.plan.dto.TestPlanLoadCaseDTO">
        select tplc.id, lt.id as caseId, lt.name, lt.num, lt.project_id,
        tplc.status ,lt.create_user, tplc.load_report_id
        from test_plan_load_case tplc
        inner join load_test lt on tplc.load_case_id = lt.id
        <if test="status != null">
            and tplc.status = 'error'
        </if>
        where tplc.test_plan_id = #{planId} ORDER BY tplc.order DESC
    </select>

    <select id="getCasesByIds" resultType="io.metersphere.plan.dto.TestPlanLoadCaseDTO">
        select tplc.id, lt.id as caseId, lt.name, lt.num, lt.project_id,
        lt.create_user, tplc.load_report_id
        from test_plan_load_case tplc
        inner join load_test lt on tplc.load_case_id = lt.id
        where tplc.id IN
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </select>

    <select id="selectPlanIds" resultType="java.lang.String">
        select DISTINCT test_plan_id
        from test_plan_load_case;
    </select>
    <select id="getIdsOrderByUpdateTime" resultType="java.lang.String">
        select id
        from test_plan_load_case
        where test_plan_id = #{planId}
        order by update_time ASC;
    </select>

    <select id="getLastOrder" resultType="java.lang.Long">
        select `order` from test_plan_load_case where test_plan_id = #{planId}
        <if test="baseOrder != null">
            and `order` &gt; #{baseOrder}
        </if>
        order by `order` desc limit 1;
    </select>

    <select id="getPreOrder" resultType="java.lang.Long">
        select `order` from test_plan_load_case where test_plan_id = #{planId}
        <if test="baseOrder != null">
            and `order` &lt; #{baseOrder}
        </if>
        order by `order` desc limit 1;
    </select>

    <select id="selectIdByLoadCaseReportIdAndStatusIsRun" resultType="java.lang.String">
        select `id`
        from test_plan_load_case
        where load_report_id = #{planId}
          and `status` = 'run'
    </select>
    <select id="selectPlanIdByTestPlanId" resultType="java.lang.String">
        SELECT plan.project_id from test_plan plan LEFT JOIN
                                    test_plan_report report on plan.id = report.test_plan_id
        where report.id =#{id}
    </select>
    <update id="updateStatusNullById">
        update test_plan_load_case tplc
        set status = null
        where id = #{0}
    </update>

    <sql id="queryVersionCondition">
        <if test="request.versionId != null">
            and ${versionTable}.version_id = #{request.versionId}
        </if>
        <if test="request.refId != null">
            and ${versionTable}.ref_id = #{request.refId}
        </if>
    </sql>
</mapper>
