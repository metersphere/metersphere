<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.metersphere.base.mapper.ext.ExtGroupMapper">


    <select id="getGroupList" resultType="io.metersphere.dto.GroupDTO">
        SELECT *,
        (SELECT COUNT(DISTINCT ug.user_id) FROM user_group ug JOIN user ON ug.user_id = user.id WHERE ug.group_id =
        temp.id AND ug.source_id = #{request.projectId}) AS memberSize
        FROM (
        SELECT g.*, w.name AS scopeName FROM `group` g, workspace w
        <where>
            and g.scope_id = w.id
            <if test="request.types != null and request.types.size() > 0">
                AND g.type IN
                <foreach collection="request.types" item="type" separator="," open="(" close=")">
                    #{type}
                </foreach>
            </if>
            <if test="request.scopes != null and request.scopes.size() > 0">
                AND g.scope_id IN
                <foreach collection="request.scopes" item="scope" separator="," open="(" close=")">
                    #{scope}
                </foreach>
            </if>
        </where>
        UNION DISTINCT
        SELECT g.*, 'global' AS scopeName FROM `group` g
        <where>
            g.scope_id = 'global'
            <if test="request.types != null and request.types.size() > 0">
                AND g.type IN
                <foreach collection="request.types" item="type" separator="," open="(" close=")">
                    #{type}
                </foreach>
            </if>
        </where>
        union distinct
        select g.*, p.name as scopeName from `group` g, project p
        <where>
            and g.scope_id = p.id
            <if test="request.types != null and request.types.size() > 0">
                AND g.type in
                <foreach collection="request.types" item="type" separator="," open="(" close=")">
                    #{type}
                </foreach>
            </if>
            <if test="request.scopes != null and request.scopes.size() > 0">
                AND g.scope_id in
                <foreach collection="request.scopes" item="scope" separator="," open="(" close=")">
                    #{scope}
                </foreach>
            </if>
        </where>
        ) temp
        <if test="request.name != null and request.name!=''">
            WHERE temp.name LIKE CONCAT('%', #{request.name},'%')
        </if>
        <if test="request.orders == null or request.orders.size() == 0">
            ORDER BY field(temp.type, 'SYSTEM', 'WORKSPACE', 'PROJECT'), temp.update_time, temp.name
        </if>
        <if test="request.orders != null and request.orders.size() > 0">
            ORDER BY
            <foreach collection="request.orders" separator="," item="order">
                temp.${order.name} ${order.type}, temp.name DESC
            </foreach>
        </if>
    </select>
</mapper>