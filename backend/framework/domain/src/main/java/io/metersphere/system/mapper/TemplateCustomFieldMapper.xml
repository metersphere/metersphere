<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.system.mapper.TemplateCustomFieldMapper">
  <resultMap id="BaseResultMap" type="io.metersphere.system.domain.TemplateCustomField">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="field_id" jdbcType="VARCHAR" property="fieldId" />
    <result column="template_id" jdbcType="VARCHAR" property="templateId" />
    <result column="required" jdbcType="BIT" property="required" />
    <result column="pos" jdbcType="INTEGER" property="pos" />
    <result column="api_field_id" jdbcType="VARCHAR" property="apiFieldId" />
    <result column="default_value" jdbcType="VARCHAR" property="defaultValue" />
    <result column="system_field" jdbcType="BIT" property="systemField" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, field_id, template_id, required, pos, api_field_id, default_value, system_field
  </sql>
  <select id="selectByExample" parameterType="io.metersphere.system.domain.TemplateCustomFieldExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from template_custom_field
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from template_custom_field
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from template_custom_field
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="io.metersphere.system.domain.TemplateCustomFieldExample">
    delete from template_custom_field
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.metersphere.system.domain.TemplateCustomField">
    insert into template_custom_field (id, field_id, template_id, 
      required, pos, api_field_id, 
      default_value, system_field)
    values (#{id,jdbcType=VARCHAR}, #{fieldId,jdbcType=VARCHAR}, #{templateId,jdbcType=VARCHAR}, 
      #{required,jdbcType=BIT}, #{pos,jdbcType=INTEGER}, #{apiFieldId,jdbcType=VARCHAR}, 
      #{defaultValue,jdbcType=VARCHAR}, #{systemField,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="io.metersphere.system.domain.TemplateCustomField">
    insert into template_custom_field
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fieldId != null">
        field_id,
      </if>
      <if test="templateId != null">
        template_id,
      </if>
      <if test="required != null">
        required,
      </if>
      <if test="pos != null">
        pos,
      </if>
      <if test="apiFieldId != null">
        api_field_id,
      </if>
      <if test="defaultValue != null">
        default_value,
      </if>
      <if test="systemField != null">
        system_field,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="fieldId != null">
        #{fieldId,jdbcType=VARCHAR},
      </if>
      <if test="templateId != null">
        #{templateId,jdbcType=VARCHAR},
      </if>
      <if test="required != null">
        #{required,jdbcType=BIT},
      </if>
      <if test="pos != null">
        #{pos,jdbcType=INTEGER},
      </if>
      <if test="apiFieldId != null">
        #{apiFieldId,jdbcType=VARCHAR},
      </if>
      <if test="defaultValue != null">
        #{defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="systemField != null">
        #{systemField,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.metersphere.system.domain.TemplateCustomFieldExample" resultType="java.lang.Long">
    select count(*) from template_custom_field
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update template_custom_field
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.fieldId != null">
        field_id = #{record.fieldId,jdbcType=VARCHAR},
      </if>
      <if test="record.templateId != null">
        template_id = #{record.templateId,jdbcType=VARCHAR},
      </if>
      <if test="record.required != null">
        required = #{record.required,jdbcType=BIT},
      </if>
      <if test="record.pos != null">
        pos = #{record.pos,jdbcType=INTEGER},
      </if>
      <if test="record.apiFieldId != null">
        api_field_id = #{record.apiFieldId,jdbcType=VARCHAR},
      </if>
      <if test="record.defaultValue != null">
        default_value = #{record.defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="record.systemField != null">
        system_field = #{record.systemField,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update template_custom_field
    set id = #{record.id,jdbcType=VARCHAR},
      field_id = #{record.fieldId,jdbcType=VARCHAR},
      template_id = #{record.templateId,jdbcType=VARCHAR},
      required = #{record.required,jdbcType=BIT},
      pos = #{record.pos,jdbcType=INTEGER},
      api_field_id = #{record.apiFieldId,jdbcType=VARCHAR},
      default_value = #{record.defaultValue,jdbcType=VARCHAR},
      system_field = #{record.systemField,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.metersphere.system.domain.TemplateCustomField">
    update template_custom_field
    <set>
      <if test="fieldId != null">
        field_id = #{fieldId,jdbcType=VARCHAR},
      </if>
      <if test="templateId != null">
        template_id = #{templateId,jdbcType=VARCHAR},
      </if>
      <if test="required != null">
        required = #{required,jdbcType=BIT},
      </if>
      <if test="pos != null">
        pos = #{pos,jdbcType=INTEGER},
      </if>
      <if test="apiFieldId != null">
        api_field_id = #{apiFieldId,jdbcType=VARCHAR},
      </if>
      <if test="defaultValue != null">
        default_value = #{defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="systemField != null">
        system_field = #{systemField,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.metersphere.system.domain.TemplateCustomField">
    update template_custom_field
    set field_id = #{fieldId,jdbcType=VARCHAR},
      template_id = #{templateId,jdbcType=VARCHAR},
      required = #{required,jdbcType=BIT},
      pos = #{pos,jdbcType=INTEGER},
      api_field_id = #{apiFieldId,jdbcType=VARCHAR},
      default_value = #{defaultValue,jdbcType=VARCHAR},
      system_field = #{systemField,jdbcType=BIT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <insert id="batchInsert" parameterType="map">
    insert into template_custom_field
    (id, field_id, template_id, required, pos, api_field_id, default_value, system_field
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=VARCHAR}, #{item.fieldId,jdbcType=VARCHAR}, #{item.templateId,jdbcType=VARCHAR}, 
        #{item.required,jdbcType=BIT}, #{item.pos,jdbcType=INTEGER}, #{item.apiFieldId,jdbcType=VARCHAR}, 
        #{item.defaultValue,jdbcType=VARCHAR}, #{item.systemField,jdbcType=BIT})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into template_custom_field (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=VARCHAR}
        </if>
        <if test="'field_id'.toString() == column.value">
          #{item.fieldId,jdbcType=VARCHAR}
        </if>
        <if test="'template_id'.toString() == column.value">
          #{item.templateId,jdbcType=VARCHAR}
        </if>
        <if test="'required'.toString() == column.value">
          #{item.required,jdbcType=BIT}
        </if>
        <if test="'pos'.toString() == column.value">
          #{item.pos,jdbcType=INTEGER}
        </if>
        <if test="'api_field_id'.toString() == column.value">
          #{item.apiFieldId,jdbcType=VARCHAR}
        </if>
        <if test="'default_value'.toString() == column.value">
          #{item.defaultValue,jdbcType=VARCHAR}
        </if>
        <if test="'system_field'.toString() == column.value">
          #{item.systemField,jdbcType=BIT}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>