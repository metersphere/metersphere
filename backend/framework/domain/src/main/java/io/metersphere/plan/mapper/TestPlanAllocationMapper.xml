<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.plan.mapper.TestPlanAllocationMapper">
  <resultMap id="BaseResultMap" type="io.metersphere.plan.domain.TestPlanAllocation">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="test_plan_id" jdbcType="VARCHAR" property="testPlanId" />
    <result column="test_resource_pool_id" jdbcType="VARCHAR" property="testResourcePoolId" />
    <result column="retry_on_fail" jdbcType="BIT" property="retryOnFail" />
    <result column="retry_type" jdbcType="VARCHAR" property="retryType" />
    <result column="retry_times" jdbcType="INTEGER" property="retryTimes" />
    <result column="retry_interval" jdbcType="INTEGER" property="retryInterval" />
    <result column="stop_on_fail" jdbcType="BIT" property="stopOnFail" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, test_plan_id, test_resource_pool_id, retry_on_fail, retry_type, retry_times, 
    retry_interval, stop_on_fail
  </sql>
  <select id="selectByExample" parameterType="io.metersphere.plan.domain.TestPlanAllocationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from test_plan_allocation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from test_plan_allocation
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from test_plan_allocation
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="io.metersphere.plan.domain.TestPlanAllocationExample">
    delete from test_plan_allocation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.metersphere.plan.domain.TestPlanAllocation">
    insert into test_plan_allocation (id, test_plan_id, test_resource_pool_id, 
      retry_on_fail, retry_type, retry_times, 
      retry_interval, stop_on_fail)
    values (#{id,jdbcType=VARCHAR}, #{testPlanId,jdbcType=VARCHAR}, #{testResourcePoolId,jdbcType=VARCHAR}, 
      #{retryOnFail,jdbcType=BIT}, #{retryType,jdbcType=VARCHAR}, #{retryTimes,jdbcType=INTEGER}, 
      #{retryInterval,jdbcType=INTEGER}, #{stopOnFail,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="io.metersphere.plan.domain.TestPlanAllocation">
    insert into test_plan_allocation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="testPlanId != null">
        test_plan_id,
      </if>
      <if test="testResourcePoolId != null">
        test_resource_pool_id,
      </if>
      <if test="retryOnFail != null">
        retry_on_fail,
      </if>
      <if test="retryType != null">
        retry_type,
      </if>
      <if test="retryTimes != null">
        retry_times,
      </if>
      <if test="retryInterval != null">
        retry_interval,
      </if>
      <if test="stopOnFail != null">
        stop_on_fail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="testPlanId != null">
        #{testPlanId,jdbcType=VARCHAR},
      </if>
      <if test="testResourcePoolId != null">
        #{testResourcePoolId,jdbcType=VARCHAR},
      </if>
      <if test="retryOnFail != null">
        #{retryOnFail,jdbcType=BIT},
      </if>
      <if test="retryType != null">
        #{retryType,jdbcType=VARCHAR},
      </if>
      <if test="retryTimes != null">
        #{retryTimes,jdbcType=INTEGER},
      </if>
      <if test="retryInterval != null">
        #{retryInterval,jdbcType=INTEGER},
      </if>
      <if test="stopOnFail != null">
        #{stopOnFail,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.metersphere.plan.domain.TestPlanAllocationExample" resultType="java.lang.Long">
    select count(*) from test_plan_allocation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update test_plan_allocation
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.testPlanId != null">
        test_plan_id = #{record.testPlanId,jdbcType=VARCHAR},
      </if>
      <if test="record.testResourcePoolId != null">
        test_resource_pool_id = #{record.testResourcePoolId,jdbcType=VARCHAR},
      </if>
      <if test="record.retryOnFail != null">
        retry_on_fail = #{record.retryOnFail,jdbcType=BIT},
      </if>
      <if test="record.retryType != null">
        retry_type = #{record.retryType,jdbcType=VARCHAR},
      </if>
      <if test="record.retryTimes != null">
        retry_times = #{record.retryTimes,jdbcType=INTEGER},
      </if>
      <if test="record.retryInterval != null">
        retry_interval = #{record.retryInterval,jdbcType=INTEGER},
      </if>
      <if test="record.stopOnFail != null">
        stop_on_fail = #{record.stopOnFail,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update test_plan_allocation
    set id = #{record.id,jdbcType=VARCHAR},
      test_plan_id = #{record.testPlanId,jdbcType=VARCHAR},
      test_resource_pool_id = #{record.testResourcePoolId,jdbcType=VARCHAR},
      retry_on_fail = #{record.retryOnFail,jdbcType=BIT},
      retry_type = #{record.retryType,jdbcType=VARCHAR},
      retry_times = #{record.retryTimes,jdbcType=INTEGER},
      retry_interval = #{record.retryInterval,jdbcType=INTEGER},
      stop_on_fail = #{record.stopOnFail,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.metersphere.plan.domain.TestPlanAllocation">
    update test_plan_allocation
    <set>
      <if test="testPlanId != null">
        test_plan_id = #{testPlanId,jdbcType=VARCHAR},
      </if>
      <if test="testResourcePoolId != null">
        test_resource_pool_id = #{testResourcePoolId,jdbcType=VARCHAR},
      </if>
      <if test="retryOnFail != null">
        retry_on_fail = #{retryOnFail,jdbcType=BIT},
      </if>
      <if test="retryType != null">
        retry_type = #{retryType,jdbcType=VARCHAR},
      </if>
      <if test="retryTimes != null">
        retry_times = #{retryTimes,jdbcType=INTEGER},
      </if>
      <if test="retryInterval != null">
        retry_interval = #{retryInterval,jdbcType=INTEGER},
      </if>
      <if test="stopOnFail != null">
        stop_on_fail = #{stopOnFail,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.metersphere.plan.domain.TestPlanAllocation">
    update test_plan_allocation
    set test_plan_id = #{testPlanId,jdbcType=VARCHAR},
      test_resource_pool_id = #{testResourcePoolId,jdbcType=VARCHAR},
      retry_on_fail = #{retryOnFail,jdbcType=BIT},
      retry_type = #{retryType,jdbcType=VARCHAR},
      retry_times = #{retryTimes,jdbcType=INTEGER},
      retry_interval = #{retryInterval,jdbcType=INTEGER},
      stop_on_fail = #{stopOnFail,jdbcType=BIT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <insert id="batchInsert" parameterType="map">
    insert into test_plan_allocation
    (id, test_plan_id, test_resource_pool_id, retry_on_fail, retry_type, retry_times, 
      retry_interval, stop_on_fail)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=VARCHAR}, #{item.testPlanId,jdbcType=VARCHAR}, #{item.testResourcePoolId,jdbcType=VARCHAR}, 
        #{item.retryOnFail,jdbcType=BIT}, #{item.retryType,jdbcType=VARCHAR}, #{item.retryTimes,jdbcType=INTEGER}, 
        #{item.retryInterval,jdbcType=INTEGER}, #{item.stopOnFail,jdbcType=BIT})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into test_plan_allocation (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=VARCHAR}
        </if>
        <if test="'test_plan_id'.toString() == column.value">
          #{item.testPlanId,jdbcType=VARCHAR}
        </if>
        <if test="'test_resource_pool_id'.toString() == column.value">
          #{item.testResourcePoolId,jdbcType=VARCHAR}
        </if>
        <if test="'retry_on_fail'.toString() == column.value">
          #{item.retryOnFail,jdbcType=BIT}
        </if>
        <if test="'retry_type'.toString() == column.value">
          #{item.retryType,jdbcType=VARCHAR}
        </if>
        <if test="'retry_times'.toString() == column.value">
          #{item.retryTimes,jdbcType=INTEGER}
        </if>
        <if test="'retry_interval'.toString() == column.value">
          #{item.retryInterval,jdbcType=INTEGER}
        </if>
        <if test="'stop_on_fail'.toString() == column.value">
          #{item.stopOnFail,jdbcType=BIT}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>