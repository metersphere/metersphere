<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.plan.mapper.TestPlanApiScenarioMapper">
  <resultMap id="BaseResultMap" type="io.metersphere.plan.domain.TestPlanApiScenario">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="test_plan_id" jdbcType="VARCHAR" property="testPlanId" />
    <result column="api_scenario_id" jdbcType="VARCHAR" property="apiScenarioId" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="pos" jdbcType="BIGINT" property="pos" />
    <result column="environment_type" jdbcType="VARCHAR" property="environmentType" />
    <result column="environment_group_id" jdbcType="VARCHAR" property="environmentGroupId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="io.metersphere.plan.domain.TestPlanApiScenario">
    <result column="environment" jdbcType="LONGVARCHAR" property="environment" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, test_plan_id, api_scenario_id, create_time, create_user, pos, environment_type, 
    environment_group_id
  </sql>
  <sql id="Blob_Column_List">
    environment
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="io.metersphere.plan.domain.TestPlanApiScenarioExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from test_plan_api_scenario
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="io.metersphere.plan.domain.TestPlanApiScenarioExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from test_plan_api_scenario
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from test_plan_api_scenario
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from test_plan_api_scenario
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="io.metersphere.plan.domain.TestPlanApiScenarioExample">
    delete from test_plan_api_scenario
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.metersphere.plan.domain.TestPlanApiScenario">
    insert into test_plan_api_scenario (id, test_plan_id, api_scenario_id, 
      create_time, create_user, pos, 
      environment_type, environment_group_id, environment
      )
    values (#{id,jdbcType=VARCHAR}, #{testPlanId,jdbcType=VARCHAR}, #{apiScenarioId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=BIGINT}, #{createUser,jdbcType=VARCHAR}, #{pos,jdbcType=BIGINT}, 
      #{environmentType,jdbcType=VARCHAR}, #{environmentGroupId,jdbcType=VARCHAR}, #{environment,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="io.metersphere.plan.domain.TestPlanApiScenario">
    insert into test_plan_api_scenario
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="testPlanId != null">
        test_plan_id,
      </if>
      <if test="apiScenarioId != null">
        api_scenario_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="pos != null">
        pos,
      </if>
      <if test="environmentType != null">
        environment_type,
      </if>
      <if test="environmentGroupId != null">
        environment_group_id,
      </if>
      <if test="environment != null">
        environment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="testPlanId != null">
        #{testPlanId,jdbcType=VARCHAR},
      </if>
      <if test="apiScenarioId != null">
        #{apiScenarioId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="pos != null">
        #{pos,jdbcType=BIGINT},
      </if>
      <if test="environmentType != null">
        #{environmentType,jdbcType=VARCHAR},
      </if>
      <if test="environmentGroupId != null">
        #{environmentGroupId,jdbcType=VARCHAR},
      </if>
      <if test="environment != null">
        #{environment,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.metersphere.plan.domain.TestPlanApiScenarioExample" resultType="java.lang.Long">
    select count(*) from test_plan_api_scenario
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update test_plan_api_scenario
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.testPlanId != null">
        test_plan_id = #{record.testPlanId,jdbcType=VARCHAR},
      </if>
      <if test="record.apiScenarioId != null">
        api_scenario_id = #{record.apiScenarioId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.pos != null">
        pos = #{record.pos,jdbcType=BIGINT},
      </if>
      <if test="record.environmentType != null">
        environment_type = #{record.environmentType,jdbcType=VARCHAR},
      </if>
      <if test="record.environmentGroupId != null">
        environment_group_id = #{record.environmentGroupId,jdbcType=VARCHAR},
      </if>
      <if test="record.environment != null">
        environment = #{record.environment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update test_plan_api_scenario
    set id = #{record.id,jdbcType=VARCHAR},
      test_plan_id = #{record.testPlanId,jdbcType=VARCHAR},
      api_scenario_id = #{record.apiScenarioId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      pos = #{record.pos,jdbcType=BIGINT},
      environment_type = #{record.environmentType,jdbcType=VARCHAR},
      environment_group_id = #{record.environmentGroupId,jdbcType=VARCHAR},
      environment = #{record.environment,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update test_plan_api_scenario
    set id = #{record.id,jdbcType=VARCHAR},
      test_plan_id = #{record.testPlanId,jdbcType=VARCHAR},
      api_scenario_id = #{record.apiScenarioId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      pos = #{record.pos,jdbcType=BIGINT},
      environment_type = #{record.environmentType,jdbcType=VARCHAR},
      environment_group_id = #{record.environmentGroupId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.metersphere.plan.domain.TestPlanApiScenario">
    update test_plan_api_scenario
    <set>
      <if test="testPlanId != null">
        test_plan_id = #{testPlanId,jdbcType=VARCHAR},
      </if>
      <if test="apiScenarioId != null">
        api_scenario_id = #{apiScenarioId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="pos != null">
        pos = #{pos,jdbcType=BIGINT},
      </if>
      <if test="environmentType != null">
        environment_type = #{environmentType,jdbcType=VARCHAR},
      </if>
      <if test="environmentGroupId != null">
        environment_group_id = #{environmentGroupId,jdbcType=VARCHAR},
      </if>
      <if test="environment != null">
        environment = #{environment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="io.metersphere.plan.domain.TestPlanApiScenario">
    update test_plan_api_scenario
    set test_plan_id = #{testPlanId,jdbcType=VARCHAR},
      api_scenario_id = #{apiScenarioId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      create_user = #{createUser,jdbcType=VARCHAR},
      pos = #{pos,jdbcType=BIGINT},
      environment_type = #{environmentType,jdbcType=VARCHAR},
      environment_group_id = #{environmentGroupId,jdbcType=VARCHAR},
      environment = #{environment,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.metersphere.plan.domain.TestPlanApiScenario">
    update test_plan_api_scenario
    set test_plan_id = #{testPlanId,jdbcType=VARCHAR},
      api_scenario_id = #{apiScenarioId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      create_user = #{createUser,jdbcType=VARCHAR},
      pos = #{pos,jdbcType=BIGINT},
      environment_type = #{environmentType,jdbcType=VARCHAR},
      environment_group_id = #{environmentGroupId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>