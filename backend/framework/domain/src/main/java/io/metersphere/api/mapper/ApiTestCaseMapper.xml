<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.api.mapper.ApiTestCaseMapper">
  <resultMap id="BaseResultMap" type="io.metersphere.api.domain.ApiTestCase">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="delete_user" jdbcType="VARCHAR" property="deleteUser" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
    <result column="priority" jdbcType="VARCHAR" property="priority" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="tags" jdbcType="VARCHAR" property="tags" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="api_report_status" jdbcType="VARCHAR" property="apiReportStatus" />
    <result column="api_report_id" jdbcType="VARCHAR" property="apiReportId" />
    <result column="pos" jdbcType="BIGINT" property="pos" />
    <result column="sync_enable" jdbcType="BIT" property="syncEnable" />
    <result column="sync_time" jdbcType="BIGINT" property="syncTime" />
    <result column="project_id" jdbcType="VARCHAR" property="projectId" />
    <result column="api_definition_id" jdbcType="VARCHAR" property="apiDefinitionId" />
    <result column="version_id" jdbcType="VARCHAR" property="versionId" />
    <result column="principal" jdbcType="VARCHAR" property="principal" />
    <result column="environment_id" jdbcType="VARCHAR" property="environmentId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `name`, create_time, create_user, update_time, update_user, delete_time, delete_user, 
    deleted, priority, num, tags, `status`, api_report_status, api_report_id, pos, sync_enable, 
    sync_time, project_id, api_definition_id, version_id, principal, environment_id
  </sql>
  <select id="selectByExample" parameterType="io.metersphere.api.domain.ApiTestCaseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from api_test_case
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from api_test_case
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from api_test_case
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="io.metersphere.api.domain.ApiTestCaseExample">
    delete from api_test_case
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.metersphere.api.domain.ApiTestCase">
    insert into api_test_case (id, `name`, create_time, 
      create_user, update_time, update_user, 
      delete_time, delete_user, deleted, 
      priority, num, tags, 
      `status`, api_report_status, api_report_id, 
      pos, sync_enable, sync_time, 
      project_id, api_definition_id, version_id, 
      principal, environment_id)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, 
      #{createUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=BIGINT}, #{updateUser,jdbcType=VARCHAR}, 
      #{deleteTime,jdbcType=BIGINT}, #{deleteUser,jdbcType=VARCHAR}, #{deleted,jdbcType=BIT}, 
      #{priority,jdbcType=VARCHAR}, #{num,jdbcType=INTEGER}, #{tags,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{apiReportStatus,jdbcType=VARCHAR}, #{apiReportId,jdbcType=VARCHAR}, 
      #{pos,jdbcType=BIGINT}, #{syncEnable,jdbcType=BIT}, #{syncTime,jdbcType=BIGINT}, 
      #{projectId,jdbcType=VARCHAR}, #{apiDefinitionId,jdbcType=VARCHAR}, #{versionId,jdbcType=VARCHAR}, 
      #{principal,jdbcType=VARCHAR}, #{environmentId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="io.metersphere.api.domain.ApiTestCase">
    insert into api_test_case
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="deleteUser != null">
        delete_user,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="priority != null">
        priority,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="tags != null">
        tags,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="apiReportStatus != null">
        api_report_status,
      </if>
      <if test="apiReportId != null">
        api_report_id,
      </if>
      <if test="pos != null">
        pos,
      </if>
      <if test="syncEnable != null">
        sync_enable,
      </if>
      <if test="syncTime != null">
        sync_time,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="apiDefinitionId != null">
        api_definition_id,
      </if>
      <if test="versionId != null">
        version_id,
      </if>
      <if test="principal != null">
        principal,
      </if>
      <if test="environmentId != null">
        environment_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="deleteUser != null">
        #{deleteUser,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
      <if test="priority != null">
        #{priority,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="tags != null">
        #{tags,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="apiReportStatus != null">
        #{apiReportStatus,jdbcType=VARCHAR},
      </if>
      <if test="apiReportId != null">
        #{apiReportId,jdbcType=VARCHAR},
      </if>
      <if test="pos != null">
        #{pos,jdbcType=BIGINT},
      </if>
      <if test="syncEnable != null">
        #{syncEnable,jdbcType=BIT},
      </if>
      <if test="syncTime != null">
        #{syncTime,jdbcType=BIGINT},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="apiDefinitionId != null">
        #{apiDefinitionId,jdbcType=VARCHAR},
      </if>
      <if test="versionId != null">
        #{versionId,jdbcType=VARCHAR},
      </if>
      <if test="principal != null">
        #{principal,jdbcType=VARCHAR},
      </if>
      <if test="environmentId != null">
        #{environmentId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.metersphere.api.domain.ApiTestCaseExample" resultType="java.lang.Long">
    select count(*) from api_test_case
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update api_test_case
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteUser != null">
        delete_user = #{record.deleteUser,jdbcType=VARCHAR},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
      <if test="record.priority != null">
        priority = #{record.priority,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.tags != null">
        tags = #{record.tags,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.apiReportStatus != null">
        api_report_status = #{record.apiReportStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.apiReportId != null">
        api_report_id = #{record.apiReportId,jdbcType=VARCHAR},
      </if>
      <if test="record.pos != null">
        pos = #{record.pos,jdbcType=BIGINT},
      </if>
      <if test="record.syncEnable != null">
        sync_enable = #{record.syncEnable,jdbcType=BIT},
      </if>
      <if test="record.syncTime != null">
        sync_time = #{record.syncTime,jdbcType=BIGINT},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.apiDefinitionId != null">
        api_definition_id = #{record.apiDefinitionId,jdbcType=VARCHAR},
      </if>
      <if test="record.versionId != null">
        version_id = #{record.versionId,jdbcType=VARCHAR},
      </if>
      <if test="record.principal != null">
        principal = #{record.principal,jdbcType=VARCHAR},
      </if>
      <if test="record.environmentId != null">
        environment_id = #{record.environmentId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update api_test_case
    set id = #{record.id,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      delete_user = #{record.deleteUser,jdbcType=VARCHAR},
      deleted = #{record.deleted,jdbcType=BIT},
      priority = #{record.priority,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER},
      tags = #{record.tags,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=VARCHAR},
      api_report_status = #{record.apiReportStatus,jdbcType=VARCHAR},
      api_report_id = #{record.apiReportId,jdbcType=VARCHAR},
      pos = #{record.pos,jdbcType=BIGINT},
      sync_enable = #{record.syncEnable,jdbcType=BIT},
      sync_time = #{record.syncTime,jdbcType=BIGINT},
      project_id = #{record.projectId,jdbcType=VARCHAR},
      api_definition_id = #{record.apiDefinitionId,jdbcType=VARCHAR},
      version_id = #{record.versionId,jdbcType=VARCHAR},
      principal = #{record.principal,jdbcType=VARCHAR},
      environment_id = #{record.environmentId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.metersphere.api.domain.ApiTestCase">
    update api_test_case
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="deleteUser != null">
        delete_user = #{deleteUser,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="priority != null">
        priority = #{priority,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="tags != null">
        tags = #{tags,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="apiReportStatus != null">
        api_report_status = #{apiReportStatus,jdbcType=VARCHAR},
      </if>
      <if test="apiReportId != null">
        api_report_id = #{apiReportId,jdbcType=VARCHAR},
      </if>
      <if test="pos != null">
        pos = #{pos,jdbcType=BIGINT},
      </if>
      <if test="syncEnable != null">
        sync_enable = #{syncEnable,jdbcType=BIT},
      </if>
      <if test="syncTime != null">
        sync_time = #{syncTime,jdbcType=BIGINT},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="apiDefinitionId != null">
        api_definition_id = #{apiDefinitionId,jdbcType=VARCHAR},
      </if>
      <if test="versionId != null">
        version_id = #{versionId,jdbcType=VARCHAR},
      </if>
      <if test="principal != null">
        principal = #{principal,jdbcType=VARCHAR},
      </if>
      <if test="environmentId != null">
        environment_id = #{environmentId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.metersphere.api.domain.ApiTestCase">
    update api_test_case
    set `name` = #{name,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=BIGINT},
      update_user = #{updateUser,jdbcType=VARCHAR},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      delete_user = #{deleteUser,jdbcType=VARCHAR},
      deleted = #{deleted,jdbcType=BIT},
      priority = #{priority,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      tags = #{tags,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=VARCHAR},
      api_report_status = #{apiReportStatus,jdbcType=VARCHAR},
      api_report_id = #{apiReportId,jdbcType=VARCHAR},
      pos = #{pos,jdbcType=BIGINT},
      sync_enable = #{syncEnable,jdbcType=BIT},
      sync_time = #{syncTime,jdbcType=BIGINT},
      project_id = #{projectId,jdbcType=VARCHAR},
      api_definition_id = #{apiDefinitionId,jdbcType=VARCHAR},
      version_id = #{versionId,jdbcType=VARCHAR},
      principal = #{principal,jdbcType=VARCHAR},
      environment_id = #{environmentId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>