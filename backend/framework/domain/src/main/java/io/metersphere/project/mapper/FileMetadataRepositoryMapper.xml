<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.project.mapper.FileMetadataRepositoryMapper">
  <resultMap id="BaseResultMap" type="io.metersphere.project.domain.FileMetadataRepository">
    <id column="file_metadata_id" jdbcType="VARCHAR" property="fileMetadataId" />
    <result column="branch" jdbcType="VARCHAR" property="branch" />
    <result column="commit_id" jdbcType="VARCHAR" property="commitId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="io.metersphere.project.domain.FileMetadataRepository">
    <result column="commit_message" jdbcType="LONGVARCHAR" property="commitMessage" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    file_metadata_id, branch, commit_id
  </sql>
  <sql id="Blob_Column_List">
    commit_message
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="io.metersphere.project.domain.FileMetadataRepositoryExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from file_metadata_repository
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="io.metersphere.project.domain.FileMetadataRepositoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from file_metadata_repository
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from file_metadata_repository
    where file_metadata_id = #{fileMetadataId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from file_metadata_repository
    where file_metadata_id = #{fileMetadataId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="io.metersphere.project.domain.FileMetadataRepositoryExample">
    delete from file_metadata_repository
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.metersphere.project.domain.FileMetadataRepository">
    insert into file_metadata_repository (file_metadata_id, branch, commit_id, 
      commit_message)
    values (#{fileMetadataId,jdbcType=VARCHAR}, #{branch,jdbcType=VARCHAR}, #{commitId,jdbcType=VARCHAR}, 
      #{commitMessage,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="io.metersphere.project.domain.FileMetadataRepository">
    insert into file_metadata_repository
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fileMetadataId != null">
        file_metadata_id,
      </if>
      <if test="branch != null">
        branch,
      </if>
      <if test="commitId != null">
        commit_id,
      </if>
      <if test="commitMessage != null">
        commit_message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fileMetadataId != null">
        #{fileMetadataId,jdbcType=VARCHAR},
      </if>
      <if test="branch != null">
        #{branch,jdbcType=VARCHAR},
      </if>
      <if test="commitId != null">
        #{commitId,jdbcType=VARCHAR},
      </if>
      <if test="commitMessage != null">
        #{commitMessage,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.metersphere.project.domain.FileMetadataRepositoryExample" resultType="java.lang.Long">
    select count(*) from file_metadata_repository
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update file_metadata_repository
    <set>
      <if test="record.fileMetadataId != null">
        file_metadata_id = #{record.fileMetadataId,jdbcType=VARCHAR},
      </if>
      <if test="record.branch != null">
        branch = #{record.branch,jdbcType=VARCHAR},
      </if>
      <if test="record.commitId != null">
        commit_id = #{record.commitId,jdbcType=VARCHAR},
      </if>
      <if test="record.commitMessage != null">
        commit_message = #{record.commitMessage,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update file_metadata_repository
    set file_metadata_id = #{record.fileMetadataId,jdbcType=VARCHAR},
      branch = #{record.branch,jdbcType=VARCHAR},
      commit_id = #{record.commitId,jdbcType=VARCHAR},
      commit_message = #{record.commitMessage,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update file_metadata_repository
    set file_metadata_id = #{record.fileMetadataId,jdbcType=VARCHAR},
      branch = #{record.branch,jdbcType=VARCHAR},
      commit_id = #{record.commitId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.metersphere.project.domain.FileMetadataRepository">
    update file_metadata_repository
    <set>
      <if test="branch != null">
        branch = #{branch,jdbcType=VARCHAR},
      </if>
      <if test="commitId != null">
        commit_id = #{commitId,jdbcType=VARCHAR},
      </if>
      <if test="commitMessage != null">
        commit_message = #{commitMessage,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where file_metadata_id = #{fileMetadataId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="io.metersphere.project.domain.FileMetadataRepository">
    update file_metadata_repository
    set branch = #{branch,jdbcType=VARCHAR},
      commit_id = #{commitId,jdbcType=VARCHAR},
      commit_message = #{commitMessage,jdbcType=LONGVARCHAR}
    where file_metadata_id = #{fileMetadataId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.metersphere.project.domain.FileMetadataRepository">
    update file_metadata_repository
    set branch = #{branch,jdbcType=VARCHAR},
      commit_id = #{commitId,jdbcType=VARCHAR}
    where file_metadata_id = #{fileMetadataId,jdbcType=VARCHAR}
  </update>
  <insert id="batchInsert" parameterType="map">
    insert into file_metadata_repository
    (file_metadata_id, branch, commit_id, commit_message)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.fileMetadataId,jdbcType=VARCHAR}, #{item.branch,jdbcType=VARCHAR}, #{item.commitId,jdbcType=VARCHAR}, 
        #{item.commitMessage,jdbcType=LONGVARCHAR})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into file_metadata_repository (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'file_metadata_id'.toString() == column.value">
          #{item.fileMetadataId,jdbcType=VARCHAR}
        </if>
        <if test="'branch'.toString() == column.value">
          #{item.branch,jdbcType=VARCHAR}
        </if>
        <if test="'commit_id'.toString() == column.value">
          #{item.commitId,jdbcType=VARCHAR}
        </if>
        <if test="'commit_message'.toString() == column.value">
          #{item.commitMessage,jdbcType=LONGVARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>