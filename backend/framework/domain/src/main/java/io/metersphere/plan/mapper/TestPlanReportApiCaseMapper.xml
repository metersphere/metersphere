<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.plan.mapper.TestPlanReportApiCaseMapper">
  <resultMap id="BaseResultMap" type="io.metersphere.plan.domain.TestPlanReportApiCase">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="test_plan_report_id" jdbcType="VARCHAR" property="testPlanReportId" />
    <result column="test_plan_collection_id" jdbcType="VARCHAR" property="testPlanCollectionId" />
    <result column="environment_id" jdbcType="VARCHAR" property="environmentId" />
    <result column="test_plan_api_case_id" jdbcType="VARCHAR" property="testPlanApiCaseId" />
    <result column="api_case_id" jdbcType="VARCHAR" property="apiCaseId" />
    <result column="api_case_num" jdbcType="BIGINT" property="apiCaseNum" />
    <result column="api_case_name" jdbcType="VARCHAR" property="apiCaseName" />
    <result column="api_case_module" jdbcType="VARCHAR" property="apiCaseModule" />
    <result column="api_case_priority" jdbcType="VARCHAR" property="apiCasePriority" />
    <result column="api_case_execute_user" jdbcType="VARCHAR" property="apiCaseExecuteUser" />
    <result column="api_case_execute_result" jdbcType="VARCHAR" property="apiCaseExecuteResult" />
    <result column="api_case_execute_report_id" jdbcType="VARCHAR" property="apiCaseExecuteReportId" />
    <result column="pos" jdbcType="BIGINT" property="pos" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, test_plan_report_id, test_plan_collection_id, environment_id, test_plan_api_case_id, 
    api_case_id, api_case_num, api_case_name, api_case_module, api_case_priority, api_case_execute_user, 
    api_case_execute_result, api_case_execute_report_id, pos
  </sql>
  <select id="selectByExample" parameterType="io.metersphere.plan.domain.TestPlanReportApiCaseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from test_plan_report_api_case
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from test_plan_report_api_case
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from test_plan_report_api_case
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="io.metersphere.plan.domain.TestPlanReportApiCaseExample">
    delete from test_plan_report_api_case
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.metersphere.plan.domain.TestPlanReportApiCase">
    insert into test_plan_report_api_case (id, test_plan_report_id, test_plan_collection_id, 
      environment_id, test_plan_api_case_id, api_case_id, 
      api_case_num, api_case_name, api_case_module, 
      api_case_priority, api_case_execute_user, api_case_execute_result, 
      api_case_execute_report_id, pos)
    values (#{id,jdbcType=VARCHAR}, #{testPlanReportId,jdbcType=VARCHAR}, #{testPlanCollectionId,jdbcType=VARCHAR}, 
      #{environmentId,jdbcType=VARCHAR}, #{testPlanApiCaseId,jdbcType=VARCHAR}, #{apiCaseId,jdbcType=VARCHAR}, 
      #{apiCaseNum,jdbcType=BIGINT}, #{apiCaseName,jdbcType=VARCHAR}, #{apiCaseModule,jdbcType=VARCHAR}, 
      #{apiCasePriority,jdbcType=VARCHAR}, #{apiCaseExecuteUser,jdbcType=VARCHAR}, #{apiCaseExecuteResult,jdbcType=VARCHAR}, 
      #{apiCaseExecuteReportId,jdbcType=VARCHAR}, #{pos,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="io.metersphere.plan.domain.TestPlanReportApiCase">
    insert into test_plan_report_api_case
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="testPlanReportId != null">
        test_plan_report_id,
      </if>
      <if test="testPlanCollectionId != null">
        test_plan_collection_id,
      </if>
      <if test="environmentId != null">
        environment_id,
      </if>
      <if test="testPlanApiCaseId != null">
        test_plan_api_case_id,
      </if>
      <if test="apiCaseId != null">
        api_case_id,
      </if>
      <if test="apiCaseNum != null">
        api_case_num,
      </if>
      <if test="apiCaseName != null">
        api_case_name,
      </if>
      <if test="apiCaseModule != null">
        api_case_module,
      </if>
      <if test="apiCasePriority != null">
        api_case_priority,
      </if>
      <if test="apiCaseExecuteUser != null">
        api_case_execute_user,
      </if>
      <if test="apiCaseExecuteResult != null">
        api_case_execute_result,
      </if>
      <if test="apiCaseExecuteReportId != null">
        api_case_execute_report_id,
      </if>
      <if test="pos != null">
        pos,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="testPlanReportId != null">
        #{testPlanReportId,jdbcType=VARCHAR},
      </if>
      <if test="testPlanCollectionId != null">
        #{testPlanCollectionId,jdbcType=VARCHAR},
      </if>
      <if test="environmentId != null">
        #{environmentId,jdbcType=VARCHAR},
      </if>
      <if test="testPlanApiCaseId != null">
        #{testPlanApiCaseId,jdbcType=VARCHAR},
      </if>
      <if test="apiCaseId != null">
        #{apiCaseId,jdbcType=VARCHAR},
      </if>
      <if test="apiCaseNum != null">
        #{apiCaseNum,jdbcType=BIGINT},
      </if>
      <if test="apiCaseName != null">
        #{apiCaseName,jdbcType=VARCHAR},
      </if>
      <if test="apiCaseModule != null">
        #{apiCaseModule,jdbcType=VARCHAR},
      </if>
      <if test="apiCasePriority != null">
        #{apiCasePriority,jdbcType=VARCHAR},
      </if>
      <if test="apiCaseExecuteUser != null">
        #{apiCaseExecuteUser,jdbcType=VARCHAR},
      </if>
      <if test="apiCaseExecuteResult != null">
        #{apiCaseExecuteResult,jdbcType=VARCHAR},
      </if>
      <if test="apiCaseExecuteReportId != null">
        #{apiCaseExecuteReportId,jdbcType=VARCHAR},
      </if>
      <if test="pos != null">
        #{pos,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.metersphere.plan.domain.TestPlanReportApiCaseExample" resultType="java.lang.Long">
    select count(*) from test_plan_report_api_case
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update test_plan_report_api_case
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.testPlanReportId != null">
        test_plan_report_id = #{record.testPlanReportId,jdbcType=VARCHAR},
      </if>
      <if test="record.testPlanCollectionId != null">
        test_plan_collection_id = #{record.testPlanCollectionId,jdbcType=VARCHAR},
      </if>
      <if test="record.environmentId != null">
        environment_id = #{record.environmentId,jdbcType=VARCHAR},
      </if>
      <if test="record.testPlanApiCaseId != null">
        test_plan_api_case_id = #{record.testPlanApiCaseId,jdbcType=VARCHAR},
      </if>
      <if test="record.apiCaseId != null">
        api_case_id = #{record.apiCaseId,jdbcType=VARCHAR},
      </if>
      <if test="record.apiCaseNum != null">
        api_case_num = #{record.apiCaseNum,jdbcType=BIGINT},
      </if>
      <if test="record.apiCaseName != null">
        api_case_name = #{record.apiCaseName,jdbcType=VARCHAR},
      </if>
      <if test="record.apiCaseModule != null">
        api_case_module = #{record.apiCaseModule,jdbcType=VARCHAR},
      </if>
      <if test="record.apiCasePriority != null">
        api_case_priority = #{record.apiCasePriority,jdbcType=VARCHAR},
      </if>
      <if test="record.apiCaseExecuteUser != null">
        api_case_execute_user = #{record.apiCaseExecuteUser,jdbcType=VARCHAR},
      </if>
      <if test="record.apiCaseExecuteResult != null">
        api_case_execute_result = #{record.apiCaseExecuteResult,jdbcType=VARCHAR},
      </if>
      <if test="record.apiCaseExecuteReportId != null">
        api_case_execute_report_id = #{record.apiCaseExecuteReportId,jdbcType=VARCHAR},
      </if>
      <if test="record.pos != null">
        pos = #{record.pos,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update test_plan_report_api_case
    set id = #{record.id,jdbcType=VARCHAR},
      test_plan_report_id = #{record.testPlanReportId,jdbcType=VARCHAR},
      test_plan_collection_id = #{record.testPlanCollectionId,jdbcType=VARCHAR},
      environment_id = #{record.environmentId,jdbcType=VARCHAR},
      test_plan_api_case_id = #{record.testPlanApiCaseId,jdbcType=VARCHAR},
      api_case_id = #{record.apiCaseId,jdbcType=VARCHAR},
      api_case_num = #{record.apiCaseNum,jdbcType=BIGINT},
      api_case_name = #{record.apiCaseName,jdbcType=VARCHAR},
      api_case_module = #{record.apiCaseModule,jdbcType=VARCHAR},
      api_case_priority = #{record.apiCasePriority,jdbcType=VARCHAR},
      api_case_execute_user = #{record.apiCaseExecuteUser,jdbcType=VARCHAR},
      api_case_execute_result = #{record.apiCaseExecuteResult,jdbcType=VARCHAR},
      api_case_execute_report_id = #{record.apiCaseExecuteReportId,jdbcType=VARCHAR},
      pos = #{record.pos,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.metersphere.plan.domain.TestPlanReportApiCase">
    update test_plan_report_api_case
    <set>
      <if test="testPlanReportId != null">
        test_plan_report_id = #{testPlanReportId,jdbcType=VARCHAR},
      </if>
      <if test="testPlanCollectionId != null">
        test_plan_collection_id = #{testPlanCollectionId,jdbcType=VARCHAR},
      </if>
      <if test="environmentId != null">
        environment_id = #{environmentId,jdbcType=VARCHAR},
      </if>
      <if test="testPlanApiCaseId != null">
        test_plan_api_case_id = #{testPlanApiCaseId,jdbcType=VARCHAR},
      </if>
      <if test="apiCaseId != null">
        api_case_id = #{apiCaseId,jdbcType=VARCHAR},
      </if>
      <if test="apiCaseNum != null">
        api_case_num = #{apiCaseNum,jdbcType=BIGINT},
      </if>
      <if test="apiCaseName != null">
        api_case_name = #{apiCaseName,jdbcType=VARCHAR},
      </if>
      <if test="apiCaseModule != null">
        api_case_module = #{apiCaseModule,jdbcType=VARCHAR},
      </if>
      <if test="apiCasePriority != null">
        api_case_priority = #{apiCasePriority,jdbcType=VARCHAR},
      </if>
      <if test="apiCaseExecuteUser != null">
        api_case_execute_user = #{apiCaseExecuteUser,jdbcType=VARCHAR},
      </if>
      <if test="apiCaseExecuteResult != null">
        api_case_execute_result = #{apiCaseExecuteResult,jdbcType=VARCHAR},
      </if>
      <if test="apiCaseExecuteReportId != null">
        api_case_execute_report_id = #{apiCaseExecuteReportId,jdbcType=VARCHAR},
      </if>
      <if test="pos != null">
        pos = #{pos,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.metersphere.plan.domain.TestPlanReportApiCase">
    update test_plan_report_api_case
    set test_plan_report_id = #{testPlanReportId,jdbcType=VARCHAR},
      test_plan_collection_id = #{testPlanCollectionId,jdbcType=VARCHAR},
      environment_id = #{environmentId,jdbcType=VARCHAR},
      test_plan_api_case_id = #{testPlanApiCaseId,jdbcType=VARCHAR},
      api_case_id = #{apiCaseId,jdbcType=VARCHAR},
      api_case_num = #{apiCaseNum,jdbcType=BIGINT},
      api_case_name = #{apiCaseName,jdbcType=VARCHAR},
      api_case_module = #{apiCaseModule,jdbcType=VARCHAR},
      api_case_priority = #{apiCasePriority,jdbcType=VARCHAR},
      api_case_execute_user = #{apiCaseExecuteUser,jdbcType=VARCHAR},
      api_case_execute_result = #{apiCaseExecuteResult,jdbcType=VARCHAR},
      api_case_execute_report_id = #{apiCaseExecuteReportId,jdbcType=VARCHAR},
      pos = #{pos,jdbcType=BIGINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <insert id="batchInsert" parameterType="map">
    insert into test_plan_report_api_case
    (id, test_plan_report_id, test_plan_collection_id, environment_id, test_plan_api_case_id, 
      api_case_id, api_case_num, api_case_name, api_case_module, api_case_priority, api_case_execute_user, 
      api_case_execute_result, api_case_execute_report_id, pos)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=VARCHAR}, #{item.testPlanReportId,jdbcType=VARCHAR}, #{item.testPlanCollectionId,jdbcType=VARCHAR}, 
        #{item.environmentId,jdbcType=VARCHAR}, #{item.testPlanApiCaseId,jdbcType=VARCHAR}, 
        #{item.apiCaseId,jdbcType=VARCHAR}, #{item.apiCaseNum,jdbcType=BIGINT}, #{item.apiCaseName,jdbcType=VARCHAR}, 
        #{item.apiCaseModule,jdbcType=VARCHAR}, #{item.apiCasePriority,jdbcType=VARCHAR}, 
        #{item.apiCaseExecuteUser,jdbcType=VARCHAR}, #{item.apiCaseExecuteResult,jdbcType=VARCHAR}, 
        #{item.apiCaseExecuteReportId,jdbcType=VARCHAR}, #{item.pos,jdbcType=BIGINT})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into test_plan_report_api_case (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=VARCHAR}
        </if>
        <if test="'test_plan_report_id'.toString() == column.value">
          #{item.testPlanReportId,jdbcType=VARCHAR}
        </if>
        <if test="'test_plan_collection_id'.toString() == column.value">
          #{item.testPlanCollectionId,jdbcType=VARCHAR}
        </if>
        <if test="'environment_id'.toString() == column.value">
          #{item.environmentId,jdbcType=VARCHAR}
        </if>
        <if test="'test_plan_api_case_id'.toString() == column.value">
          #{item.testPlanApiCaseId,jdbcType=VARCHAR}
        </if>
        <if test="'api_case_id'.toString() == column.value">
          #{item.apiCaseId,jdbcType=VARCHAR}
        </if>
        <if test="'api_case_num'.toString() == column.value">
          #{item.apiCaseNum,jdbcType=BIGINT}
        </if>
        <if test="'api_case_name'.toString() == column.value">
          #{item.apiCaseName,jdbcType=VARCHAR}
        </if>
        <if test="'api_case_module'.toString() == column.value">
          #{item.apiCaseModule,jdbcType=VARCHAR}
        </if>
        <if test="'api_case_priority'.toString() == column.value">
          #{item.apiCasePriority,jdbcType=VARCHAR}
        </if>
        <if test="'api_case_execute_user'.toString() == column.value">
          #{item.apiCaseExecuteUser,jdbcType=VARCHAR}
        </if>
        <if test="'api_case_execute_result'.toString() == column.value">
          #{item.apiCaseExecuteResult,jdbcType=VARCHAR}
        </if>
        <if test="'api_case_execute_report_id'.toString() == column.value">
          #{item.apiCaseExecuteReportId,jdbcType=VARCHAR}
        </if>
        <if test="'pos'.toString() == column.value">
          #{item.pos,jdbcType=BIGINT}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>