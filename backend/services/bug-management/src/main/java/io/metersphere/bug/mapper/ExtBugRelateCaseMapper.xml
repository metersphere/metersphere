<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.bug.mapper.ExtBugRelateCaseMapper">
    <select id="getRelateCaseModule" resultType="io.metersphere.system.dto.sdk.BaseTreeNode">
        select
        distinct fcm.id,
        fcm.parent_id as parentId,
        fcm.name,
        fcm.pos,
        fcm.project_id
        from functional_case_module fcm left join functional_case fc on fc.module_id = fcm.id
        where fc.deleted = #{deleted}
            and fc.project_id = #{request.projectId}
            and fc.id not in
            (
                select brc.case_id from bug_relation_case brc where brc.bug_id = #{request.sourceId} and brc.case_type = #{request.sourceType}
            )
        <include refid="queryModuleWhereCondition"/>
        order by pos
    </select>

    <select id="countRelateCaseModuleTree" resultType="io.metersphere.project.dto.ModuleCountDTO">
        select
        fc.module_id AS moduleId,
        count(fc.id) as dataCount
        from functional_case fc
            where fc.deleted = #{deleted}
            and fc.project_id = #{request.projectId}
            and fc.id not in
            (
                select brc.case_id from bug_relation_case brc where brc.bug_id = #{request.sourceId} and brc.case_type = #{request.sourceType}
            )
            <include refid="queryModuleWhereCondition"/>
        group by fc.module_id
    </select>

    <select id="countRelationCases" resultType="io.metersphere.bug.dto.response.BugRelateCaseCountDTO">
        select count(id) as relationCaseCount, bug_id as bugId from bug_relation_case brc
        where brc.bug_id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
        group by brc.bug_id
    </select>

    <select id="list" resultType="io.metersphere.bug.dto.response.BugRelateCaseDTO">
        select brc.id relateId, fc.id relateCaseId, fc.num relateCaseNum, fc.name relateCaseName, fc.project_id projectId, fc.version_id versionId, brc.case_type relateCaseType,
               brc.test_plan_id is not null relatePlanCase, brc.case_id is not null relateCase
        from bug_relation_case brc join functional_case fc on (brc.case_id = fc.id or brc.test_plan_case_id = fc.id)
        where brc.bug_id = #{request.bugId} and fc.deleted = false
        <if test="request.keyword != null and request.keyword != ''">
            and (
            fc.name like concat('%', #{request.keyword}, '%')
            or fc.num like concat('%', #{request.keyword}, '%')
            )
        </if>
        order by brc.id desc
    </select>

    <select id="getRelateCase" resultType="io.metersphere.bug.dto.response.BugRelateCaseDTO">
        select distinct c.name relateCaseName, c.project_id projectId, c.version_id versionId, brc.case_type relateCaseType, c.num relateId,
        brc.test_plan_id is not null relatePlanCase, brc.case_id is not null relateCase
        from bug_relation_case brc
            <if test="sourceType == 'FUNCTIONAL'">
                join functional_case c on (brc.case_id = c.id or brc.test_plan_case_id = c.id)
            </if>
            <!-- 后续根据SourceType扩展 -->
        where c.id = #{id} and c.deleted = false
    </select>

    <select id="getAssociateBugs" resultType="io.metersphere.dto.BugProviderDTO">
        SELECT
            brc.id as id,
            brc.bug_id bugId,
            b.num as num,
            b.title as name,
            b.handle_user handleUser,
            b.`status`,
            bc.description as content,
            brc.test_plan_id testPlanId,
            tp.name testPlanName
        FROM
            bug_relation_case brc
                INNER JOIN bug b ON brc.bug_id = b.id
                INNER JOIN bug_content bc ON brc.bug_id = bc.bug_id
        left join test_plan tp on brc.test_plan_id = tp.id
        where b.deleted = false
        <include refid="queryWhereConditionByProvider"/>
        <include refid="filter"/>
        order by
        <if test="sort != null and sort != ''">
            brc.${sort}
        </if>
        <if test="sort == null or sort == ''">
            brc.create_time desc
        </if>
    </select>
    <select id="countByCaseId" resultType="java.lang.Long">
        SELECT count(fc.id)
        FROM bug_relation_case brc
                 INNER JOIN functional_case fc ON brc.case_id = fc.id
        where brc.bug_id = #{caseId}
          AND fc.deleted = false
    </select>

    <sql id="queryWhereConditionByProvider">
        <if test="request.caseId != null and request.caseId != ''">
            and brc.case_id = #{request.caseId}
        </if>
        <if test="request.keyword != null and request.keyword != ''">
            and b.title like concat('%', #{request.keyword},'%')
        </if>
    </sql>

    <sql id="filter">
        <if test="request.filter != null and request.filter.size() > 0">
            <foreach collection="request.filter.entrySet()" index="key" item="values">
                <if test="values != null and values.size() > 0">
                    <choose>
                        <!-- 处理人 -->
                        <when test="key == 'handleUser'">
                            and b.handle_user in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                        <!-- 删除人 -->
                        <when test="key == 'deleteUser'">
                            and b.delete_user in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                        <!-- 更新人 -->
                        <when test="key == 'updateUser'">
                            and b.update_user in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                        <!-- 创建人 -->
                        <when test="key == 'createUser'">
                            and b.create_user in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                        <!-- 平台 -->
                        <when test="key == 'platform'">
                            and b.platform in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                        <!-- 状态 -->
                        <when test="key == 'status'">
                            and b.status in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                        <!-- 自定义单选字段 -->
                        <when test="key.startsWith('custom_single')">
                            and b.id in (
                            select bug_id from bug_custom_field where concat('custom_single_', field_id) = #{key}
                            and trim(both '"' from `value`) in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                            )
                        </when>
                        <!-- 自定义多选字段 -->
                        <when test="key.startsWith('custom_multiple')">
                            and b.id in (
                            select bug_id from bug_custom_field where concat('custom_multiple_', field_id) = #{key}
                            and
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterMultipleWrapper"/>
                            )
                        </when>
                    </choose>
                </if>
            </foreach>
        </if>
    </sql>

    <sql id="queryModuleWhereCondition">
        <!-- 待补充关联Case弹窗中的高级搜索条件 -->
        <if test="request.keyword != null and request.keyword != ''">
            and (
                fc.num like concat('%', #{request.keyword}, '%') or fc.name like concat('%', #{request.keyword}, '%')
            )
        </if>
        <if test="request.moduleIds != null and request.moduleIds.size() > 0">
            and fc.module_id in
            <foreach collection="request.moduleIds" item="moduleId" open="(" separator="," close=")">
                #{moduleId}
            </foreach>
        </if>
    </sql>
</mapper>