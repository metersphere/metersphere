<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.api.mapper.ExtApiScenarioMapper">

    <resultMap id="ApiScenarioDTO" type="io.metersphere.api.dto.scenario.ApiScenarioDTO">
        <result column="tags" jdbcType="VARCHAR" property="tags" typeHandler="io.metersphere.handler.ListTypeHandler" />
    </resultMap>

    <resultMap id="BaseResultMap" type="io.metersphere.api.domain.ApiScenario">
        <result column="tags" jdbcType="VARCHAR" property="tags" typeHandler="io.metersphere.handler.ListTypeHandler" />
    </resultMap>

    <resultMap id="TestCaseProviderDTO" type="io.metersphere.dto.TestCaseProviderDTO">
        <result column="tags" jdbcType="VARCHAR" property="tags" typeHandler="io.metersphere.handler.ListTypeHandler" />
    </resultMap>
    <update id="updatePos">
        update api_scenario
        set pos =#{pos}
        where id = #{id}
    </update>

    <select id="list" resultMap="ApiScenarioDTO">
        select
        api_scenario.id, api_scenario.`name`,api_scenario.priority,
        api_scenario.step_total,api_scenario.request_pass_rate,api_scenario.last_report_status,
        api_scenario.environment_id,
        api_scenario.last_report_id,api_scenario.grouped,
        api_scenario.`status`, api_scenario.num, api_scenario.tags, api_scenario.pos,
        api_scenario.project_id, api_scenario.module_id, api_scenario.latest, api_scenario.version_id,
        api_scenario.ref_id, api_scenario.create_time, api_scenario.create_user,
        api_scenario.update_time, api_scenario.update_user, api_scenario.delete_user, api_scenario.delete_time,
        api_scenario.deleted, project_version.name as version_name
        from api_scenario
        LEFT JOIN project_version ON project_version.id = api_scenario.version_id
        where api_scenario.deleted = #{request.deleted}
        <include refid="queryWhereCondition"/>
        <if test="request.excludeIds != null and request.excludeIds.size() > 0">
            and api_scenario.id not in
            <foreach collection="request.excludeIds" item="excludeId" separator="," open="(" close=")">
                #{excludeId}
            </foreach>
        </if>
        <if test="!isRepeat and testPlanId != null">
            AND api_scenario.id not in (
            select test_plan_api_scenario.api_scenario_id from test_plan_api_scenario where test_plan_api_scenario.test_plan_id = #{testPlanId}
            )
        </if>

    </select>
    <select id="getIds" resultType="java.lang.String">
        select
        api_scenario.id
        from api_scenario
        where api_scenario.deleted = #{deleted}
        <include refid="queryWhereConditionByBaseQueryRequest"/>
    </select>
    <select id="getInfoByIds" resultType="io.metersphere.api.domain.ApiScenario">
        SELECT id,
        name
        FROM api_scenario
        WHERE deleted = #{deleted} and id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    <select id="getTagsByIds" resultMap="BaseResultMap">
        SELECT id,
        tags
        FROM api_scenario
        WHERE deleted = #{deleted} and id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="listByProviderRequest" resultMap="TestCaseProviderDTO">
        SELECT
        api_scenario.id,
        api_scenario.project_id,
        api_scenario.name,
        api_scenario.num,
        api_scenario.priority,
        api_scenario.tags,
        api_scenario.pos,
        api_scenario.version_id,
        project_version.name as versionName,
        api_scenario.create_user,
        user.name as createUserName,
        api_scenario.create_time
        FROM
        api_scenario
        LEFT JOIN project_version ON api_scenario.version_id = project_version.id
        LEFT JOIN user ON api_scenario.create_user = user.id
        WHERE api_scenario.deleted =#{deleted}
        and api_scenario.id not in
        (
        select associate.${apiCaseColumnName} from ${table} associate  where  associate.${sourceName} = #{request.sourceId}
        )
        <include refid="queryWhereConditionByProvider"/>
    </select>

    <select id="countModuleIdByProviderRequest" resultType="io.metersphere.project.dto.ModuleCountDTO">
        SELECT api_scenario.module_id AS moduleId, count(api_scenario.id) AS dataCount
        FROM api_scenario
        WHERE api_scenario.deleted =#{deleted}
        and api_scenario.id not in
        (
        select associate.${apiCaseColumnName} from ${table} associate  where  associate.${sourceName} = #{request.sourceId}
        )
        <include refid="queryWhereConditionByProvider"/>
        GROUP BY api_scenario.module_id
    </select>

    <select id="selectIdAndParentIdByProjectId" resultType="io.metersphere.system.dto.sdk.BaseTreeNode">
        SELECT a.id,
               a.parent_id AS parentId
        FROM  api_scenario_module a
        WHERE a.project_id = #{projectId}
        ORDER BY pos
    </select>

    <select id="getTestCaseByProvider" resultType="io.metersphere.api.domain.ApiScenario">
        SELECT
        id, version_id
        FROM
        api_scenario
        WHERE deleted =#{deleted}
        <include refid="queryWhereConditionByBaseQueryRequest"/>
    </select>

    <sql id="queryWhereConditionByBaseQueryRequest">
        <if test="request.projectId != null and request.projectId != ''">
            and api_scenario.project_id = #{request.projectId}
        </if>
        <if test="request.moduleIds != null and request.moduleIds.size() > 0">
            and api_scenario.module_id in
            <foreach collection="request.moduleIds" item="nodeId" separator="," open="(" close=")">
                #{nodeId}
            </foreach>
        </if>
        <if test="request.condition.combine != null">
            <include refid="combine">
                <property name="condition" value="request.condition.combine"/>
            </include>
        </if>
        <if test="request.condition.keyword != null and request.condition.keyword != ''">
            and (
            api_scenario.num like concat('%', #{request.condition.keyword},'%')
            or api_scenario.name like concat('%', #{request.condition.keyword},'%')
            or api_scenario.tags like concat('%', #{request.condition.keyword},'%')
            )
        </if>
        <include refid="filters">
            <property name="filter" value="request.condition.filter"/>
        </include>
    </sql>

    <sql id="queryWhereCondition">
        <if test="request.keyword != null and request.keyword != ''">
            and (
            api_scenario.num like concat('%', #{request.keyword},'%')
            or api_scenario.name like concat('%', #{request.keyword},'%')
            or api_scenario.tags like concat('%', #{request.keyword},'%')
            )
        </if>
        <if test="request.projectId != null and request.projectId != ''">
            and api_scenario.project_id = #{request.projectId}
        </if>
        <if test="request.scenarioId != null and request.scenarioId != ''">
            and api_scenario.id = #{request.scenarioId}
        </if>
        <if test="request.moduleIds != null and request.moduleIds.size() > 0">
            and api_scenario.module_id in
            <foreach collection="request.moduleIds" item="nodeId" separator="," open="(" close=")">
                #{nodeId}
            </foreach>
        </if>
        <include refid="filters">
            <property name="filter" value="request.filter"/>
        </include>

        <if test="request.combine != null and request.combine != ''">
            <include refid="combine">
                <property name="condition" value="request.combine"/>
                <property name="name" value="request.name"/>
                <property name="ObjectTags" value="request.combine.tags"/>
            </include>
        </if>

        <include refid="queryVersionCondition">
            <property name="versionTable" value="api_scenario"/>
        </include>
    </sql>


    <sql id="queryWhereConditionByProvider">
        <if test="request.keyword != null and request.keyword != ''">
            and (
            api_scenario.num like concat('%', #{request.keyword},'%')
            or api_scenario.name like concat('%', #{request.keyword},'%')
            or api_scenario.tags like concat('%', #{request.keyword},'%')
            )
        </if>
        <if test="request.projectId != null and request.projectId != ''">
            and api_scenario.project_id = #{request.projectId}
        </if>
        <if test="request.moduleIds != null and request.moduleIds.size() > 0">
            and api_scenario.module_id in
            <foreach collection="request.moduleIds" item="nodeId" separator="," open="(" close=")">
                #{nodeId}
            </foreach>
        </if>
        <include refid="filters">
            <property name="filter" value="request.filter"/>
        </include>

        <if test="request.combine != null and request.combine != ''">
            <include refid="combine">
                <property name="condition" value="request.combine"/>
                <property name="name" value="request.name"/>
                <property name="ObjectTags" value="request.combine.tags"/>
            </include>
        </if>

        <include refid="queryVersionConditionProvider">
            <property name="versionTable" value="api_scenario"/>
        </include>
    </sql>

    <sql id="filters">
        <if test="${filter} != null and ${filter}.size() > 0">
            <foreach collection="${filter}.entrySet()" index="key" item="values">
                <if test="values != null and values.size() > 0">
                    <choose>
                        <when test="key=='lastReportStatus' and values.size() != 7 ">
                            <!--    取值范围在7个状态（成功、失败、误报、停止、执行中、重跑中、排队中）内选。如果全部全选，则不用拼接这条语句-->
                            <if test="values.contains('PENDING')">
                                and (
                                (api_scenario.last_report_status is null or api_scenario.last_report_status = '')
                                or api_scenario.last_report_status in
                                <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                                )
                            </if>
                            <if test="!values.contains('PENDING')">
                                and api_scenario.last_report_status in
                                <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                            </if>
                        </when>
                        <when test="key=='status'">
                            and api_scenario.status in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                        <when test="key=='createUser'">
                            and api_scenario.create_user in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                        <when test="key=='updateUser'">
                            and api_scenario.update_user in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                        <when test="key=='deleteUser'">
                            and api_scenario.delete_user in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                        <when test="key=='versionId'">
                            and api_scenario.version_id in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                        <when test="key=='priority'">
                            and api_scenario.priority in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                        <when test="key.startsWith('custom_single')">
                            and api_scenario.id in (
                            select api_id from api_definition_custom_field where concat('custom_single_', field_id) =
                            #{key}
                            and trim(both '"' from `value`) in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                            )
                        </when>
                        <when test="key.startsWith('custom_multiple')">
                            and api_scenario.id in (
                            select api_id from api_definition_custom_field where concat('custom_multiple_', field_id) =
                            #{key}
                            and
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterMultipleWrapper"/>
                            )
                        </when>
                    </choose>
                </if>
            </foreach>
        </if>
    </sql>

    <sql id="combine">
        <if test='${condition}.name != null and (${name} == null or ${name} == "")'>
            and api_scenario.name
            <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                <property name="object" value="${condition}.name"/>
            </include>
        </if>

        <if test='${condition}.id != null'>
            and api_scenario.num
            <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                <property name="object" value="${condition}.id"/>
            </include>
        </if>

        <if test="${condition}.updateTime != null">
            and api_scenario.update_time
            <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                <property name="object" value="${condition}.updateTime"/>
            </include>
        </if>

        <if test="${condition}.createTime != null">
            and api_scenario.create_time
            <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                <property name="object" value="${condition}.createTime"/>
            </include>
        </if>

        <if test="${condition}.status != null">
            and api_scenario.status
            <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                <property name="object" value="${condition}.status"/>
            </include>
        </if>

        <if test='${condition}.tags != null and ${ObjectTags}.operator == "not like"'>
            and (api_scenario.tags is null or api_scenario.tags
            <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                <property name="object" value="${condition}.tags"/>
            </include>
            )
        </if>

        <if test='${condition}.tags != null and ${ObjectTags}.operator == "like"'>
            and api_scenario.tags
            <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                <property name="object" value="${condition}.tags"/>
            </include>
        </if>

        <if test="${condition}.customs != null and ${condition}.customs.size() > 0">
            <foreach collection="${condition}.customs" item="custom" separator="" open="" close="">
                <if test="custom.value != ''">
                    <if test='custom.operator == "not like" or custom.operator == "not in"'>
                        and api_scenario.id not in (
                    </if>
                    <if test='custom.operator != "not like" and custom.operator != "not in"'>
                        and api_scenario.id in (
                    </if>
                    select api_id from api_definition_custom_field where field_id = #{custom.id}
                    <choose>
                        <when test="custom.type == 'TEXTAREA' or custom.operator == 'current user'">
                            and `value`
                            <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                                <property name="object" value="custom"/>
                            </include>
                        </when>
                        <when test="custom.type == 'MULTIPLE_MEMBER' or custom.type == 'CHECKBOX' or custom.type == 'MULTIPLE_SELECT'">
                            and ${custom.value}
                        </when>
                        <when test="custom.type == 'DATE' or custom.type == 'DATETIME'">
                            and left(replace(unix_timestamp(trim(both '"' from `value`)), '.', ''), 13)
                            <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                                <property name="object" value="custom"/>
                            </include>
                        </when>
                        <otherwise>
                            and trim(both '"' from `value`)
                            <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                                <property name="object" value="custom"/>
                            </include>
                        </otherwise>
                    </choose>
                    )
                </if>
            </foreach>
        </if>
    </sql>

    <sql id="queryVersionCondition">
        <if test="request.versionId != null and request.versionId != ''">
            and ${versionTable}.version_id = #{request.versionId}
        </if>
        <if test="request.refId != null and request.refId != ''">
            and ${versionTable}.ref_id = #{request.refId}
        </if>
        <if test="request.versionId == null and request.refId == null and request.scenarioId == null">
            AND ${versionTable}.latest = 1
        </if>
    </sql>


    <sql id="queryVersionConditionProvider">
        <if test="request.versionId != null and request.versionId != ''">
            and ${versionTable}.version_id = #{request.versionId}
        </if>
        <if test="request.refId != null and request.refId != ''">
            and ${versionTable}.ref_id = #{request.refId}
        </if>
        <if test="request.versionId == null and request.refId == null">
            AND ${versionTable}.latest = 1
        </if>
    </sql>

    <sql id="queryDocVersionCondition">
        <if test="request.versionId != null and request.versionId != ''">
            and ${versionTable}.version_id = #{request.versionId}
        </if>
        <if test="request.versionId == null and request.apiId == null">
            AND ${versionTable}.latest = 1
        </if>
    </sql>

    <select id="getLastPos" resultType="java.lang.Long">
        SELECT pos
        FROM api_scenario
        WHERE project_id = #{projectId}
        ORDER BY pos DESC
            LIMIT 1;
    </select>


    <select id="getAssociationPage" resultType="io.metersphere.api.dto.scenario.ApiScenarioAssociationDTO">
        SELECT
            distinct a.ref_type, a.scenario_id,
            s.name AS name,
            a.resource_id AS resourceId,
            a.resource_num AS resourceNum,
            a.step_type AS stepType,
            a.project_id AS projectId
        FROM
            api_scenario_step a
                INNER JOIN
            api_scenario s ON a.scenario_id = s.id
        WHERE
           a.parent_id = 'NONE'
            AND a.resource_id = #{request.id}
        <if test="request.keyword != null and request.keyword != ''">
            and (
            a.name like concat('%', #{request.keyword},'%')
            or a.num like concat('%', #{request.keyword},'%')
            )
        </if>

    </select>
    <select id="getIdsByModules" resultType="java.lang.String">
        select id from api_scenario
        where deleted = false
        <if test="request.projectId != null and request.projectId != ''">
            and api_scenario.project_id = #{request.projectId}
        </if>
        <if test="request.moduleIds != null and request.moduleIds.size() > 0">
            and api_scenario.module_id in
            <foreach collection="request.moduleIds" item="nodeId" separator="," open="(" close=")">
                #{nodeId}
            </foreach>
        </if>
        <if test="request.versionId != null and request.versionId != ''">
            and api_scenario.version_id = #{request.versionId}
        </if>
        <if test="request.versionId = null">
            and api_scenario.latest = 1
        </if>

    </select>
    <select id="selectByProjectId" resultType="java.lang.String">
        select id from api_scenario
        where project_id = #{projectId}
    </select>

    <select id="getPrePos" resultType="java.lang.Long">
        select `pos` from api_scenario where project_id = #{projectId}
        <if test="basePos != null">
            and `pos` &lt; #{basePos}
        </if>
        order by `pos` desc limit 1;
    </select>


    <select id="getLastPosEdit" resultType="java.lang.Long">
        select `pos` from api_scenario where project_id = #{projectId}
        <if test="basePos != null">
            and `pos` &gt; #{basePos}
        </if>
        order by `pos` desc limit 1;
    </select>

    <select id="getExecuteList" resultType="io.metersphere.api.dto.definition.ExecuteReportDTO">
        select
        api_scenario_report.id,
        api_scenario_report.name,
        api_scenario_report.status,
        api_scenario_report.exec_status,
        api_scenario_report.start_time,
        api_scenario_report.create_user,
        api_scenario_report.trigger_mode,
        api_scenario_report.test_plan_scenario_id,
        api_scenario_report.deleted,
        api_scenario_report.integrated,
        api_scenario_report.test_plan_scenario_id as test_plan_id
        from api_scenario_report
        left join api_scenario_record t1 on t1.api_scenario_report_id = api_scenario_report.id
        where
        <if test="request.id != null and request.id != ''">
            t1.api_scenario_id = #{request.id}
        </if>
        <include refid="report_filters">
            <property name="filter" value="request.filter"/>
        </include>
    </select>
    <select id="selectIdByProjectIdOrderByPos" resultType="java.lang.String">
        select id from api_scenario
        where project_id = #{projectId}
        order by pos
    </select>
    <select id="selectDragInfoById" resultType="io.metersphere.project.dto.DropNode">
        select id, pos from api_scenario where id = #{id}
    </select>
    <select id="selectNodeByPosOperator"
            parameterType="io.metersphere.project.dto.NodeSortQueryParam"
            resultType="io.metersphere.project.dto.DropNode">
        SELECT id, pos
        FROM api_scenario
        WHERE project_id = #{parentId}
        <if test="operator == 'moreThan'">
            AND pos &gt; #{pos}
        </if>
        <if test="operator == 'lessThan'">
            AND pos &lt; #{pos}
        </if>
        ORDER BY pos
        <if test="operator == 'lessThan' or operator == 'latest'">
            DESC
        </if>
        LIMIT 1
    </select>
    <select id="getPos" resultType="java.lang.Long">
        SELECT pos
        FROM api_scenario
        WHERE project_id = #{projectId}
        ORDER BY pos DESC
            LIMIT 1;
    </select>
    <select id="getScenarioExecuteInfoByIds" resultType="io.metersphere.api.domain.ApiScenario">
        select id, name, environment_id, project_id
        from api_scenario
        where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </select>
    <select id="countModuleIdByRequest" resultType="io.metersphere.project.dto.ModuleCountDTO">
        SELECT api_scenario.module_id AS moduleId, count(api_scenario.id) AS dataCount
        FROM api_scenario
        where api_scenario.deleted =#{deleted}
        <include refid="queryWhereCondition"/>
        <if test="request.testPlanId != null and request.testPlanId != ''">
            AND api_scenario.id not in (
            select test_plan_api_scenario.api_scenario_id from test_plan_api_scenario where test_plan_api_scenario.test_plan_id = #{request.testPlanId}
            )
        </if>
        GROUP BY api_scenario.module_id
    </select>

    <select id="listUnRelatedCaseWithBug" resultMap="TestCaseProviderDTO">
        select
        ao.id,
        ao.num,
        ao.name,
        ao.priority,
        ao.project_id,
        ao.tags,
        pv.name as versionName,
        ao.create_user,
        u.name as createUserName,
        ao.create_time
        from api_scenario ao
        left join project_version pv ON ao.version_id = pv.id
        left join user u ON ao.create_user = u.id
        where ao.deleted = #{deleted}
        and ao.project_id = #{request.projectId}
        and ao.id not in
        (
            select brc.case_id from bug_relation_case brc where brc.bug_id = #{request.sourceId} and brc.case_type = #{request.sourceType}
        )
        <include refid="queryByTestCaseProviderParam"/>
        order by
        <if test="sort != null and sort != ''">
            ao.${sort}
        </if>
        <if test="sort == null or sort == ''">
            ao.create_time desc
        </if>
    </select>

    <select id="getSelectIdsByAssociateParam" resultType="java.lang.String">
        select ac.id
        from api_test_case ac
        where ac.deleted = #{deleted}
        and ac.project_id = #{request.projectId}
        and ac.id not in
        (
        select brc.case_id from bug_relation_case brc where brc.bug_id = #{request.sourceId} and brc.case_type = #{request.sourceType}
        )
        <include refid="queryByAssociateParam"/>
    </select>
    <select id="getScenarioByResourceId" resultType="io.metersphere.api.domain.ApiScenario">
        select api_scenario.* from api_scenario
        inner join test_plan_api_scenario on api_scenario.id = test_plan_api_scenario.api_scenario_id
        where test_plan_api_scenario.id = #{id}
    </select>
    <select id="getScenarioByReportId" resultType="io.metersphere.api.domain.ApiScenario">
        select api_scenario.* from api_scenario
        inner join test_plan_report_api_scenario tpras on api_scenario.id = tpras.api_scenario_id
        where tpras.id = #{reportId}
    </select>

    <sql id="report_filters">
        <if test="${filter} != null and ${filter}.size() > 0">
            <foreach collection="${filter}.entrySet()" index="key" item="values">
                <if test="values != null and values.size() > 0">
                    <choose>
                        <when test="key=='integrated'">
                            and api_scenario_report.integrated in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                        <when test="key=='status'">
                            and api_scenario_report.status in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                        <when test="key=='triggerMode'">
                            and api_scenario_report.trigger_mode in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                    </choose>
                </if>
            </foreach>
        </if>
    </sql>

    <sql id="queryByTestCaseProviderParam">
        <!-- 待补充关联Case弹窗中的高级搜索条件filter, combine -->
        <if test="request.keyword != null and request.keyword != ''">
            and (
            ao.num like concat('%', #{request.keyword}, '%')
            or ao.name like concat('%', #{request.keyword}, '%')
            or ao.tags like concat('%', #{request.keyword}, '%')
            )
        </if>
        <if test="request.moduleIds != null and request.moduleIds.size() > 0">
            and ao.module_id in
            <foreach collection="request.moduleIds" item="moduleId" open="(" separator="," close=")">
                #{moduleId}
            </foreach>
        </if>
    </sql>

    <sql id="queryByAssociateParam">
        <!-- 待补充关联Case弹窗中的高级搜索条件filter, combine -->
        <if test="request.condition.keyword != null and request.condition.keyword != ''">
            and (
            ao.num like concat('%', #{request.keyword}, '%')
            or ao.name like concat('%', #{request.keyword}, '%')
            or ao.tags like concat('%', #{request.keyword}, '%')
            )
        </if>
        <if test="request.moduleIds != null and request.moduleIds.size() > 0">
            and ao.module_id in
            <foreach collection="request.moduleIds" item="moduleId" open="(" separator="," close=")">
                #{moduleId}
            </foreach>
        </if>
    </sql>

    <select id="selectAllCase" resultType="io.metersphere.api.domain.ApiScenario">
        select
        api_scenario.id,
        api_scenario.create_user,
        api_scenario.environment_id,
        api_scenario.grouped
        from api_scenario
        where api_scenario.deleted = false
        and api_scenario.project_id = #{projectId}
        <if test="!isRepeat">
            AND api_scenario.id not in (
            select test_plan_api_scenario.api_scenario_id from test_plan_api_scenario where test_plan_api_scenario.test_plan_id = #{testPlanId}
            )
        </if>
        order by api_scenario.pos asc
    </select>

    <select id="getListBySelectModules" resultType="io.metersphere.api.domain.ApiScenario">
        select
        api_scenario.id,
        api_scenario.create_user,
        api_scenario.environment_id,
        api_scenario.grouped,
        api_scenario.pos
        from api_scenario
        where api_scenario.deleted = false
        and api_scenario.project_id = #{projectId}
        and api_scenario.module_id in
        <foreach collection="moduleIds" item="moduleId" open="(" separator="," close=")">
            #{moduleId}
        </foreach>
        <if test="!isRepeat">
            AND api_scenario.id not in (
            select api_scenario_id from test_plan_api_scenario where test_plan_id = #{testPlanId}
            )
        </if>
    </select>

    <select id="getListBySelectIds" resultType="io.metersphere.api.domain.ApiScenario">
        select
        api_scenario.id,
        api_scenario.create_user,
        api_scenario.environment_id,
        api_scenario.grouped,
        api_scenario.pos
        from api_scenario
        where api_scenario.deleted = false
        and api_scenario.project_id = #{projectId}
        and api_scenario.id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </select>

</mapper>
