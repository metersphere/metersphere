<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.api.mapper.ExtApiReportMapper">

    <select id="list" resultType="io.metersphere.api.domain.ApiReport">
        select
        api_report.id,
        api_report.name,
        api_report.integrated,
        api_report.status,
        api_report.start_time,
        api_report.update_time,
        api_report.create_user,
        api_report.update_user,
        api_report.trigger_mode
        from api_report where api_report.deleted = false
                          and api_report.test_plan_id = 'NONE'
        <if test="request.keyword != null and request.keyword != ''">
            and (
            api_report.name like concat('%', #{request.keyword},'%')
            )
        </if>
        <if test="request.projectId != null and request.projectId != ''">
            and api_report.project_id = #{request.projectId}
        </if>
        <include refid="filters">
            <property name="filter" value="request.filter"/>
        </include>
    </select>
    <select id="getIds" resultType="java.lang.String">
        select
        api_report.id
        from api_report where api_report.deleted = false
                          and api_report.test_plan_id = 'NONE'
        <if test="request.condition.keyword != null">
            and (
            api_report.name like concat('%', #{request.condition.keyword},'%')
            )
        </if>
        <if test="request.projectId != null and request.projectId != ''">
            and api_report.project_id = #{request.projectId}
        </if>
        <include refid="filters">
            <property name="filter" value="request.condition.filter"/>
        </include>
    </select>
    <select id="selectApiReportByIds" resultType="io.metersphere.api.domain.ApiReport">
        select
        api_report.id,
        api_report.name
        from api_report where api_report.deleted = #{deleted}
                          and api_report.test_plan_id = 'NONE'
        and api_report.id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    <select id="selectStepsByReportId" resultType="io.metersphere.api.dto.definition.ApiReportStepDTO">
        select api_report_step.step_id,
               api_report_step.report_id,
               api_report_step.`name`,
               api_report_step.sort,
               api_report_step.step_type,
               api_report_detail.status,
               api_report_detail.fake_code,
               api_report_detail.request_name,
               api_report_detail.request_time,
               api_report_detail.code,
               api_report_detail.response_size,
               api_report_detail.script_identifier
        from api_report_step left join api_report_detail on api_report_step.step_id = api_report_detail.step_id
        and api_report_detail.report_id = api_report_step.report_id
        where api_report_step.report_id = #{reportId}
    </select>
    <select id="selectApiReportByProjectId" resultType="java.lang.String">
        select
        api_report.id
        from api_report
        where api_report.project_id = #{projectId}
            limit 500
    </select>
    <select id="selectApiReportByTime" resultType="java.lang.Integer">
        select
        count(api_report.id)
        from api_report inner join api_report_step on
        api_report_step.report_id = api_report.id
        where api_report.test_plan_id = 'NONE'
        and api_report.start_time &lt;= #{time}
        and api_report.project_id = #{projectId}
    </select>
    <select id="selectApiReportByProjectIdAndTime" resultType="java.lang.String">
        select
            api_report.id
        from api_report inner join api_report_step on
            api_report_step.report_id = api_report.id
        where api_report.test_plan_id = 'NONE'
          and api_report.start_time &lt;= #{time}
          and api_report.project_id = #{projectId} limit 500;
    </select>


    <sql id="filters">
        <if test="${filter} != null and ${filter}.size() > 0">
            <foreach collection="${filter}.entrySet()" index="key" item="values">
                <if test="values != null and values.size() > 0">
                    <choose>
                        <when test="key=='integrated'">
                            and api_report.integrated in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                        <when test="key=='status'">
                            and api_report.status in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                        <when test="key=='triggerMode'">
                            and api_report.trigger_mode in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                    </choose>
                </if>
            </foreach>
        </if>
    </sql>

</mapper>
