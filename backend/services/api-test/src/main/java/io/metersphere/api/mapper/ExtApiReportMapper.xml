<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.api.mapper.ExtApiReportMapper">
    <update id="updateReportStatus">
        update api_report
        set exec_status = 'STOPPED',
            status = '-',
         update_time = #{time},
         update_user = #{userId}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    <update id="updateApiCaseStatus">
        update api_test_case
        set last_report_status = '-'
        where id in
        (select api_test_case_id from api_test_case_record where api_report_id
        in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        )
    </update>

    <select id="list" resultType="io.metersphere.api.domain.ApiReport">
        select
        ar.*
        from api_report ar where ar.deleted = false
                          and ar.test_plan_case_id = 'NONE'
        <if test="request.keyword != null and request.keyword != ''">
            and (
            ar.name like concat('%', #{request.keyword},'%')
            )
        </if>
        <if test="request.projectId != null and request.projectId != ''">
            and ar.project_id = #{request.projectId}
        </if>
        <include refid="filters">
            <property name="filter" value="request.filter"/>
        </include>
    </select>
    <select id="getIds" resultType="java.lang.String">
        select
        ar.id
        from api_report ar where ar.deleted = false
                          and ar.test_plan_case_id = 'NONE'
        <if test="request.condition.keyword != null">
            and (
            ar.name like concat('%', #{request.condition.keyword},'%')
            )
        </if>
        <if test="request.projectId != null and request.projectId != ''">
            and ar.project_id = #{request.projectId}
        </if>
        <include refid="filters">
            <property name="filter" value="request.condition.filter"/>
        </include>
    </select>
    <select id="selectApiReportByIds" resultType="io.metersphere.api.domain.ApiReport">
        select
        api_report.id,
        api_report.name
        from api_report where api_report.test_plan_case_id = 'NONE'
        and api_report.id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    <select id="selectStepsByReportId" resultType="io.metersphere.api.dto.definition.ApiReportStepDTO">
        select api_report_step.step_id,
               api_report_step.report_id,
               api_report_step.`name`,
               api_report_step.sort,
               api_report_step.step_type,
               api_report_detail.status,
               api_report_detail.fake_code,
               api_report_detail.request_name,
               api_report_detail.request_time,
               api_report_detail.code,
               api_report_detail.response_size,
               api_report_detail.script_identifier
        from api_report_step left join api_report_detail on api_report_step.step_id = api_report_detail.step_id
        and api_report_detail.report_id = api_report_step.report_id
        where api_report_step.report_id = #{reportId}
    </select>
    <select id="selectApiReportByProjectId" resultType="java.lang.String">
        select
        api_report.id
        from api_report
        where api_report.project_id = #{projectId}
            limit 500
    </select>
    <select id="countApiReportByTime" resultType="java.lang.Integer">
        select
        count(api_report.id)
        from api_report inner join api_report_step on
        api_report_step.report_id = api_report.id
        where api_report.test_plan_case_id = 'NONE'
        and api_report.start_time &lt;= #{time}
        and api_report.project_id = #{projectId}
    </select>
    <select id="selectApiReportByProjectIdAndTime" resultType="java.lang.String">
        select
            api_report.id
        from api_report inner join api_report_step on
            api_report_step.report_id = api_report.id
        where api_report.test_plan_case_id = 'NONE'
          and api_report.start_time &lt;= #{time}
          and api_report.project_id = #{projectId} limit 500;
    </select>


    <sql id="filters">
        <if test="${filter} != null and ${filter}.size() > 0">
            <foreach collection="${filter}.entrySet()" index="key" item="values">
                <if test="values != null and values.size() > 0">
                    <choose>
                        <when test="key=='integrated'">
                            and ar.integrated in
                            <foreach collection="values" item="value" separator="," open="(" close=")">
                                <choose>
                                    <when test="value == 'true'">1</when>
                                    <when test="value == 'false'">0</when>
                                    <otherwise>0</otherwise>
                                </choose>
                            </foreach>
                        </when>
                        <when test="key=='status'">
                            and ar.status in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                        <when test="key=='execStatus'">
                            and ar.exec_status in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                        <when test="key=='triggerMode'">
                            and ar.trigger_mode in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                        <when test="key=='createUser'">
                            and ar.create_user in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                        <when test="key=='updateUser'">
                            and ar.update_user in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                        <when test="key=='projectIds'">
                            and ar.project_id in
                            <foreach collection="values" item="value" separator="," open="(" close=")">
                                #{value}
                            </foreach>
                        </when>
                        <when test="key=='organizationIds'">
                            and project.organization_id in
                            <foreach collection="values" item="value" separator="," open="(" close=")">
                                #{value}
                            </foreach>
                        </when>
                    </choose>
                </if>
            </foreach>
        </if>
    </sql>

    <select id="taskCenterlist" resultType="io.metersphere.system.dto.taskcenter.TaskCenterDTO">

        select
        distinct ar.id,
        ar.project_id,
        ar.integrated,
        ar.STATUS,
        ar.exec_status,
        ar.start_time AS operationTime,
        ar.create_user AS operationName,
        ar.trigger_mode,
        ar.start_time,
        ar.plan,
        project.organization_id,

        if(ar.integrated, ar.id, c.num) AS resourceNum,
        if(ar.integrated, ar.name,c.name) AS resourceName,
        if (ar.integrated,ar.id,c.id ) AS resourceId,

        t.NAME AS poolName
        FROM
        api_report ar
        LEFT JOIN api_test_case_record a ON ar.id = a.api_report_id
        INNER JOIN api_test_case c ON a.api_test_case_id = c.id
        LEFT JOIN test_resource_pool t ON ar.pool_id = t.id
        left join project on ar.project_id = project.id
        where
        ar.start_time BETWEEN #{startTime} AND #{endTime}
        and ar.plan = 0
        <if test="projectIds != null and projectIds.size() > 0">
            and
            ar.project_id IN
            <foreach collection="projectIds" item="projectId" separator="," open="(" close=")">
                #{projectId}
            </foreach>
        </if>
        <if test="request.keyword != null and request.keyword != ''">
            and ( if(ar.integrated, ar.id, c.num) like concat('%', #{request.keyword},'%')

            or if(ar.integrated, ar.name,c.name) like concat('%', #{request.keyword},'%')
            )
        </if>
        <include refid="filters">
            <property name="filter" value="request.filter"/>
        </include>
    </select>
    <select id="getReports" resultType="io.metersphere.api.dto.report.ReportDTO">
       select distinct ar.* , project.organization_id ,
        ar.test_plan_case_id as testPlanId,
        if (ar.test_plan_case_id = 'NONE' , a.api_test_case_id , ar.test_plan_case_id) as resourceId from api_report ar
        LEFT JOIN api_test_case_record a ON ar.id = a.api_report_id
        LEFT JOIN api_test_case c ON a.api_test_case_id = c.id
        left join project on ar.project_id = project.id
        where
        ar.deleted = false and ar.plan = 0
        and ar.start_time BETWEEN #{startTime} AND #{endTime}
        and ar.exec_status in ('PENDING', 'RUNNING', 'RERUNNING')
        <if test="ids != null and ids.size() > 0">
            and ar.id in
            <foreach collection="ids" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        <if test="projectIds != null and projectIds.size() > 0">
            and ar.project_id in
            <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
                #{projectId}
            </foreach>
        </if>
        <if test="request.condition.keyword != null">
            and (

            if(ar.integrated, ar.id, c.num) like concat('%', #{request.condition.keyword},'%')

            or if(ar.integrated, ar.name,c.name) like concat('%', #{request.condition.keyword},'%')

            )
        </if>

        <include refid="filters">
            <property name="filter" value="request.condition.filter"/>
        </include>

    </select>
    <select id="selectByIds" resultType="io.metersphere.api.dto.report.ReportDTO">
        select
        id,
        name,
        project_id
        from api_report where deleted = false
        and test_plan_case_id = 'NONE'
        and id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    <select id="getNoticeList" resultType="io.metersphere.system.dto.sdk.ApiReportMessageDTO">
        select id , name
        from api_report
        <if test="ids != null and ids.size() > 0">
            where id in
            <foreach collection="ids" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>

        </if>
    </select>
    <select id="getHistoryDeleted" resultType="io.metersphere.api.dto.definition.ExecuteReportDTO">
        select distinct ar.* from api_report ar INNER JOIN api_report_step ars on ar.id = ars.report_id
        <if test="ids != null and ids.size() > 0">
            where ar.id in
            <foreach collection="ids" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
    </select>

</mapper>
