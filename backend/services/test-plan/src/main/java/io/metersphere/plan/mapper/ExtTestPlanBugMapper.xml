<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.plan.mapper.ExtTestPlanBugMapper">
    <select id="list" parameterType="io.metersphere.plan.dto.request.TestPlanBugPageRequest" resultType="io.metersphere.plan.dto.response.TestPlanBugPageResponse">
        select b.id as id, b.num as num, b.title as title, bc.description content, b.handle_user handleUser, b.status as status, b.create_user createUser, b.create_time createTime
        from bug_relation_case brc join bug b on brc.bug_id = b.id
        left join bug_content bc on b.id = bc.bug_id
        where brc.test_plan_id = #{request.planId} and b.deleted = false
        <if test="request.keyword != null and request.keyword != ''">
            and (
            b.title like concat('%', #{request.keyword},'%')
            or b.num like concat('%', #{request.keyword},'%')
            )
        </if>
        <include refid="filters">
            <property name="filter" value="request.filter"/>
        </include>
        <include refid="combine">
            <property name="combineSearch" value="request.combineSearch"/>
            <property name="projectId" value="${request.projectId}"/>
        </include>
        group by brc.bug_id
    </select>


    <select id="countBugByIds" resultType="io.metersphere.plan.dto.response.TestPlanBugPageResponse">
        select b.id as id, b.num as num, b.title as title, bc.description content, b.handle_user handleUser, b.status as status, b.create_user createUser, b.create_time createTime,brc.test_plan_id testPlanId
        from bug_relation_case brc join bug b on brc.bug_id = b.id
        left join bug_content bc on b.id = bc.bug_id
        <where>
            b.deleted = false
            <if test="planIds != null and planIds.size() > 0">
                and brc.test_plan_id IN
                <foreach collection="planIds" item="id" separator="," open="(" close=")">
                    #{id}
                </foreach>
            </if>
        </where>
        group by brc.bug_id
    </select>


    <select id="getBugRelatedCase" resultType="io.metersphere.plan.dto.TestPlanBugCaseDTO">
        select brc.case_id as id, fc.num as num, 'FUNCTIONAL' as type, brc.bug_id as bugId, fc.name as name, fc.project_id as projectId
            from bug_relation_case brc
            join functional_case fc on brc.case_id = fc.id
        where brc.test_plan_id = #{planId}
        and brc.bug_id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
        union all
        select brc.case_id as id, atc.num as num, 'API' as type, brc.bug_id as bugId, atc.name as name, atc.project_id as projectId
            from bug_relation_case brc
            join api_test_case atc on brc.case_id = atc.id
        where brc.test_plan_id = #{planId}
        and brc.bug_id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
        union all
        select brc.case_id as id, asi.num as num, 'SCENARIO' as type, brc.bug_id as bugId, asi.name as name, asi.project_id as projectId
            from bug_relation_case brc
            join api_scenario asi on brc.case_id = asi.id
        where brc.test_plan_id = #{planId}
        and brc.bug_id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </select>

    <select id="getCaseRelatedBug" resultType="io.metersphere.plan.dto.TestPlanCaseBugDTO">
        select brc.id as id, b.num as num, b.title as title, b.status as status, brc.test_plan_case_id as planCaseRefId
        from bug_relation_case brc
           join bug b on brc.bug_id = b.id
        where b.deleted = false and brc.test_plan_case_id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </select>

    <sql id="filters">
        <if test="${filter} != null and ${filter}.size() > 0">
            <foreach collection="${filter}.entrySet()" index="key" item="values">
                <if test="values != null and values.size() > 0">
                    <choose>
                        <!-- 处理人 -->
                        <when test="key == 'handleUser'">
                            and b.handle_user in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                        <!-- 状态 -->
                        <when test="key=='status'">
                            and b.status in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                    </choose>
                </if>
            </foreach>
        </if>
    </sql>

    <sql id="combine">
        <trim prefix="AND">
            <trim prefix="(" suffix=")" suffixOverrides="AND|OR">
                <if test="${combineSearch} != null">
                    <foreach collection="${combineSearch}.userViewConditions" item="condition">
                        <if test="condition.name == 'createUser'">
                            <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                                <property name="condition" value="condition"/>
                                <property name="column" value="b.create_user"/>
                            </include>
                        </if>
                        <if test="condition.name == 'follower'">
                            <include refid="io.metersphere.system.mapper.BaseMapper.associationCondition">
                                <property name="mainIdColumn" value="b.id"/>
                                <property name="associationTable" value="bug_follower"/>
                                <property name="associationIdColumn" value="bug_id"/>
                                <property name="searchColumn" value="user_id"/>
                                <property name="condition" value="condition"/>
                            </include>
                        </if>
                        <include refid="io.metersphere.system.mapper.BaseMapper.queryType">
                            <property name="searchMode" value="${combineSearch}.searchMode"/>
                        </include>
                    </foreach>
                    <foreach collection="${combineSearch}.systemFieldConditions" item="condition">
                        <include refid="io.metersphere.system.mapper.BaseMapper.commonSystemFieldConditions">
                            <property name="condition" value="condition"/>
                            <property name="tablePrefix" value="b"/>
                        </include>
                        <!-- 标题 -->
                        <if test="condition.name == 'title'">
                            <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                                <property name="condition" value="condition"/>
                                <property name="column" value="b.title"/>
                            </include>
                        </if>
                        <!-- 状态 -->
                        <if test="condition.name == 'status'">
                            <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                                <property name="condition" value="condition"/>
                                <property name="column" value="b.status"/>
                            </include>
                        </if>
                        <!-- 处理人 -->
                        <if test="condition.name == 'handleUser'">
                            <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                                <property name="condition" value="condition"/>
                                <property name="column" value="b.handle_user"/>
                            </include>
                        </if>
                        <!-- 所属平台 -->
                        <if test="condition.name == 'platform'">
                            <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                                <property name="condition" value="condition"/>
                                <property name="column" value="b.platform"/>
                            </include>
                        </if>
                        <!-- 用例数 -->
                        <if test="condition.name == 'relationCaseCount'">
                            <choose>
                                <when test="condition.operator == 'NOT_EMPTY'">
                                    b.id in (
                                        select distinct b.id from bug b join bug_relation_case brc on b.id = brc.bug_id
                                        where deleted = false and project_id = '${projectId}'
                                    )
                                </when>
                                <when test="condition.operator == 'EMPTY'">
                                    b.id not in (
                                        select distinct b.id from bug b join bug_relation_case brc on b.id = brc.bug_id
                                        where deleted = false and project_id = '${projectId}'
                                    )
                                </when>
                                <when test="(condition.operator == 'LT' and condition.value &lt; 1) or (condition.operator == 'EQUALS' and condition.value &lt; 0)">
                                    1=2
                                </when>
                                <otherwise>
                                    <if test="condition.operator == 'LT' or (condition.operator == 'EQUALS' and condition.value == 0)">
                                        b.id not in (
                                            select distinct b.id from bug b join bug_relation_case brc on b.id = brc.bug_id
                                            where deleted = false and project_id = '${projectId}'
                                        )
                                        <if test="condition.value &gt; 1">
                                            OR
                                        </if>
                                    </if>
                                    <if test="(condition.operator == 'EQUALS' and condition.value &gt; 0) or (condition.operator == 'LT' and condition.value &gt; 1) or condition.operator == 'GT'">
                                        b.id in (
                                            select distinct b.id from bug b join bug_relation_case brc on b.id = brc.bug_id
                                            where deleted = false and project_id = '${projectId}' group by b.id having
                                            <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                                                <property name="condition" value="condition"/>
                                                <property name="column" value="count(b.id)"/>
                                            </include>
                                        )
                                    </if>
                                </otherwise>
                            </choose>
                        </if>
                        <include refid="io.metersphere.system.mapper.BaseMapper.queryType">
                            <property name="searchMode" value="${combineSearch}.searchMode"/>
                        </include>
                    </foreach>
                    <include refid="io.metersphere.system.mapper.BaseMapper.customFiledConditions">
                        <property name="mainIdColumn" value="b.id"/>
                        <property name="associationTable" value="bug_custom_field"/>
                        <property name="associationIdColumn" value="bug_id"/>
                        <property name="combineSearch" value="${combineSearch}"/>
                    </include>
                </if>
            </trim>
        </trim>
    </sql>
</mapper>