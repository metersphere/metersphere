<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.plan.mapper.ExtTestPlanReportBugMapper">

    <select id="getPlanBugs" resultType="io.metersphere.plan.domain.TestPlanReportBug">
        select distinct brc.bug_id as bugId, b.num as bugNum, b.title as bugTitle, b.status bugStatus,
                        b.handle_user bugHandleUser, count(brc.id) bugCaseCount
        from bug_relation_case brc join bug b on brc.bug_id = b.id
        where brc.test_plan_id = #{id}
        group by brc.bug_id
    </select>

    <select id="list" resultType="io.metersphere.bug.dto.response.BugDTO">
        select distinct tprb.bug_id as id, tprb.bug_num as num, tprb.bug_title as title, tprb.bug_status as status, tprb.bug_handle_user as handleUserName,
            ifnull(tprb.bug_case_count, 0) as relationCaseCount
        from test_plan_report_bug tprb
        where tprb.test_plan_report_id = #{request.reportId}
    </select>

    <select id="countBug" resultType="io.metersphere.plan.dto.ReportBugSumDTO">
        select 'FUNCTIONAL' as caseType, ifnull(sum(tprfc.function_case_bug_count), 0) as bugCount from test_plan_report_function_case tprfc
        where tprfc.test_plan_report_id = #{id}
        union
        select 'API' as caseType, ifnull(sum(tprac.api_case_bug_count), 0) as bugCount from test_plan_report_api_case tprac
        where tprac.test_plan_report_id = #{id}
        union
        select 'SCENARIO' as caseType, ifnull(sum(tpras.api_scenario_bug_count), 0) as bugCount from test_plan_report_api_scenario tpras
        where tpras.test_plan_report_id = #{id}
    </select>
</mapper>