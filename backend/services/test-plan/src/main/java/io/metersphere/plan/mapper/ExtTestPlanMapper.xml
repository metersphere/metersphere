<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.plan.mapper.ExtTestPlanMapper">
    <resultMap id="testPlanBaseInfo" type="io.metersphere.plan.dto.response.TestPlanResponse">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="num" jdbcType="BIGINT" property="num"/>
        <result column="module_id" jdbcType="VARCHAR" property="moduleId"/>
        <result column="project_id" jdbcType="VARCHAR" property="projectId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="tags" jdbcType="VARCHAR" property="tags" typeHandler="io.metersphere.handler.ListTypeHandler"/>
        <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="group_id" jdbcType="VARCHAR" property="groupId"/>
    </resultMap>

    <resultMap id="BaseResultMapDTO" type="io.metersphere.plan.dto.response.TestPlanResponse">
        <result column="tags" jdbcType="VARCHAR" property="tags" typeHandler="io.metersphere.handler.ListTypeHandler" />
    </resultMap>

    <resultMap id="BaseResultMap" type="io.metersphere.plan.domain.TestPlan">
        <result column="tags" jdbcType="VARCHAR" property="tags" typeHandler="io.metersphere.handler.ListTypeHandler" />
    </resultMap>


    <update id="updateDefaultGroupId">
        UPDATE test_plan
        SET group_id = 'NONE'
        WHERE group_id IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <select id="selectIdByGroupId" resultType="java.lang.String">
        SELECT id FROM test_plan WHERE group_id = #{parentId}
    </select>
    <select id="selectByGroupIdList" resultType="java.lang.String">
        SELECT id FROM test_plan WHERE group_id IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="selectByConditions"
            resultMap="BaseResultMapDTO">
        SELECT
        t.id,t.num,t.name,t.status,t.group_id,
        t.create_user AS createUser,
        createUser.name AS createUserName,
        t.create_time as createTime,
        t.module_id as moduleId,
        t.type,
        t.description,
        t.pos,
        t.tags
        FROM test_plan t
        INNER JOIN user createUser ON t.create_user = createUser.id
        WHERE t.project_id = #{request.projectId}
        <include refid="queryByTableRequest"/>
    </select>

    <select id="selectByGroupIds"
            resultMap="BaseResultMapDTO">
        SELECT
        t.id,t.num,t.name,t.status,t.group_id,
        t.create_user AS createUser,
        createUser.name AS createUserName,
        t.create_time as createTime,
        t.module_id as moduleId,
        t.type,
        t.description,
        t.pos,
        t.group_id AS parent,
        t.tags
        FROM test_plan t
        INNER JOIN user createUser ON t.create_user = createUser.id
        WHERE t.group_id IN
        <foreach collection="groupIds" item="groupId" separator="," open="(" close=")">
            #{groupId}
            </foreach>
        ORDER BY t.pos ASC
    </select>

    <sql id="queryByTableRequest">
        <include refid="baseConditionQuery"/>
        <if test="request.keyword != null and request.keyword != ''">
            and (
            t.name like concat('%', #{request.keyword},'%')
            or t.num like concat('%', #{request.keyword},'%')
            or t.tags like concat('%', #{request.keyword}, '%')
            )
        </if>
        <if test="request.type != null and request.type != ''">
            <choose>
                <when test="request.type == 'ALL'">
                    and t.group_id = 'NONE'
                </when>
                <when test="request.type == 'TEST_PLAN'">
                    and t.group_id = 'NONE'
                    and t.type = 'TEST_PLAN'
                </when>
                <when test="request.type == 'GROUP'">
                    and t.group_id = 'NONE'
                    and t.type = 'GROUP'
                </when>
            </choose>
        </if>
        <choose>
            <when test='request.searchMode == "AND"'>
                AND <include refid="queryCombine"/>
            </when>
            <when test='request.searchMode == "OR"'>
                and (
                <include refid="queryCombine"/>
                )
            </when>
        </choose>
        <include refid="filters">
            <property name="filter" value="request.filter"/>
        </include>

    </sql>


    <sql id="filters">
        <if test="${filter} != null and ${filter}.size() > 0">
            <foreach collection="${filter}.entrySet()" index="key" item="values">
                <if test="values != null and values.size() > 0">
                    <choose>
                        <!-- 状态 -->
                        <when test="key=='status'">
                            and t.status in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                    </choose>
                </if>
            </foreach>
        </if>
    </sql>


    <sql id="queryCombine">
        <if test="request.combine != null">
            <include refid="combine">
                <property name="condition" value="request.combine"/>
                <property name="searchMode" value="request.searchMode"/>
            </include>
        </if>
        1=1
    </sql>

    <sql id="combine">
        <!-- 名称 -->
        <if test='${condition}.name != null'>
            t.name
            <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                <property name="object" value="${condition}.name"/>
            </include>
            <include refid="queryType">
                <property name="searchMode" value="${searchMode}"/>
            </include>
        </if>
        <!-- id -->
        <if test='${condition}.id != null'>
            t.num
            <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                <property name="object" value="${condition}.id"/>
            </include>
            <include refid="queryType">
                <property name="searchMode" value="${searchMode}"/>
            </include>
        </if>
        <!-- 所属模块 -->
        <if test='${condition}.moduleId != null'>
            t.moduleId
            <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                <property name="object" value="${condition}.moduleId"/>
            </include>
            <include refid="queryType">
                <property name="searchMode" value="${searchMode}"/>
            </include>
        </if>
        <!-- 创建人 -->
        <if test='${condition}.createUser != null'>
            t.create_user
            <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                <property name="object" value="${condition}.createUser"/>
            </include>
            <include refid="queryType">
                <property name="searchMode" value="${searchMode}"/>
            </include>
        </if>
        <!-- 创建时间 -->
        <if test='${condition}.createTime != null'>
            t.create_time
            <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                <property name="object" value="${condition}.createTime"/>
            </include>
            <include refid="queryType">
                <property name="searchMode" value="${searchMode}"/>
            </include>
        </if>
        <!-- 标签 -->
        <if test='${condition}.tags != null'>
            <include refid="queryTag">
                <property name="searchMode" value="${searchMode}"/>
                <property name="combineTag" value="${condition}.tags"/>
            </include>
        </if>
    </sql>

    <sql id="queryType">
        <choose>
            <when test='${searchMode} == "AND"'>
                AND
            </when>
            <when test='${searchMode} == "OR"'>
                OR
            </when>
        </choose>
    </sql>


    <sql id="queryTag">
        <!-- 不包含 -->
        <if test='${combineTag}.value.size() > 0 and ${combineTag}.operator == "not like"'>
            (
            t.tags is null or t.tags = '[]' or
            <foreach collection="${combineTag}.value" item="tag" separator="and" open="(" close=")">
                !JSON_CONTAINS(t.tags, JSON_ARRAY(#{tag}))
            </foreach>
            )
            <include refid="queryType">
                <property name="searchMode" value="${searchMode}"/>
            </include>
        </if>
        <!-- 包含 -->
        <if test='${combineTag}.value.size() > 0 and ${combineTag}.operator == "like"'>
            <foreach collection="${combineTag}.value" item="tag" separator="or" open="(" close=")">
                JSON_CONTAINS(t.tags, JSON_ARRAY(#{tag}))
            </foreach>
            <include refid="queryType">
                <property name="searchMode" value="${searchMode}"/>
            </include>
        </if>
        <!-- 空 -->
        <if test='${combineTag}.operator == "is null"'>
            (t.tags is null or t.tags = '[]')
            <include refid="queryType">
                <property name="searchMode" value="${searchMode}"/>
            </include>
        </if>
    </sql>


    <select id="countModuleIdByConditions"
            resultType="io.metersphere.project.dto.ModuleCountDTO">
        SELECT t.module_id AS moduleId, count(t.id) AS dataCount
        FROM test_plan t
        INNER JOIN user createUser ON t.create_user = createUser.id
        WHERE t.project_id = #{request.projectId}
        <include refid="queryByTableRequest"/>
        GROUP BY t.module_id
    </select>
    <select id="selectIdByConditions"
            parameterType="io.metersphere.plan.dto.TestPlanQueryConditions"
            resultType="java.lang.String">
        SELECT
        t.id
        FROM test_plan t
        WHERE t.project_id = #{request.projectId}
        <include refid="queryByTestPlanQueryConditions"/>
    </select>
    <sql id="baseConditionQuery">
        <if test="request.moduleIds != null and request.moduleIds.size() > 0">
            and t.module_id in
            <foreach collection="request.moduleIds" item="moduleId" separator="," open="(" close=")">
                #{moduleId}
            </foreach>
        </if>
        <if test="request.type != null and request.type != ''">
            <choose>
                <when test="request.type == 'ALL'">
                    and t.group_id = 'NONE'
                </when>
                <when test="request.type == 'TEST_PLAN'">
                    and t.group_id = 'NONE'
                    and t.type = 'TEST_PLAN'
                </when>
                <when test="request.type == 'GROUP'">
                    and t.group_id = 'NONE'
                    and t.type = 'GROUP'
                </when>
            </choose>
        </if>
    </sql>
    <sql id="queryByTestPlanQueryConditions">
        <include refid="baseConditionQuery"/>
        <if test="request.condition.keyword != null and request.condition.keyword != ''">
            and (
            t.name like concat('%', #{request.condition.keyword},'%')
            or t.num like concat('%', #{request.condition.keyword},'%')
            or t.tags like concat('%', #{request.condition.keyword}, '%')
            )
        </if>
        <choose>
            <when test='request.condition.searchMode == "AND"'>
                AND <include refid="baseQueryCombine"/>
            </when>
            <when test='request.condition.searchMode == "OR"'>
                and (
                <include refid="baseQueryCombine"/>
                )
            </when>
        </choose>
        <include refid="filters">
            <property name="filter" value="request.condition.filter"/>
        </include>
    </sql>

    <sql id="baseQueryCombine">
        <if test="request.condition.combine != null">
            <include refid="combine">
                <property name="condition" value="request.condition.combine"/>
                <property name="searchMode" value="request.condition.searchMode"/>
            </include>
        </if>
        1=1
    </sql>


    <select id="selectGroupIdByConditions"
            parameterType="io.metersphere.plan.dto.TestPlanQueryConditions"
            resultType="java.lang.String">
        SELECT
        distinct t.group_id
        FROM test_plan t
        INNER JOIN user createUser ON t.create_user = createUser.id
        <include refid="test_plan_page_request"/>
        AND t.group_id != 'NONE'
    </select>

    <select id="selectBaseInfoByIds" resultType="io.metersphere.plan.domain.TestPlan">
        SELECT
        t.id,t.name,t.type,t.project_id,t.type
        FROM test_plan t
        WHERE t.id IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <select id="selectProjectIdByTestPlanId" resultType="java.lang.String">
        SELECT project_id
        FROM test_plan
        WHERE id = #{testPlanId}
    </select>

    <sql id="test_plan_page_request">
        WHERE t.project_id = #{projectId}
        <if test="groupId != null and groupId != ''">
            AND t.group_id = #{groupId}
            </if>
            <if test="condition.keyword != null and condition.keyword != ''">
                AND t.name like concat('%', #{condition.keyword}, '%')
            </if>
            <if test="moduleIds != null and moduleIds.size() != 0">
                AND t.module_id IN
                <foreach collection="moduleIds" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="hiddenIds != null and hiddenIds.size()>0">
                AND t.id NOT IN
                <foreach collection="hiddenIds" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        <if test="includeIds != null and includeIds.size() != 0">
            OR
            t.id IN
            <foreach collection="includeIds" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </sql>


    <update id="batchUpdateStatus">
        UPDATE test_plan
        SET status = #{status}, update_user = #{userId}, update_time = #{updateTime}
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <update id="batchMove">
        UPDATE test_plan
        SET module_id = #{moduleId}, update_user = #{userId}, update_time = #{updateTime}
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="getTagsByIds" resultMap="BaseResultMap">
        select id, tags from test_plan
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    <select id="selectIdByProjectId" resultType="java.lang.String">
        SELECT id
        FROM test_plan
        WHERE project_id = #{0}
    </select>
    <select id="selectNotArchivedIds" resultType="java.lang.String">
        SELECT id FROM test_plan WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND status != 'ARCHIVED'
    </select>
    <select id="selectDragInfoById" resultType="io.metersphere.project.dto.DropNode">
        SELECT id, pos
        FROM test_plan
        WHERE id = #{0}
    </select>

    <select id="selectNodeByPosOperator"
            parameterType="io.metersphere.project.dto.NodeSortQueryParam"
            resultType="io.metersphere.project.dto.DropNode">
        SELECT id, pos
        FROM test_plan
        WHERE group_id = #{parentId}
        <if test="operator == 'moreThan'">
            AND pos &gt; #{pos}
        </if>
        <if test="operator == 'lessThan'">
            AND pos &lt; #{pos}
        </if>
        ORDER BY pos
        <if test="operator == 'lessThan' or operator == 'latest'">
            DESC
        </if>
        LIMIT 1
    </select>
    <select id="selectMaxPosByGroupId" resultType="java.lang.Long">
        SELECT IF(MAX(pos) IS NULL, 0, MAX(pos)) AS pos
        FROM test_plan
        WHERE group_id = #{0}
    </select>
    <select id="selectRightfulIdsForExecute" resultType="java.lang.String">
        SELECT id FROM test_plan WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND status != 'ARCHIVED'
    </select>

    <select id="listHis" resultType="io.metersphere.plan.dto.TestPlanExecuteHisDTO">
        select tpr.id, from_unixtime(tpr.create_time / 1000, '%Y%m%d%H%i%s') as num, tpr.trigger_mode triggerMode, tpr.exec_status execStatus,
               tpr.create_user createUser, tpr.start_time startTime, tpr.end_time endTime, tpr.deleted deleted from test_plan_report tpr
        where tpr.test_plan_id = #{request.planId}
        <include refid="filter"/>
    </select>

    <update id="batchUpdate">
        update test_plan
        <set>
            <if test="testPlan.tags != null and testPlan.tags != ''">
                tags = #{testPlan.tags,typeHandler=io.metersphere.handler.ListTypeHandler},
            </if>
            <if test="testPlan.updateUser != null and testPlan.updateUser != ''">
                update_user = #{testPlan.updateUser},
            </if>
            <if test="testPlan.updateTime != null">
                update_time = #{testPlan.updateTime},
            </if>
        </set>
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        and project_id = #{testPlan.projectId}
    </update>

    <sql id="filter">
        <if test="request.filter != null and request.filter.size() > 0">
            <foreach collection="request.filter.entrySet()" index="key" item="values">
                <if test="values != null and values.size() > 0">
                    <choose>
                        <!-- 执行状态 -->
                        <when test="key == 'execStatus'">
                            and tpr.exec_status in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                    </choose>
                </if>
            </foreach>
        </if>
    </sql>
</mapper>