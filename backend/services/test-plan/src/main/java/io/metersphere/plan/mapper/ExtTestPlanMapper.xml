<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.plan.mapper.ExtTestPlanMapper">
    <resultMap id="testPlanBaseInfo" type="io.metersphere.plan.dto.response.TestPlanResponse">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="num" jdbcType="BIGINT" property="num"/>
        <result column="module_id" jdbcType="VARCHAR" property="moduleId"/>
        <result column="project_id" jdbcType="VARCHAR" property="projectId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="tags" jdbcType="VARCHAR" property="tags" typeHandler="io.metersphere.handler.ListTypeHandler"/>
        <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
    </resultMap>

    <update id="updateDefaultGroupId">
        UPDATE test_plan
        SET group_id = 'NONE'
        WHERE group_id IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <select id="selectByGroupId" resultType="java.lang.String">
        SELECT id FROM test_plan WHERE group_id = #{parentId}
    </select>
    <select id="selectByGroupIdList" resultType="java.lang.String">
        SELECT id FROM test_plan WHERE group_id IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="selectByConditions"
            parameterType="io.metersphere.plan.dto.TestPlanQueryConditions"
            resultMap="testPlanBaseInfo">
        SELECT
        t.id,t.num,t.name,t.status,
        createUser.name AS createUser,
        t.create_time,
        t.module_id,
        t.type,
        t.tags
        FROM test_plan t
        INNER JOIN user createUser ON t.create_user = createUser.id
        <include refid="test_plan_page_request"/>
    </select>

    <select id="countModuleIdByConditions"
            parameterType="io.metersphere.plan.dto.TestPlanQueryConditions"
            resultType="io.metersphere.project.dto.ModuleCountDTO">
        SELECT t.module_id AS moduleId, count(t.id) AS dataCount
        FROM test_plan t
        INNER JOIN user createUser ON t.create_user = createUser.id
        <include refid="test_plan_page_request"/>
        GROUP BY t.module_id
    </select>
    <select id="selectIdByConditions"
            parameterType="io.metersphere.plan.dto.TestPlanQueryConditions"
            resultType="java.lang.String">
        SELECT
        t.id
        FROM test_plan t
        INNER JOIN user createUser ON t.create_user = createUser.id
        <include refid="test_plan_page_request"/>
    </select>

    <select id="selectGroupIdByConditions"
            parameterType="io.metersphere.plan.dto.TestPlanQueryConditions"
            resultType="java.lang.String">
        SELECT
        distinct t.group_id
        FROM test_plan t
        INNER JOIN user createUser ON t.create_user = createUser.id
        <include refid="test_plan_page_request"/>
        AND t.group_id != 'NONE'
    </select>

    <select id="selectBaseInfoByIds" resultType="io.metersphere.plan.domain.TestPlan">
        SELECT
        t.id,t.name,t.type,t.project_id
        FROM test_plan t
        WHERE t.id IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <select id="selectProjectIdByTestPlanId" resultType="java.lang.String">
        SELECT project_id
        FROM test_plan
        WHERE id = #{testPlanId}
    </select>

    <sql id="test_plan_page_request">
        WHERE t.project_id = #{projectId}
        <if test="groupId != null and groupId != ''">
            AND t.group_id = #{groupId}
            </if>
            <if test="condition.keyword != null and condition.keyword != ''">
                AND t.name like concat('%', #{condition.keyword}, '%')
            </if>
            <if test="moduleIds != null and moduleIds.size() != 0">
                AND t.module_id IN
                <foreach collection="moduleIds" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="hiddenIds != null and hiddenIds.size()>0">
                AND t.id NOT IN
                <foreach collection="hiddenIds" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        <if test="includeIds != null and includeIds.size() != 0">
            OR
            t.id IN
            <foreach collection="includeIds" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </sql>

</mapper>