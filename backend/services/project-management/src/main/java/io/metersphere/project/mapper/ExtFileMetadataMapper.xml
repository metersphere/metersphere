<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.project.mapper.ExtFileMetadataMapper">

    <resultMap id="BaseResultMap" type="io.metersphere.project.domain.FileMetadata">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="size" jdbcType="BIGINT" property="size"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="update_time" jdbcType="BIGINT" property="updateTime"/>
        <result column="project_id" jdbcType="VARCHAR" property="projectId"/>
        <result column="storage" jdbcType="VARCHAR" property="storage"/>
        <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="update_user" jdbcType="VARCHAR" property="updateUser"/>
        <result column="tags" jdbcType="VARCHAR" property="tags" typeHandler="io.metersphere.handler.ListTypeHandler"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="module_id" jdbcType="VARCHAR" property="moduleId"/>
        <result column="path" jdbcType="VARCHAR" property="path"/>
        <result column="latest" jdbcType="BIT" property="latest"/>
        <result column="enable" jdbcType="BIT" property="enable"/>
        <result column="ref_id" jdbcType="VARCHAR" property="refId"/>
        <result column="file_version" jdbcType="VARCHAR" property="fileVersion"/>
    </resultMap>

    <select id="selectByKeywordAndFileType"
            parameterType="io.metersphere.project.dto.filemanagement.FileManagementQuery"
            resultMap="BaseResultMap">
        SELECT
        f.id,
        updateUser.name as updateUser,
        createUser.name AS createUser,
        f.module_id,
            f.name,
            f.type,
            f.tags,
            f.description,
        f.create_time,
            f.update_time,
            f.path,
            f.project_id,
            f.size,
        f.enable,
            f.storage
        FROM file_metadata f
        INNER JOIN user updateUser ON f.update_user = updateUser.id
        INNER JOIN user createUser ON f.create_user = createUser.id
        <include refid="file_page_request"/>
    </select>

    <select id="selectRefIdByKeywordAndFileType"
            parameterType="io.metersphere.project.dto.filemanagement.FileManagementQuery"
            resultType="io.metersphere.project.domain.FileMetadata">
        SELECT
        f.id,
        f.ref_id
        FROM file_metadata f
        INNER JOIN user updateUser ON f.update_user = updateUser.id
        INNER JOIN user createUser ON f.create_user = createUser.id
        <include refid="file_page_request"/>
    </select>

    <select id="countModuleIdByKeywordAndFileType"
            parameterType="io.metersphere.project.dto.filemanagement.FileManagementQuery"
            resultType="io.metersphere.project.dto.ModuleCountDTO">
        SELECT f.module_id AS moduleId, count(f.id) AS dataCount
        FROM file_metadata f
        INNER JOIN user updateUser ON f.update_user = updateUser.id
        INNER JOIN user createUser ON f.create_user = createUser.id
        <include refid="file_page_request"/>
        GROUP BY f.module_id
    </select>

    <select id="fileCount"
            parameterType="io.metersphere.project.dto.filemanagement.FileManagementQuery"
            resultType="java.lang.Long">
        SELECT count(f.id)
        FROM file_metadata f
        INNER JOIN user updateUser ON f.update_user = updateUser.id
        INNER JOIN user createUser ON f.create_user = createUser.id
        <include refid="file_page_request"/>
    </select>
    <sql id="file_page_request">
        <where>
            f.latest = true
            AND f.project_id = #{projectId}
            <if test="keyword != null and keyword != ''">
                AND f.name like concat('%', #{keyword}, '%')
            </if>
            <if test="storage != null and storage != ''">
                AND f.storage = #{storage}
            </if>
            <if test="moduleIds != null and moduleIds.size() != 0">
                AND f.module_id IN
                <foreach collection="moduleIds" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="fileType != null and fileType != ''">
                AND f.type = #{fileType}
            </if>
            <if test="hiddenIds != null and hiddenIds.size()>0">
                AND f.ref_id NOT IN
                (SELECT ref_id FROM file_metadata WHERE id IN
                <foreach collection="hiddenIds" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
                )
            </if>
            <if test="operator != null and operator != ''">
                AND f.create_user = #{operator}
            </if>
        </where>
    </sql>

    <select id="selectIdByRefIdList" resultType="java.lang.String">
        SELECT id FROM file_metadata WHERE ref_id IN
        <foreach collection="refIdList" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="selectDeleteFileInfoByIds" resultType="io.metersphere.project.domain.FileMetadata">
        SELECT
        f.id,f.name,f.type,f.project_id,f.storage
        FROM  file_metadata f WHERE f.id IN
        <foreach collection="ids" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="selectRefIdByIds" resultType="io.metersphere.project.domain.FileMetadata">
        SELECT DISTINCT f.ref_id FROM file_metadata f
        WHERE
        f.id IN
        <foreach collection="fileIds" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <select id="selectDeleteFileInfoByRefIdList" resultType="io.metersphere.project.domain.FileMetadata">
        SELECT
        f.id,
        f.project_id,
        f.storage
        FROM file_metadata f WHERE f.ref_id IN
        <foreach collection="refIdList" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <select id="selectRefIdByModuleIds" resultType="io.metersphere.project.domain.FileMetadata">
        SELECT
        f.ref_id
        FROM file_metadata f
        WHERE f.module_id IN
        <foreach collection="moduleIds" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <select id="selectFileTypeByProjectId" resultType="java.lang.String">
        SELECT DISTINCT f.type
        FROM file_metadata f
        WHERE f.project_id = #{projectId}
          AND f.storage = #{storage}
    </select>
    <select id="getById" resultMap="BaseResultMap">
        SELECT f.id,
               f.module_id,
               f.create_time,
               f.update_time,
               updateUser.name as update_user,
               createUser.name AS create_user,
               f.name,
               f.type,
               f.tags,
               f.enable,
               f.description,
               f.update_time,
               f.path,
               f.project_id,
               f.size,
               f.ref_id,
               f.file_version,
               f.storage
        FROM file_metadata f
                 INNER JOIN user updateUser ON f.update_user = updateUser.id
                 INNER JOIN user createUser ON f.create_user = createUser.id
        WHERE f.id = #{id}
    </select>
    <select id="countRepositoryFileByFileNameAndBranch" resultType="java.lang.Long">
        SELECT count(f.id)
        FROM file_metadata f
                 INNER JOIN file_metadata_repository fgit ON f.id = fgit.file_metadata_id
        WHERE f.path = #{filePath}
          AND f.module_id = #{moduleId}
          AND fgit.branch = #{branch}
          AND f.project_id = #{projectId}
    </select>


</mapper>