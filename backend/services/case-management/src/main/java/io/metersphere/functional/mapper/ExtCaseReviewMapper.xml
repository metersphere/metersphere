<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.functional.mapper.ExtCaseReviewMapper">

    <resultMap id="BaseResultMapDTO" type="io.metersphere.functional.dto.CaseReviewDTO">
        <result column="tags" jdbcType="VARCHAR" property="tags" typeHandler="io.metersphere.handler.ListTypeHandler" />
    </resultMap>

    <select id="checkCaseByModuleIds" resultType="io.metersphere.functional.domain.CaseReview">
        SELECT
            id, name, module_id, create_user
        FROM
            case_review
        WHERE
            module_id IN
        <foreach collection="moduleIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="getPos" resultType="java.lang.Long">
        SELECT
            pos
        FROM
            case_review
        WHERE
            project_id = #{projectId}
        ORDER BY
            pos DESC
            LIMIT 1;
    </select>

    <select id="list" resultMap="BaseResultMapDTO">
        SELECT
        case_review.id, case_review.num, case_review.name,
        case_review.module_id, case_review.project_id, case_review.status,
        case_review.review_pass_rule, case_review.pos, case_review.start_time, case_review.end_time,
        case_review.case_count, case_review.pass_rate, case_review.tags,
        case_review.description, case_review.create_time, case_review.create_user,
        case_review.update_time, case_review.update_user,
        case_review_module.name as moduleName
        FROM
        case_review left join case_review_module on  case_review.module_id = case_review_module.id
        where case_review.project_id = #{request.projectId}
        <include refid="queryWhereCondition"/>
    </select>

    <select id="getIds" resultType="java.lang.String">
        SELECT
        id
        FROM
        case_review
        where case_review.project_id = #{request.projectId}
        <include refid="queryWhereConditionByBaseQueryRequest"/>
    </select>

    <sql id="queryWhereConditionByBaseQueryRequest">
        <if test="request.moduleIds != null and request.moduleIds.size() > 0">
            and case_review.module_id in
            <foreach collection="request.moduleIds" item="moduleId" separator="," open="(" close=")">
                #{moduleId}
            </foreach>
        </if>
        <if test="request.condition.keyword != null">
            and (
            case_review.name like concat('%', #{request.keyword},'%')
            or case_review.num like concat('%', #{request.keyword},'%')
           )
        </if>
        <if test="request.createByMe != null">
            and case_review.create_user = #{request.createByMe}
        </if>
        <if test="request.reviewByMe != null">
            and case_review.id  in
            (
            select case_review_user.review_id from case_review_user where case_review_user.user_id = #{request.reviewByMe}
            )
        </if>
        <include refid="filters">
            <property name="filter" value="request.condition.filter"/>
        </include>
        <choose>
            <when test='request.condition.searchMode == "AND"'>
                AND <include refid="baseQueryCombine"/>
            </when>
            <when test='request.condition.searchMode == "OR"'>
                and (
                <include refid="baseQueryCombine"/>
                )
            </when>
        </choose>
    </sql>

    <sql id="baseQueryCombine">
        <if test="request.condition.combine != null">
            <include refid="combine">
                <property name="condition" value="request.condition.combine"/>
                <property name="name" value="request.condition.name"/>
                <property name="ObjectTags" value="request.condition.combine.tags"/>
                <property name="ObjectReviewers" value="request.condition.combine.reviewers"/>
                <property name="ObjectModuleIds" value="request.condition.combine.moduleIds"/>
            </include>
        </if>
        1=1
    </sql>


    <sql id="queryWhereCondition">
        <if test="request.moduleIds != null and request.moduleIds.size() > 0">
            and case_review.module_id in
            <foreach collection="request.moduleIds" item="moduleId" separator="," open="(" close=")">
                #{moduleId}
            </foreach>
        </if>
        <if test="request.keyword != null">
            and (
            case_review.name like concat('%', #{request.keyword},'%')
            or case_review.num like concat('%', #{request.keyword},'%')
            )
        </if>
        <if test="request.createByMe != null">
            and case_review.create_user = #{request.createByMe}
        </if>
        <if test="request.reviewByMe != null">
            and case_review.id  in
            (
            select case_review_user.review_id from case_review_user where case_review_user.user_id = #{request.reviewByMe}
            )
        </if>
        <include refid="filters">
            <property name="filter" value="request.filter"/>
        </include>
        <choose>
            <when test='request.searchMode == "AND"'>
                AND <include refid="queryCombine"/>
            </when>
            <when test='request.searchMode == "OR"'>
                and (
                <include refid="queryCombine"/>
                )
            </when>
        </choose>
    </sql>

    <sql id="queryCombine">
        <include refid="combine">
            <property name="condition" value="request.combine"/>
            <property name="name" value="request.name"/>
            <property name="ObjectTags" value="request.combine.tags"/>
            <property name="ObjectReviewers" value="request.combine.reviewers"/>
            <property name="ObjectModuleIds" value="request.combine.moduleIds"/>
        </include>
        1=1
    </sql>

    <sql id="queryType">
        <choose>
            <when test='${searchMode} == "AND"'>
                AND
            </when>
            <when test='${searchMode} == "OR"'>
                OR
            </when>
        </choose>
    </sql>

    <sql id="filters">
        <if test="${filter} != null and ${filter}.size() > 0">
            <foreach collection="${filter}.entrySet()" index="key" item="values">
                <if test="values != null and values.size() > 0">
                    <choose>
                        <when test="key=='status'">
                            and case_review.status in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                        <when test="key=='review_pass_rule'">
                            and case_review.review_pass_rule in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                        <when test="key=='create_user'">
                            and case_review.create_user in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                        <when test="key=='case_reviewer'">
                            and case_review.id in (
                            select case_review_user.review_id from case_review_user where case_review_user.user_id in
                            in
                            <foreach collection="values" item="value" separator="," open="(" close=")">
                                #{value}
                            </foreach>
                            )
                        </when>
                    </choose>
                </if>
            </foreach>
        </if>
    </sql>

    <sql id="combine">
        <if test="request.combine != null">
            <if test='${condition}.name != null'>
                case_review.name
                <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                    <property name="object" value="${condition}.name"/>
                </include>
                <include refid="queryType">
                    <property name="searchMode" value="request.searchMode"/>
                </include>
            </if>

            <if test='${condition}.status != null'>
                case_review.status
                <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                    <property name="object" value="${condition}.status"/>
                </include>
                <include refid="queryType">
                    <property name="searchMode" value="request.searchMode"/>
                </include>
            </if>

            <if test='${condition}.description != null'>
                case_review.description
                <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                    <property name="object" value="${condition}.status"/>
                </include>
                <include refid="queryType">
                    <property name="searchMode" value="request.searchMode"/>
                </include>
            </if>

            <if test='${condition}.reviewPassRule != null'>
                case_review.review_pass_rule
                <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                    <property name="object" value="${condition}.reviewPassRule"/>
                </include>
                <include refid="queryType">
                    <property name="searchMode" value="request.searchMode"/>
                </include>
            </if>

            <if test='${condition}.createUser != null'>
                case_review.create_user
                <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                    <property name="object" value="${condition}.createUser"/>
                </include>
                <include refid="queryType">
                    <property name="searchMode" value="request.searchMode"/>
                </include>
            </if>

            <if test='${condition}.id != null'>
                case_review.num
                <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                    <property name="object" value="${condition}.id"/>
                </include>
                <include refid="queryType">
                    <property name="searchMode" value="request.searchMode"/>
                </include>
            </if>

            <if test="${condition}.updateTime != null">
                case_review.update_time
                <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                    <property name="object" value="${condition}.updateTime"/>
                </include>
                <include refid="queryType">
                    <property name="searchMode" value="request.searchMode"/>
                </include>
            </if>

            <if test="${condition}.createTime != null">
                case_review.create_time
                <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                    <property name="object" value="${condition}.createTime"/>
                </include>
                <include refid="queryType">
                    <property name="searchMode" value="request.searchMode"/>
                </include>
            </if>

            <if test="${condition}.startTime != null">
                case_review.start_time
                <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                    <property name="object" value="${condition}.startTime"/>
                </include>
                <include refid="queryType">
                    <property name="searchMode" value="request.searchMode"/>
                </include>
            </if>

            <if test="${condition}.endTime != null">
                case_review.end_time
                <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                    <property name="object" value="${condition}.endTime"/>
                </include>
                <include refid="queryType">
                    <property name="searchMode" value="request.searchMode"/>
                </include>
            </if>

            <if test='${condition}.tags != null and ${ObjectTags}.operator == "not like"'>
                (api_definition.tags is null or api_definition.tags
                <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                    <property name="object" value="${condition}.tags"/>
                </include>
                )
                <include refid="queryType">
                    <property name="searchMode" value="request.searchMode"/>
                </include>
            </if>

            <if test='${condition}.tags != null and ${ObjectTags}.operator == "like"'>
                api_definition.tags
                <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                    <property name="object" value="${condition}.tags"/>
                </include>
                <include refid="queryType">
                    <property name="searchMode" value="request.searchMode"/>
                </include>
            </if>
            <if test="${condition}.caseCount != null">
                case_review.case_count
                <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                    <property name="object" value="${condition}.caseCount"/>
                </include>
                <include refid="queryType">
                    <property name="searchMode" value="request.searchMode"/>
                </include>
            </if>
            <if test="${condition}.passRate != null">
                case_review.pass_rate
                <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                    <property name="object" value="${condition}.passRate"/>
                </include>
                <include refid="queryType">
                    <property name="searchMode" value="request.searchMode"/>
                </include>
            </if>
            <if test='${condition}.reviewers != null and ${condition}.reviewers.size() > 0 and ${ObjectReviewers}.operator == "in"'>
                case_review.id
                <include refid="condition">
                    <property name="object" value="${condition}.reviewers"/>
                </include>
                <include refid="queryType">
                    <property name="searchMode" value="request.searchMode"/>
                </include>
            </if>
            <if test='${condition}.reviewers != null and ${condition}.reviewers.size() > 0 and ${ObjectReviewers}.operator == "not in"'>
                case_review.id
                <include refid="condition">
                    <property name="object" value="${condition}.reviewers"/>
                </include>
                <include refid="queryType">
                    <property name="searchMode" value="request.searchMode"/>
                </include>
            </if>
            <if test='${condition}.moduleIds != null and ${condition}.moduleIds.size() > 0 and ${ObjectModuleIds}.operator == "in"'>
                case_review.module_id
                <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                    <property name="object" value="${condition}.moduleIds"/>
                </include>

                <include refid="queryType">
                    <property name="searchMode" value="request.searchMode"/>
                </include>
            </if>
            <if test='${condition}.moduleIds != null and ${condition}.moduleIds.size() > 0 and ${ObjectModuleIds}.operator == "not in"'>
                case_review.module_id
                <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                    <property name="object" value="${condition}.moduleIds"/>
                </include>
                <include refid="queryType">
                    <property name="searchMode" value="request.searchMode"/>
                </include>
            </if>
        </if>
    </sql>

    <sql id="condition">
        <choose>

            <when test='${object}.operator == "in"'>
                in ( select review_id from case_review_user where case_review_user.user_id in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
                )
            </when>
            <when test='${object}.operator == "not in"'>
                not in
                ( select review_id from case_review_user where case_review_user.user_id in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
                )
            </when>

        </choose>
    </sql>

    <select id="getPrePos" resultType="java.lang.Long">
        select `pos` from case_review where project_id = #{projectId}
        <if test="basePos != null">
            and `pos` &lt; #{basePos}
        </if>
        order by `pos` desc limit 1;
    </select>


    <select id="getLastPos" resultType="java.lang.Long">
        select `pos` from case_review where project_id = #{projectId}
        <if test="basePos != null">
            and `pos` &gt; #{basePos}
        </if>
        order by `pos` desc limit 1;
    </select>

    <update id="batchMoveModule">
        update case_review
        set module_id = #{request.moveModuleId},
        update_user = #{userId},
        update_time = UNIX_TIMESTAMP()*1000
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="countModuleIdByKeywordAndFileType"  resultType="io.metersphere.project.dto.ModuleCountDTO">
        SELECT module_id AS moduleId, count(id) AS dataCount
        FROM case_review
        WHERE project_id = #{request.projectId}
        <include refid="queryWhereCondition"/>
        GROUP BY moduleId
    </select>

    <select id="caseCount"
            resultType="java.lang.Long">
        SELECT count(id)
        FROM case_review
        WHERE  project_id = #{request.projectId}
        <include refid="queryWhereCondition"/>
    </select>

    <select id="getReviewPassRule" resultType="java.lang.String">
        select review_pass_rule from case_review where id = #{id}
    </select>
</mapper>