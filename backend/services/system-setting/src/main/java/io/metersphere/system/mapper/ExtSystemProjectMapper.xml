<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.system.mapper.ExtSystemProjectMapper">


    <select id="getProjectMemberList" resultType="io.metersphere.system.dto.UserExtend">
        SELECT temp.* , MAX( if (temp.role_id = 'project_admin', true, false)) as adminFlag
        FROM (
                 SELECT `user`.* , user_role_relation.role_id
                 FROM user_role_relation
                        LEFT JOIN `user` ON user_role_relation.user_id = `user`.id
        <where>
            `user`.deleted = 0
            <if test="request.projectId != null">
               and user_role_relation.source_id = #{request.projectId}
            </if>
            <if test="request.keyword != null">
               and (user.name like CONCAT('%', #{request.keyword},'%')
                or user.email like CONCAT('%', #{request.keyword},'%')
                or user.phone like CONCAT('%', #{request.keyword},'%'))
            </if>
        </where>
                 ORDER BY `user`.update_time DESC) temp GROUP BY temp.id ORDER BY adminFlag DESC
    </select>
    <select id="getProjectList" resultType="io.metersphere.sdk.dto.ProjectDTO">
        select p.id,
               p.num,
               p.organization_id,
               p.name,
               p.description,
               p.create_time,
               p.update_time,
               p.create_user,
               p.delete_time,
               p.deleted,
               p.delete_user,
               p.update_user,
               p.enable,
               count(distinct temp.id) as memberCount,
               o.name as organizationName,
               p.module_setting
        FROM project p
        LEFT JOIN (SELECT ur.source_id, u.id from user_role_relation ur  left join user u on u.id = ur.user_id where u.deleted = 0) temp on p.id = temp.source_id
        INNER JOIN organization o on p.organization_id = o.id
        <include refid="queryWhereCondition"/>
            group by p.id
    </select>
    <select id="getProjectAdminList" resultType="io.metersphere.system.dto.UserExtend">
        SELECT `user`.*
        FROM user_role_relation
        LEFT JOIN `user` ON user_role_relation.user_id = `user`.id
        <where>
            `user`.deleted = 0
            and user_role_relation.source_id = #{projectId}
            and user_role_relation.role_id = 'project_admin'
        </where>
    </select>


    <select id="selectProjectOptions" resultType="io.metersphere.system.dto.OrganizationProjectOptionsDTO">
        select id, name
        from project
        <where>
            <if test="organizationId != null and organizationId != ''">
                and organization_id = #{organizationId}
            </if>
        </where>
        order by create_time desc
    </select>

    <sql id="queryWhereCondition">
        <where>
            <if test="request.organizationId != null">
               p.organization_id = #{request.organizationId}
            </if>
            <if test="request.keyword != null">
                and (
                p.name like concat('%', #{request.keyword},'%')
                or p.num like concat('%', #{request.keyword},'%')
                )
            </if>
            <include refid="filter"/>
            <include refid="combine">
                <property name="condition" value="request.combine"/>
            </include>
        </where>
    </sql>

    <sql id="filter">
        <if test="request.filter != null and request.filter.size() > 0">
            <foreach collection="request.filter.entrySet()" index="key" item="values">
                <if test="values != null and values.size() > 0">
                    <choose>
                        <when test="key=='createUser'">
                            and p.create_user in
                            <include refid="io.metersphere.sdk.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                    </choose>
                </if>
            </foreach>
        </if>
    </sql>

    <sql id="combine">
        <if test="request.combine != null">
            <if test='${condition}.createUser != null'>
                and p.create_user
                <include refid="io.metersphere.sdk.mapper.BaseMapper.condition">
                    <property name="object" value="${condition}.createUser"/>
                </include>
            </if>
        </if>
    </sql>

    <select id="getUserAdminList" resultType="io.metersphere.system.dto.UserExtend">
        select distinct u.*
        from `user` u left join user_role_relation urr on urr.user_id = u.id
        where u.deleted = 0 and urr.source_id = #{organizationId}

    </select>

    <select id="getUserMemberList" resultType="io.metersphere.system.dto.UserExtend">
        select distinct u.*, count(temp.id) > 0 as memberFlag from
        user u left join (select * from user_role_relation urr where urr.source_id = #{projectId}) temp on temp.user_id = u.id
        <where>
            u.deleted = 0
            <if test="userIds != null and userIds.size > 0 ">
                and u.id in
                <foreach collection="userIds" item="userId" open="(" separator="," close=")">
                    #{userId}
                </foreach>
            </if>
        </where>

        group by u.id


    </select>



</mapper>