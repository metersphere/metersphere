<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.system.mapper.ExtExecTaskItemMapper">

    <select id="selectList" resultType="io.metersphere.system.dto.taskhub.TaskHubItemDTO">
        SELECT exec_task_item.*, exec_task.num, exec_task.task_name, exec_task.trigger_mode
        FROM exec_task_item
        inner join exec_task on exec_task_item.task_id = exec_task.id
        <include refid="queryWhereCondition"/>
    </select>
    <select id="selectExecInfoByResourceIds" resultType="io.metersphere.system.domain.ExecTaskItem">
        SELECT id, resource_id
        FROM exec_task_item
        WHERE resource_id IN
        <foreach collection="resourceIds" item="resourceId" open="(" separator="," close=")">
            #{resourceId}
        </foreach>
    </select>

    <select id="getTaskItemIdsByTime" resultType="java.lang.String">
        select id from exec_task_item where project_id = #{projectId} and start_time &lt;= #{timeMills}
    </select>

    <select id="selectExecInfoByTaskIdAndResourceIds" resultType="io.metersphere.system.domain.ExecTaskItem">
        SELECT id, resource_id
        FROM exec_task_item
        WHERE task_id = #{taskId} and resource_id IN
        <foreach collection="resourceIds" item="resourceId" open="(" separator="," close=")">
            #{resourceId}
        </foreach>
    </select>

    <select id="selectItemByTaskIds" resultType="io.metersphere.system.domain.ExecTaskItem">
        select  id, task_id, `status`, result
        from exec_task_item
        where task_id in
        <foreach collection="taskIds" item="taskId" open="(" separator="," close=")">
            #{taskId}
        </foreach>
        <if test="orgId != null and orgId != ''">
            and exec_task_item.organization_id = #{orgId}
        </if>
        <if test="projectId != null and projectId != ''">
            and exec_task_item.project_id = #{projectId}
        </if>
    </select>

    <select id="selectPoolNodeByIds" resultType="io.metersphere.system.domain.ExecTaskItem">
        select id, resource_pool_node from exec_task_item where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <sql id="queryWhereCondition">
        <where>
            <if test="orgId != null and orgId != ''">
                and exec_task_item.organization_id = #{orgId}
            </if>
            <if test="request.keyword != null and request.keyword != ''">
                and (
                exec_task.num like concat('%', #{request.keyword},'%')
                or exec_task_item.resource_name like concat('%', #{request.keyword},'%')
                )
            </if>
            <if test="projectId != null and projectId != ''">
                and exec_task_item.project_id = #{projectId}
            </if>
            <if test="request.resourcePoolIds != null and request.resourcePoolIds.size() > 0">
                and exec_task_item.resource_pool_id in
                <foreach collection="request.resourcePoolIds" item="resourcePoolId" separator="," open="(" close=")">
                    #{resourcePoolId}
                </foreach>
            </if>
            <if test="request.resourcePoolNodes != null and request.resourcePoolNodes.size() > 0">
                and exec_task_item.resource_pool_node in
                <foreach collection="request.resourcePoolNodes" item="resourcePoolNode" separator="," open="(" close=")">
                    #{resourcePoolNode}
                </foreach>
            </if>
            <include refid="filters">
                <property name="filter" value="request.filter"/>
            </include>
        </where>
    </sql>

    <sql id="filters">
        <if test="${filter} != null and ${filter}.size() > 0">
            <foreach collection="${filter}.entrySet()" index="key" item="values">
                <if test="values != null and values.size() > 0">
                    <choose>
                        <!-- 状态 -->
                        <when test="key=='status'">
                            and exec_task_item.status in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                        <!-- 执行结果 -->
                        <when test="key=='result'">
                            and exec_task_item.result in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                    </choose>
                </if>
            </foreach>
        </if>
    </sql>


    <select id="getResourcePoolsByTaskIds" resultType="io.metersphere.system.domain.ExecTaskItem">
        SELECT
        id,
        task_id,
        resource_pool_node,
        resource_pool_id
        FROM
        exec_task_item
        <if test="taskIds != null and taskIds.size() > 0">
            WHERE task_id IN
            <foreach collection="taskIds" item="taskId" open="(" separator="," close=")">
                #{taskId}
            </foreach>
        </if>
    </select>


    <update id="batchUpdateTaskItemStatus">
        UPDATE exec_task_item
        SET `status` = #{status},
        executor = #{userId}
        WHERE  task_id in
        <foreach collection="taskIds" item="taskId" open="(" separator="," close=")">
            #{taskId}
        </foreach>
        <if test="projectId != null and projectId != ''">
            and project_id = #{projectId}
        </if>
        <if test="organizationId != null and organizationId != ''">
            and organization_id = #{organizationId}
        </if>
        and `status` = 'RUNNING'
    </update>

    <select id="hasErrorItem" resultType="java.lang.Boolean">
        SELECT COUNT(1)
        FROM exec_task_item
        WHERE task_id = #{taskId} AND `result` = 'ERROR'
            limit 1
    </select>

    <select id="hasFakeErrorItem" resultType="java.lang.Boolean">
        SELECT COUNT(1)
        FROM exec_task_item
        WHERE task_id = #{taskId} AND `result` = 'FAKE_ERROR'
            limit 1
    </select>

    <select id="getItemIdByTaskIds" resultType="java.lang.String">
        select id from exec_task_item where task_id in
        <foreach collection="taskIds" item="taskId" open="(" separator="," close=")">
            #{taskId}
        </foreach>
    </select>
</mapper>