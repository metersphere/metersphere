<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.system.mapper.ExtOrganizationMapper">
    <select id="list" resultType="io.metersphere.system.dto.OrganizationDTO">
        select o.id, o.num, o.name, o.description, o.create_time,
        o.update_time, o.create_user, o.deleted, o.delete_user, o.delete_time, o.enable
        from organization o
        <include refid="queryWhereCondition"/>
    </select>

    <select id="getCountByIds" resultType="io.metersphere.system.dto.OrganizationCountDTO">
        select o.id,
        coalesce(membercount, 0) as memberCount, coalesce(projectcount, 0) as projectCount
        from organization o
        left join (
        select source_id, count(distinct u.id) as membercount from user_role_relation ur
        join user u on ur.user_id = u.id and u.deleted = 0
        where source_id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        group by source_id
        ) as members_group on o.id = members_group.source_id
        left join (
        select organization_id, count(project.id) as projectcount from project
        where organization_id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        group by organization_id
        ) as projects_group on o.id = projects_group.organization_id
    </select>

    <select id="listAll" resultType="io.metersphere.system.dto.OrganizationDTO">
        select *
        from organization
    </select>

    <update id="delete" parameterType="io.metersphere.system.dto.request.OrganizationDeleteRequest">
        update organization
        set deleted     = true,
            delete_time = #{request.deleteTime},
            delete_user = #{request.deleteUserId}
        where id = #{request.organizationId}
    </update>

    <update id="recover" parameterType="java.lang.String">
        update organization
        set deleted = false
        where id = #{id}
    </update>

    <update id="updateEnable">
        update organization
        set `enable` = #{enable}
        where id = #{id}
    </update>

    <select id="listMember" resultType="io.metersphere.system.dto.user.UserExtendDTO">
        select temp.*, max(if(temp.role_id = 'org_admin', true, false)) as adminFlag, min(temp.memberTime) as groupTime
        from (
        select u.*, urr.role_id, urr.create_time as memberTime
        from user_role_relation urr
        join `user` u on urr.user_id = u.id
        <where>
            u.deleted = 0
            <if test="request.organizationId != null and request.organizationId != ''">
                and urr.source_id = #{request.organizationId}
            </if>
            <if test="request.keyword != null and request.keyword != ''">
                and u.name like concat('%', #{request.keyword},'%')
            </if>
        </where>
        order by urr.create_time desc
        ) temp
        group by temp.id
        order by adminFlag desc, groupTime desc
    </select>

    <select id="listMemberByOrg" resultType="io.metersphere.system.dto.OrgUserExtend">
        select temp.*
        from (
        select u.*, urr.role_id
        from user_role_relation urr
        join `user` u on urr.user_id = u.id and u.deleted = false
        <where>
            <if test="request.organizationId != null and request.organizationId != ''">
                urr.source_id = #{request.organizationId}
            </if>
            <if test="request.keyword != null and request.keyword != ''">
                and (u.name like CONCAT('%', #{request.keyword},'%')
                or u.email like CONCAT('%', #{request.keyword},'%')
                or u.phone like CONCAT('%', #{request.keyword},'%'))
            </if>
        </where>
        order by u.update_time desc
        ) temp
        group by temp.id
    </select>

    <select id="selectListMemberByOrg" resultType="io.metersphere.system.dto.OptionDisabledDTO">
        select id, name
        from user
        where deleted = 0
        <if test="keyword != null and keyword != ''">
            and (u.name like CONCAT('%', #{request.keyword},'%')
            or u.email like CONCAT('%', #{request.keyword},'%')
            or u.phone like CONCAT('%', #{request.keyword},'%'))
        </if>
        order by update_time desc
        limit 100
    </select>

    <select id="getOrgAdminList" resultType="io.metersphere.system.domain.User">
        select u.*
        from user_role_relation urr
                 join `user` u on urr.user_id = u.id
        where urr.role_id = 'org_admin'
          and urr.source_id = #{orgId}
          and u.deleted = false
    </select>

    <select id="selectOrganizationOptions" resultType="io.metersphere.system.dto.OrganizationProjectOptionsDTO">
        select id, name
        from organization
        order by create_time desc
    </select>

    <select id="getOptionsByIds" resultType="io.metersphere.system.dto.sdk.OptionDTO">
        select id, name from organization where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="getRelatedOrganizationIds" resultType="java.lang.String">
        select distinct o.id
        from user_role_relation urr join organization o on urr.organization_id = o.id
        where user_id = #{userId}
    </select>

    <sql id="queryWhereCondition">
        <where>
            <if test="request.keyword != null">
                and (
                o.name like concat('%', #{request.keyword},'%')
                or o.id like concat('%', #{request.keyword},'%')
                )
            </if>
            <include refid="filter"/>
            <include refid="combine">
                <property name="condition" value="request.combine"/>
            </include>
        </where>
    </sql>

    <sql id="filter">
        <if test="request.filter != null and request.filter.size() > 0">
            <foreach collection="request.filter.entrySet()" index="key" item="values">
                <if test="values != null and values.size() > 0">
                    <choose>
                        <when test="key=='createUser'">
                            and o.create_user in
                            <include refid="io.metersphere.system.mapper.BaseMapper.filterInWrapper"/>
                        </when>
                    </choose>
                </if>
            </foreach>
        </if>
    </sql>

    <sql id="combine">
        <if test="request.combine != null">
            <if test='${condition}.createUser != null'>
                and o.create_user
                <include refid="io.metersphere.system.mapper.BaseMapper.condition">
                    <property name="object" value="${condition}.createUser"/>
                </include>
            </if>
        </if>
    </sql>

    <select id="getOrgListByProjectIds" resultType="io.metersphere.system.dto.sdk.OptionDTO">
        select p.id, o.name
        from project p
        inner join organization o on p.organization_id = o.id
        where p.id in
        <foreach collection="projectIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
</mapper>