<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.base.mapper.ApiTestCaseMapper">
  <resultMap id="BaseResultMap" type="io.metersphere.base.domain.ApiTestCase">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="project_id" jdbcType="VARCHAR" property="projectId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="priority" jdbcType="VARCHAR" property="priority" />
    <result column="api_definition_id" jdbcType="VARCHAR" property="apiDefinitionId" />
    <result column="create_user_id" jdbcType="VARCHAR" property="createUserId" />
    <result column="update_user_id" jdbcType="VARCHAR" property="updateUserId" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="tags" jdbcType="VARCHAR" property="tags" />
    <result column="last_result_id" jdbcType="VARCHAR" property="lastResultId" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="original_status" jdbcType="VARCHAR" property="originalStatus" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="delete_user_id" jdbcType="VARCHAR" property="deleteUserId" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="follow_people" jdbcType="VARCHAR" property="followPeople" />
    <result column="order" jdbcType="BIGINT" property="order" />
    <result column="case_status" jdbcType="VARCHAR" property="caseStatus" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="io.metersphere.base.domain.ApiTestCaseWithBLOBs">
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
    <result column="request" jdbcType="LONGVARCHAR" property="request" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, project_id, `name`, priority, api_definition_id, create_user_id, update_user_id, 
    create_time, update_time, num, tags, last_result_id, `status`, original_status, delete_time, 
    delete_user_id, version, follow_people, `order`, case_status
  </sql>
  <sql id="Blob_Column_List">
    description, request
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="io.metersphere.base.domain.ApiTestCaseExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from api_test_case
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="io.metersphere.base.domain.ApiTestCaseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from api_test_case
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from api_test_case
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from api_test_case
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="io.metersphere.base.domain.ApiTestCaseExample">
    delete from api_test_case
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.metersphere.base.domain.ApiTestCaseWithBLOBs">
    insert into api_test_case (id, project_id, `name`, 
      priority, api_definition_id, create_user_id, 
      update_user_id, create_time, update_time, 
      num, tags, last_result_id, 
      `status`, original_status, delete_time, 
      delete_user_id, version, follow_people, 
      `order`, case_status, description, 
      request)
    values (#{id,jdbcType=VARCHAR}, #{projectId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{priority,jdbcType=VARCHAR}, #{apiDefinitionId,jdbcType=VARCHAR}, #{createUserId,jdbcType=VARCHAR}, 
      #{updateUserId,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, 
      #{num,jdbcType=INTEGER}, #{tags,jdbcType=VARCHAR}, #{lastResultId,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{originalStatus,jdbcType=VARCHAR}, #{deleteTime,jdbcType=BIGINT}, 
      #{deleteUserId,jdbcType=VARCHAR}, #{version,jdbcType=INTEGER}, #{followPeople,jdbcType=VARCHAR}, 
      #{order,jdbcType=BIGINT}, #{caseStatus,jdbcType=VARCHAR}, #{description,jdbcType=LONGVARCHAR}, 
      #{request,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="io.metersphere.base.domain.ApiTestCaseWithBLOBs">
    insert into api_test_case
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="priority != null">
        priority,
      </if>
      <if test="apiDefinitionId != null">
        api_definition_id,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="tags != null">
        tags,
      </if>
      <if test="lastResultId != null">
        last_result_id,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="originalStatus != null">
        original_status,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="deleteUserId != null">
        delete_user_id,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="followPeople != null">
        follow_people,
      </if>
      <if test="order != null">
        `order`,
      </if>
      <if test="caseStatus != null">
        case_status,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="request != null">
        request,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="priority != null">
        #{priority,jdbcType=VARCHAR},
      </if>
      <if test="apiDefinitionId != null">
        #{apiDefinitionId,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="tags != null">
        #{tags,jdbcType=VARCHAR},
      </if>
      <if test="lastResultId != null">
        #{lastResultId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="originalStatus != null">
        #{originalStatus,jdbcType=VARCHAR},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="deleteUserId != null">
        #{deleteUserId,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="followPeople != null">
        #{followPeople,jdbcType=VARCHAR},
      </if>
      <if test="order != null">
        #{order,jdbcType=BIGINT},
      </if>
      <if test="caseStatus != null">
        #{caseStatus,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="request != null">
        #{request,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.metersphere.base.domain.ApiTestCaseExample" resultType="java.lang.Long">
    select count(*) from api_test_case
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update api_test_case
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.priority != null">
        priority = #{record.priority,jdbcType=VARCHAR},
      </if>
      <if test="record.apiDefinitionId != null">
        api_definition_id = #{record.apiDefinitionId,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUserId != null">
        update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.tags != null">
        tags = #{record.tags,jdbcType=VARCHAR},
      </if>
      <if test="record.lastResultId != null">
        last_result_id = #{record.lastResultId,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.originalStatus != null">
        original_status = #{record.originalStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteUserId != null">
        delete_user_id = #{record.deleteUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.followPeople != null">
        follow_people = #{record.followPeople,jdbcType=VARCHAR},
      </if>
      <if test="record.order != null">
        `order` = #{record.order,jdbcType=BIGINT},
      </if>
      <if test="record.caseStatus != null">
        case_status = #{record.caseStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.request != null">
        request = #{record.request,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update api_test_case
    set id = #{record.id,jdbcType=VARCHAR},
      project_id = #{record.projectId,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      priority = #{record.priority,jdbcType=VARCHAR},
      api_definition_id = #{record.apiDefinitionId,jdbcType=VARCHAR},
      create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      num = #{record.num,jdbcType=INTEGER},
      tags = #{record.tags,jdbcType=VARCHAR},
      last_result_id = #{record.lastResultId,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=VARCHAR},
      original_status = #{record.originalStatus,jdbcType=VARCHAR},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      delete_user_id = #{record.deleteUserId,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=INTEGER},
      follow_people = #{record.followPeople,jdbcType=VARCHAR},
      `order` = #{record.order,jdbcType=BIGINT},
      case_status = #{record.caseStatus,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=LONGVARCHAR},
      request = #{record.request,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update api_test_case
    set id = #{record.id,jdbcType=VARCHAR},
      project_id = #{record.projectId,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      priority = #{record.priority,jdbcType=VARCHAR},
      api_definition_id = #{record.apiDefinitionId,jdbcType=VARCHAR},
      create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      num = #{record.num,jdbcType=INTEGER},
      tags = #{record.tags,jdbcType=VARCHAR},
      last_result_id = #{record.lastResultId,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=VARCHAR},
      original_status = #{record.originalStatus,jdbcType=VARCHAR},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      delete_user_id = #{record.deleteUserId,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=INTEGER},
      follow_people = #{record.followPeople,jdbcType=VARCHAR},
      `order` = #{record.order,jdbcType=BIGINT},
      case_status = #{record.caseStatus,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.metersphere.base.domain.ApiTestCaseWithBLOBs">
    update api_test_case
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="priority != null">
        priority = #{priority,jdbcType=VARCHAR},
      </if>
      <if test="apiDefinitionId != null">
        api_definition_id = #{apiDefinitionId,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="tags != null">
        tags = #{tags,jdbcType=VARCHAR},
      </if>
      <if test="lastResultId != null">
        last_result_id = #{lastResultId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="originalStatus != null">
        original_status = #{originalStatus,jdbcType=VARCHAR},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="deleteUserId != null">
        delete_user_id = #{deleteUserId,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="followPeople != null">
        follow_people = #{followPeople,jdbcType=VARCHAR},
      </if>
      <if test="order != null">
        `order` = #{order,jdbcType=BIGINT},
      </if>
      <if test="caseStatus != null">
        case_status = #{caseStatus,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="request != null">
        request = #{request,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="io.metersphere.base.domain.ApiTestCaseWithBLOBs">
    update api_test_case
    set project_id = #{projectId,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      priority = #{priority,jdbcType=VARCHAR},
      api_definition_id = #{apiDefinitionId,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      update_user_id = #{updateUserId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      num = #{num,jdbcType=INTEGER},
      tags = #{tags,jdbcType=VARCHAR},
      last_result_id = #{lastResultId,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=VARCHAR},
      original_status = #{originalStatus,jdbcType=VARCHAR},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      delete_user_id = #{deleteUserId,jdbcType=VARCHAR},
      version = #{version,jdbcType=INTEGER},
      follow_people = #{followPeople,jdbcType=VARCHAR},
      `order` = #{order,jdbcType=BIGINT},
      case_status = #{caseStatus,jdbcType=VARCHAR},
      description = #{description,jdbcType=LONGVARCHAR},
      request = #{request,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.metersphere.base.domain.ApiTestCase">
    update api_test_case
    set project_id = #{projectId,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      priority = #{priority,jdbcType=VARCHAR},
      api_definition_id = #{apiDefinitionId,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      update_user_id = #{updateUserId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      num = #{num,jdbcType=INTEGER},
      tags = #{tags,jdbcType=VARCHAR},
      last_result_id = #{lastResultId,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=VARCHAR},
      original_status = #{originalStatus,jdbcType=VARCHAR},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      delete_user_id = #{deleteUserId,jdbcType=VARCHAR},
      version = #{version,jdbcType=INTEGER},
      follow_people = #{followPeople,jdbcType=VARCHAR},
      `order` = #{order,jdbcType=BIGINT},
      case_status = #{caseStatus,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>