<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.base.mapper.TestCaseTestMapper">
  <resultMap id="BaseResultMap" type="io.metersphere.base.domain.TestCaseTest">
    <result column="test_case_id" jdbcType="VARCHAR" property="testCaseId" />
    <result column="test_id" jdbcType="VARCHAR" property="testId" />
    <result column="test_type" jdbcType="VARCHAR" property="testType" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    test_case_id, test_id, test_type, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="io.metersphere.base.domain.TestCaseTestExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from test_case_test
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="io.metersphere.base.domain.TestCaseTestExample">
    delete from test_case_test
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.metersphere.base.domain.TestCaseTest">
    insert into test_case_test (test_case_id, test_id, test_type,
      create_time, update_time)
    values (#{testCaseId,jdbcType=VARCHAR}, #{testId,jdbcType=VARCHAR}, #{testType,jdbcType=VARCHAR},
      #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="io.metersphere.base.domain.TestCaseTest">
    insert into test_case_test
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="testCaseId != null">
        test_case_id,
      </if>
      <if test="testId != null">
        test_id,
      </if>
      <if test="testType != null">
        test_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="testCaseId != null">
        #{testCaseId,jdbcType=VARCHAR},
      </if>
      <if test="testId != null">
        #{testId,jdbcType=VARCHAR},
      </if>
      <if test="testType != null">
        #{testType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.metersphere.base.domain.TestCaseTestExample" resultType="java.lang.Long">
    select count(*) from test_case_test
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="relevanceApiList" resultType="io.metersphere.api.dto.definition.ApiTestCaseDTO">
    SELECT
    atc.id, atc.project_id , atc.name , atc.num , atc.priority , atc.tags
    from api_test_case atc
    left join test_case_test tct on atc.id = tct.test_id
    inner join api_definition ad on ad.id = atc.api_definition_id
    where tct.test_id is NULL and atc.status != 'Trash'
    <if test="request.protocol != null and request.protocol!=''">
      and ad.protocol = #{request.protocol}
    </if>
    <if test="request.projectId != null and request.projectId!=''">
      and ad.project_id = #{request.projectId}
    </if>
    <if test="request.name != null and request.name!=''">
      and (atc.name like CONCAT('%', #{request.name},'%')
      or atc.tags like CONCAT('%', #{request.name},'%')
      or atc.num like CONCAT('%', #{request.name},'%'))
    </if>
    <if test="request.moduleIds != null and request.moduleIds.size() > 0">
      and ad.module_id in
      <foreach collection="request.moduleIds" item="nodeId" separator="," open="(" close=")">
        #{nodeId}
      </foreach>
    </if>
    <if test="request.combine != null">
      <include refid="combine">
        <property name="condition" value="request.combine"/>
        <property name="name" value="request.name"/>
        <property name="objectKey" value="request.combine.tags"/>
      </include>
    </if>
    <if test="request.filters != null and request.filters.size() > 0">
      <foreach collection="request.filters.entrySet()" index="key" item="values">
        <if test="values != null and values.size() > 0">
          <choose>
            <when test="key == 'priority'">
              and atc.priority in
              <foreach collection="values" item="value" separator="," open="(" close=")">
                #{value}
              </foreach>
            </when>
            <when test="key=='status'">
              and atc.status in
              <foreach collection="values" item="value" separator="," open="(" close=")">
                #{value}
              </foreach>
            </when>
          </choose>
        </if>
      </foreach>
    </if>
    <include refid="io.metersphere.base.mapper.ext.ExtBaseMapper.orders"/>
  </select>
  <sql id="condition">
    <choose>
      <when test='${object}.operator == "like"'>
        like CONCAT('%', #{${object}.value},'%')
      </when>
      <when test='${object}.operator == "not like"'>
        not like CONCAT('%', #{${object}.value},'%')
      </when>
      <when test='${object}.operator == "in"'>
        in
        <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
          #{v}
        </foreach>
      </when>
      <when test='${object}.operator == "not in"'>
        not in
        <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
          #{v}
        </foreach>
      </when>
      <when test='${object}.operator == "between"'>
        between #{${object}.value[0]} and #{${object}.value[1]}
      </when>
      <when test='${object}.operator == "gt"'>
        &gt; #{${object}.value}
      </when>
      <when test='${object}.operator == "lt"'>
        &lt; #{${object}.value}
      </when>
      <when test='${object}.operator == "ge"'>
        &gt;= #{${object}.value}
      </when>
      <when test='${object}.operator == "le"'>
        &lt;= #{${object}.value}
      </when>
      <when test='${object}.operator == "current user"'>
        = '${@io.metersphere.commons.utils.SessionUtils@getUserId()}'
      </when>
      <otherwise>
        = #{${object}.value}
      </otherwise>
    </choose>
  </sql>
  <sql id="combine">
    <if test='${condition}.name != null and (${name} == null or ${name} == "")'>
      and atc.name
      <include refid="condition">
        <property name="object" value="${condition}.name"/>
      </include>
    </if>
    <if test="${condition}.updateTime != null">
      and atc.update_time
      <include refid="condition">
        <property name="object" value="${condition}.updateTime"/>
      </include>
    </if>
    <if test="${condition}.createTime != null">
      and atc.create_time
      <include refid="condition">
        <property name="object" value="${condition}.createTime"/>
      </include>
    </if>
    <if test="${condition}.priority != null">
      and atc.priority
      <include refid="condition">
        <property name="object" value="${condition}.priority"/>
      </include>
    </if>
    <if test="${condition}.status != null">
      and atc.status
      <include refid="condition">
        <property name="object" value="${condition}.status"/>
      </include>
    </if>
    <if test='${condition}.tags != null and ${objectKey}.operator == "like"'>
      and atc.tags
      <include refid="condition">
        <property name="object" value="${condition}.tags"/>
      </include>
    </if>
    <if test="${condition}.creator != null">
      and atc.create_user_id
      <include refid="condition">
        <property name="object" value="${condition}.creator"/>
      </include>
    </if>
  </sql>
  <sql id="loadCaseCombine">
    <if test='${condition}.name != null and (${name} == null or ${name} == "")'>
      and atc.name
      <include refid="condition">
        <property name="object" value="${condition}.name"/>
      </include>
    </if>
    <if test="${condition}.updateTime != null">
      and atc.update_time
      <include refid="condition">
        <property name="object" value="${condition}.updateTime"/>
      </include>
    </if>
    <if test="${condition}.createTime != null">
      and atc.create_time
      <include refid="condition">
        <property name="object" value="${condition}.createTime"/>
      </include>
    </if>
    <if test="${condition}.priority != null">
      and atc.priority
      <include refid="condition">
        <property name="object" value="${condition}.priority"/>
      </include>
    </if>
    <if test="${condition}.status != null">
      and atc.status
      <include refid="condition">
        <property name="object" value="${condition}.status"/>
      </include>
    </if>
    <if test='${condition}.tags != null and ${objectKey}.operator == "like"'>
      and atc.tags
      <include refid="condition">
        <property name="object" value="${condition}.tags"/>
      </include>
    </if>
    <if test="${condition}.creator != null">
      and atc.create_user
      <include refid="condition">
        <property name="object" value="${condition}.creator"/>
      </include>
    </if>
  </sql>
  <sql id="scenarioCombine">
    <if test='${condition}.name != null and (${name} == null or ${name} == "")'>
      and atc.name
      <include refid="condition">
        <property name="object" value="${condition}.name"/>
      </include>
    </if>
    <if test="${condition}.updateTime != null">
      and atc.update_time
      <include refid="condition">
        <property name="object" value="${condition}.updateTime"/>
      </include>
    </if>
    <if test="${condition}.createTime != null">
      and atc.create_time
      <include refid="condition">
        <property name="object" value="${condition}.createTime"/>
      </include>
    </if>
    <if test="${condition}.priority != null">
      and atc.level
      <include refid="condition">
        <property name="object" value="${condition}.priority"/>
      </include>
    </if>
    <if test="${condition}.status != null">
      and atc.status
      <include refid="condition">
        <property name="object" value="${condition}.status"/>
      </include>
    </if>
    <if test='${condition}.tags != null and ${objectKey}.operator == "like"'>
      and atc.tags
      <include refid="condition">
        <property name="object" value="${condition}.tags"/>
      </include>
    </if>
    <if test='${condition}.creator != null'>
      and atc.create_user
      <include refid="condition">
        <property name="object" value="${condition}.creator"/>
      </include>
    </if>
  </sql>
  <select id="relevanceScenarioList" resultType="io.metersphere.api.dto.automation.ApiScenarioDTO">
    SELECT
    atc.id, atc.project_id , atc.name , atc.num , atc.`level`, atc.step_total, atc.status, atc.tags
    from api_scenario atc
    left join test_case_test tct on atc.id = tct.test_id
    where tct.test_id is NULL and atc.status != 'Trash'
    <if test="request.projectId != null and request.projectId!=''">
      and atc.project_id = #{request.projectId}
    </if>
    <if test="request.name != null and request.name!=''">
      and (atc.name like CONCAT('%', #{request.name},'%')
      or atc.tags like CONCAT('%', #{request.name},'%')
      or atc.num like CONCAT('%', #{request.name},'%'))
    </if>
    <if test="request.moduleIds != null and request.moduleIds.size() > 0">
      and atc.api_scenario_module_id in
      <foreach collection="request.moduleIds" item="nodeId" separator="," open="(" close=")">
        #{nodeId}
      </foreach>
    </if>
    <if test="request.combine != null">
      <include refid="scenarioCombine">
        <property name="condition" value="request.combine"/>
        <property name="name" value="request.name"/>
        <property name="objectKey" value="request.combine.tags"/>
      </include>
    </if>
    <include refid="io.metersphere.base.mapper.ext.ExtBaseMapper.orders"/>
  </select>
  <select id="relevanceLoadList" resultType="io.metersphere.dto.LoadTestDTO">
    SELECT
    atc.id, atc.project_id , atc.name , atc.num , atc.status, atc.create_time, atc.update_time
    from load_test atc
    left join test_case_test tct on atc.id = tct.test_id
    where tct.test_id is NULL and atc.status != 'Trash'
    <if test="request.projectId != null and request.projectId!=''">
      and atc.project_id = #{request.projectId}
    </if>
    <if test="request.name != null and request.name!=''">
      and (atc.name like CONCAT('%', #{request.name},'%')
      or atc.num like CONCAT('%', #{request.name},'%'))
    </if>
    <if test="request.combine != null">
      <include refid="loadCaseCombine">
        <property name="condition" value="request.combine"/>
        <property name="name" value="request.name"/>
        <property name="objectKey" value="request.combine.tags"/>
      </include>
    </if>
    <include refid="io.metersphere.base.mapper.ext.ExtBaseMapper.orders"/>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update test_case_test
    <set>
      <if test="record.testCaseId != null">
        test_case_id = #{record.testCaseId,jdbcType=VARCHAR},
      </if>
      <if test="record.testId != null">
        test_id = #{record.testId,jdbcType=VARCHAR},
      </if>
      <if test="record.testType != null">
        test_type = #{record.testType,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update test_case_test
    set test_case_id = #{record.testCaseId,jdbcType=VARCHAR},
      test_id = #{record.testId,jdbcType=VARCHAR},
      test_type = #{record.testType,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>
