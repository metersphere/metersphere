<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.base.mapper.TestPlanReportContentMapper">
  <resultMap id="BaseResultMap" type="io.metersphere.base.domain.TestPlanReportContent">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="test_plan_report_id" jdbcType="VARCHAR" property="testPlanReportId" />
    <result column="start_time" jdbcType="BIGINT" property="startTime" />
    <result column="case_count" jdbcType="BIGINT" property="caseCount" />
    <result column="end_time" jdbcType="BIGINT" property="endTime" />
    <result column="execute_rate" jdbcType="DOUBLE" property="executeRate" />
    <result column="pass_rate" jdbcType="DOUBLE" property="passRate" />
    <result column="is_third_part_issue" jdbcType="BIT" property="isThirdPartIssue" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="io.metersphere.base.domain.TestPlanReportContentWithBLOBs">
    <result column="config" jdbcType="LONGVARCHAR" property="config" />
    <result column="summary" jdbcType="LONGVARCHAR" property="summary" />
    <result column="function_result" jdbcType="LONGVARCHAR" property="functionResult" />
    <result column="api_result" jdbcType="LONGVARCHAR" property="apiResult" />
    <result column="load_result" jdbcType="LONGVARCHAR" property="loadResult" />
    <result column="function_all_cases" jdbcType="LONGVARCHAR" property="functionAllCases" />
    <result column="function_failure_cases" jdbcType="LONGVARCHAR" property="functionFailureCases" />
    <result column="issue_list" jdbcType="LONGVARCHAR" property="issueList" />
    <result column="api_all_cases" jdbcType="LONGVARCHAR" property="apiAllCases" />
    <result column="api_failure_cases" jdbcType="LONGVARCHAR" property="apiFailureCases" />
    <result column="scenario_all_cases" jdbcType="LONGVARCHAR" property="scenarioAllCases" />
    <result column="scenario_failure_cases" jdbcType="LONGVARCHAR" property="scenarioFailureCases" />
    <result column="load_all_Cases" jdbcType="LONGVARCHAR" property="loadAllCases" />
    <result column="load_failure_cases" jdbcType="LONGVARCHAR" property="loadFailureCases" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, test_plan_report_id, start_time, case_count, end_time, execute_rate, pass_rate, 
    is_third_part_issue
  </sql>
  <sql id="Blob_Column_List">
    config, summary, function_result, api_result, load_result, function_all_cases, function_failure_cases, 
    issue_list, api_all_cases, api_failure_cases, scenario_all_cases, scenario_failure_cases, 
    load_all_Cases, load_failure_cases
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="io.metersphere.base.domain.TestPlanReportContentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from test_plan_report_content
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="io.metersphere.base.domain.TestPlanReportContentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from test_plan_report_content
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from test_plan_report_content
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from test_plan_report_content
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="io.metersphere.base.domain.TestPlanReportContentExample">
    delete from test_plan_report_content
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.metersphere.base.domain.TestPlanReportContentWithBLOBs">
    insert into test_plan_report_content (id, test_plan_report_id, start_time, 
      case_count, end_time, execute_rate, 
      pass_rate, is_third_part_issue, config, 
      summary, function_result, api_result, 
      load_result, function_all_cases, function_failure_cases, 
      issue_list, api_all_cases, api_failure_cases, 
      scenario_all_cases, scenario_failure_cases, 
      load_all_Cases, load_failure_cases)
    values (#{id,jdbcType=VARCHAR}, #{testPlanReportId,jdbcType=VARCHAR}, #{startTime,jdbcType=BIGINT}, 
      #{caseCount,jdbcType=BIGINT}, #{endTime,jdbcType=BIGINT}, #{executeRate,jdbcType=DOUBLE}, 
      #{passRate,jdbcType=DOUBLE}, #{isThirdPartIssue,jdbcType=BIT}, #{config,jdbcType=LONGVARCHAR}, 
      #{summary,jdbcType=LONGVARCHAR}, #{functionResult,jdbcType=LONGVARCHAR}, #{apiResult,jdbcType=LONGVARCHAR}, 
      #{loadResult,jdbcType=LONGVARCHAR}, #{functionAllCases,jdbcType=LONGVARCHAR}, #{functionFailureCases,jdbcType=LONGVARCHAR}, 
      #{issueList,jdbcType=LONGVARCHAR}, #{apiAllCases,jdbcType=LONGVARCHAR}, #{apiFailureCases,jdbcType=LONGVARCHAR}, 
      #{scenarioAllCases,jdbcType=LONGVARCHAR}, #{scenarioFailureCases,jdbcType=LONGVARCHAR}, 
      #{loadAllCases,jdbcType=LONGVARCHAR}, #{loadFailureCases,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="io.metersphere.base.domain.TestPlanReportContentWithBLOBs">
    insert into test_plan_report_content
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="testPlanReportId != null">
        test_plan_report_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="caseCount != null">
        case_count,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="executeRate != null">
        execute_rate,
      </if>
      <if test="passRate != null">
        pass_rate,
      </if>
      <if test="isThirdPartIssue != null">
        is_third_part_issue,
      </if>
      <if test="config != null">
        config,
      </if>
      <if test="summary != null">
        summary,
      </if>
      <if test="functionResult != null">
        function_result,
      </if>
      <if test="apiResult != null">
        api_result,
      </if>
      <if test="loadResult != null">
        load_result,
      </if>
      <if test="functionAllCases != null">
        function_all_cases,
      </if>
      <if test="functionFailureCases != null">
        function_failure_cases,
      </if>
      <if test="issueList != null">
        issue_list,
      </if>
      <if test="apiAllCases != null">
        api_all_cases,
      </if>
      <if test="apiFailureCases != null">
        api_failure_cases,
      </if>
      <if test="scenarioAllCases != null">
        scenario_all_cases,
      </if>
      <if test="scenarioFailureCases != null">
        scenario_failure_cases,
      </if>
      <if test="loadAllCases != null">
        load_all_Cases,
      </if>
      <if test="loadFailureCases != null">
        load_failure_cases,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="testPlanReportId != null">
        #{testPlanReportId,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=BIGINT},
      </if>
      <if test="caseCount != null">
        #{caseCount,jdbcType=BIGINT},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=BIGINT},
      </if>
      <if test="executeRate != null">
        #{executeRate,jdbcType=DOUBLE},
      </if>
      <if test="passRate != null">
        #{passRate,jdbcType=DOUBLE},
      </if>
      <if test="isThirdPartIssue != null">
        #{isThirdPartIssue,jdbcType=BIT},
      </if>
      <if test="config != null">
        #{config,jdbcType=LONGVARCHAR},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=LONGVARCHAR},
      </if>
      <if test="functionResult != null">
        #{functionResult,jdbcType=LONGVARCHAR},
      </if>
      <if test="apiResult != null">
        #{apiResult,jdbcType=LONGVARCHAR},
      </if>
      <if test="loadResult != null">
        #{loadResult,jdbcType=LONGVARCHAR},
      </if>
      <if test="functionAllCases != null">
        #{functionAllCases,jdbcType=LONGVARCHAR},
      </if>
      <if test="functionFailureCases != null">
        #{functionFailureCases,jdbcType=LONGVARCHAR},
      </if>
      <if test="issueList != null">
        #{issueList,jdbcType=LONGVARCHAR},
      </if>
      <if test="apiAllCases != null">
        #{apiAllCases,jdbcType=LONGVARCHAR},
      </if>
      <if test="apiFailureCases != null">
        #{apiFailureCases,jdbcType=LONGVARCHAR},
      </if>
      <if test="scenarioAllCases != null">
        #{scenarioAllCases,jdbcType=LONGVARCHAR},
      </if>
      <if test="scenarioFailureCases != null">
        #{scenarioFailureCases,jdbcType=LONGVARCHAR},
      </if>
      <if test="loadAllCases != null">
        #{loadAllCases,jdbcType=LONGVARCHAR},
      </if>
      <if test="loadFailureCases != null">
        #{loadFailureCases,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.metersphere.base.domain.TestPlanReportContentExample" resultType="java.lang.Long">
    select count(*) from test_plan_report_content
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update test_plan_report_content
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.testPlanReportId != null">
        test_plan_report_id = #{record.testPlanReportId,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=BIGINT},
      </if>
      <if test="record.caseCount != null">
        case_count = #{record.caseCount,jdbcType=BIGINT},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=BIGINT},
      </if>
      <if test="record.executeRate != null">
        execute_rate = #{record.executeRate,jdbcType=DOUBLE},
      </if>
      <if test="record.passRate != null">
        pass_rate = #{record.passRate,jdbcType=DOUBLE},
      </if>
      <if test="record.isThirdPartIssue != null">
        is_third_part_issue = #{record.isThirdPartIssue,jdbcType=BIT},
      </if>
      <if test="record.config != null">
        config = #{record.config,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.summary != null">
        summary = #{record.summary,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.functionResult != null">
        function_result = #{record.functionResult,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.apiResult != null">
        api_result = #{record.apiResult,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.loadResult != null">
        load_result = #{record.loadResult,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.functionAllCases != null">
        function_all_cases = #{record.functionAllCases,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.functionFailureCases != null">
        function_failure_cases = #{record.functionFailureCases,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.issueList != null">
        issue_list = #{record.issueList,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.apiAllCases != null">
        api_all_cases = #{record.apiAllCases,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.apiFailureCases != null">
        api_failure_cases = #{record.apiFailureCases,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.scenarioAllCases != null">
        scenario_all_cases = #{record.scenarioAllCases,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.scenarioFailureCases != null">
        scenario_failure_cases = #{record.scenarioFailureCases,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.loadAllCases != null">
        load_all_Cases = #{record.loadAllCases,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.loadFailureCases != null">
        load_failure_cases = #{record.loadFailureCases,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update test_plan_report_content
    set id = #{record.id,jdbcType=VARCHAR},
      test_plan_report_id = #{record.testPlanReportId,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=BIGINT},
      case_count = #{record.caseCount,jdbcType=BIGINT},
      end_time = #{record.endTime,jdbcType=BIGINT},
      execute_rate = #{record.executeRate,jdbcType=DOUBLE},
      pass_rate = #{record.passRate,jdbcType=DOUBLE},
      is_third_part_issue = #{record.isThirdPartIssue,jdbcType=BIT},
      config = #{record.config,jdbcType=LONGVARCHAR},
      summary = #{record.summary,jdbcType=LONGVARCHAR},
      function_result = #{record.functionResult,jdbcType=LONGVARCHAR},
      api_result = #{record.apiResult,jdbcType=LONGVARCHAR},
      load_result = #{record.loadResult,jdbcType=LONGVARCHAR},
      function_all_cases = #{record.functionAllCases,jdbcType=LONGVARCHAR},
      function_failure_cases = #{record.functionFailureCases,jdbcType=LONGVARCHAR},
      issue_list = #{record.issueList,jdbcType=LONGVARCHAR},
      api_all_cases = #{record.apiAllCases,jdbcType=LONGVARCHAR},
      api_failure_cases = #{record.apiFailureCases,jdbcType=LONGVARCHAR},
      scenario_all_cases = #{record.scenarioAllCases,jdbcType=LONGVARCHAR},
      scenario_failure_cases = #{record.scenarioFailureCases,jdbcType=LONGVARCHAR},
      load_all_Cases = #{record.loadAllCases,jdbcType=LONGVARCHAR},
      load_failure_cases = #{record.loadFailureCases,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update test_plan_report_content
    set id = #{record.id,jdbcType=VARCHAR},
      test_plan_report_id = #{record.testPlanReportId,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=BIGINT},
      case_count = #{record.caseCount,jdbcType=BIGINT},
      end_time = #{record.endTime,jdbcType=BIGINT},
      execute_rate = #{record.executeRate,jdbcType=DOUBLE},
      pass_rate = #{record.passRate,jdbcType=DOUBLE},
      is_third_part_issue = #{record.isThirdPartIssue,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.metersphere.base.domain.TestPlanReportContentWithBLOBs">
    update test_plan_report_content
    <set>
      <if test="testPlanReportId != null">
        test_plan_report_id = #{testPlanReportId,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=BIGINT},
      </if>
      <if test="caseCount != null">
        case_count = #{caseCount,jdbcType=BIGINT},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=BIGINT},
      </if>
      <if test="executeRate != null">
        execute_rate = #{executeRate,jdbcType=DOUBLE},
      </if>
      <if test="passRate != null">
        pass_rate = #{passRate,jdbcType=DOUBLE},
      </if>
      <if test="isThirdPartIssue != null">
        is_third_part_issue = #{isThirdPartIssue,jdbcType=BIT},
      </if>
      <if test="config != null">
        config = #{config,jdbcType=LONGVARCHAR},
      </if>
      <if test="summary != null">
        summary = #{summary,jdbcType=LONGVARCHAR},
      </if>
      <if test="functionResult != null">
        function_result = #{functionResult,jdbcType=LONGVARCHAR},
      </if>
      <if test="apiResult != null">
        api_result = #{apiResult,jdbcType=LONGVARCHAR},
      </if>
      <if test="loadResult != null">
        load_result = #{loadResult,jdbcType=LONGVARCHAR},
      </if>
      <if test="functionAllCases != null">
        function_all_cases = #{functionAllCases,jdbcType=LONGVARCHAR},
      </if>
      <if test="functionFailureCases != null">
        function_failure_cases = #{functionFailureCases,jdbcType=LONGVARCHAR},
      </if>
      <if test="issueList != null">
        issue_list = #{issueList,jdbcType=LONGVARCHAR},
      </if>
      <if test="apiAllCases != null">
        api_all_cases = #{apiAllCases,jdbcType=LONGVARCHAR},
      </if>
      <if test="apiFailureCases != null">
        api_failure_cases = #{apiFailureCases,jdbcType=LONGVARCHAR},
      </if>
      <if test="scenarioAllCases != null">
        scenario_all_cases = #{scenarioAllCases,jdbcType=LONGVARCHAR},
      </if>
      <if test="scenarioFailureCases != null">
        scenario_failure_cases = #{scenarioFailureCases,jdbcType=LONGVARCHAR},
      </if>
      <if test="loadAllCases != null">
        load_all_Cases = #{loadAllCases,jdbcType=LONGVARCHAR},
      </if>
      <if test="loadFailureCases != null">
        load_failure_cases = #{loadFailureCases,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="io.metersphere.base.domain.TestPlanReportContentWithBLOBs">
    update test_plan_report_content
    set test_plan_report_id = #{testPlanReportId,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=BIGINT},
      case_count = #{caseCount,jdbcType=BIGINT},
      end_time = #{endTime,jdbcType=BIGINT},
      execute_rate = #{executeRate,jdbcType=DOUBLE},
      pass_rate = #{passRate,jdbcType=DOUBLE},
      is_third_part_issue = #{isThirdPartIssue,jdbcType=BIT},
      config = #{config,jdbcType=LONGVARCHAR},
      summary = #{summary,jdbcType=LONGVARCHAR},
      function_result = #{functionResult,jdbcType=LONGVARCHAR},
      api_result = #{apiResult,jdbcType=LONGVARCHAR},
      load_result = #{loadResult,jdbcType=LONGVARCHAR},
      function_all_cases = #{functionAllCases,jdbcType=LONGVARCHAR},
      function_failure_cases = #{functionFailureCases,jdbcType=LONGVARCHAR},
      issue_list = #{issueList,jdbcType=LONGVARCHAR},
      api_all_cases = #{apiAllCases,jdbcType=LONGVARCHAR},
      api_failure_cases = #{apiFailureCases,jdbcType=LONGVARCHAR},
      scenario_all_cases = #{scenarioAllCases,jdbcType=LONGVARCHAR},
      scenario_failure_cases = #{scenarioFailureCases,jdbcType=LONGVARCHAR},
      load_all_Cases = #{loadAllCases,jdbcType=LONGVARCHAR},
      load_failure_cases = #{loadFailureCases,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.metersphere.base.domain.TestPlanReportContent">
    update test_plan_report_content
    set test_plan_report_id = #{testPlanReportId,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=BIGINT},
      case_count = #{caseCount,jdbcType=BIGINT},
      end_time = #{endTime,jdbcType=BIGINT},
      execute_rate = #{executeRate,jdbcType=DOUBLE},
      pass_rate = #{passRate,jdbcType=DOUBLE},
      is_third_part_issue = #{isThirdPartIssue,jdbcType=BIT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>