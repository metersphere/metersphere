<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.metersphere.base.mapper.ext.ExtApiTestMapper">
    <resultMap id="BaseResultMap" type="io.metersphere.api.dto.APITestResult"
               extends="io.metersphere.base.mapper.ApiTestMapper.BaseResultMap">
        <result column="project_name" property="projectName"/>
        <result column="user_name" property="userName"/>
    </resultMap>

    <sql id="condition">
        <choose>
            <when test='${object}.operator == "like"'>
                LIKE CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "not like"'>
                NOT LIKE CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "in"'>
                IN
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "not in"'>
                NOT IN
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "between"'>
                BETWEEN #{${object}.value[0]} AND #{${object}.value[1]}
            </when>
            <when test='${object}.operator == "gt"'>
                &gt; #{${object}.value}
            </when>
            <when test='${object}.operator == "lt"'>
                &lt; #{${object}.value}
            </when>
            <when test='${object}.operator == "ge"'>
                &gt;= #{${object}.value}
            </when>
            <when test='${object}.operator == "le"'>
                &lt;= #{${object}.value}
            </when>
            <when test='${object}.operator == "current user"'>
                = '${@io.metersphere.commons.utils.SessionUtils@getUserId()}'
            </when>
            <otherwise>
                = #{${object}.value}
            </otherwise>
        </choose>
    </sql>

    <sql id="combine">
        <if test='${condition}.name != null and (${name} == null or ${name} == "")'>
            AND api_test.name
            <include refid="condition">
                <property name="object" value="${condition}.name"/>
            </include>
        </if>
        <if test="${condition}.updateTime != null">
            AND api_test.update_time
            <include refid="condition">
                <property name="object" value="${condition}.updateTime"/>
            </include>
        </if>
        <if test="${condition}.projectName != null">
            AND project.name
            <include refid="condition">
                <property name="object" value="${condition}.projectName"/>
            </include>
        </if>
        <if test="${condition}.createTime != null">
            AND api_test.create_time
            <include refid="condition">
                <property name="object" value="${condition}.createTime"/>
            </include>
        </if>
        <if test="${condition}.status != null">
            AND api_test.status
            <include refid="condition">
                <property name="object" value="${condition}.status"/>
            </include>
        </if>
        <if test="${condition}.creator != null">
            AND api_test.user_id
            <include refid="condition">
                <property name="object" value="${condition}.creator"/>
            </include>
        </if>
    </sql>

    <select id="list" resultMap="BaseResultMap">
        SELECT api_test.id, api_test.project_id, api_test.name, api_test.description,
        api_test.status, api_test.user_id, api_test.create_time, api_test.update_time, project.name AS project_name, user.name AS user_name
        FROM api_test
        LEFT JOIN project ON api_test.project_id = project.id
        LEFT JOIN user ON api_test.user_id = user.id
        <where>
            <if test="request.combine != null">
                <include refid="combine">
                    <property name="condition" value="request.combine"/>
                    <property name="name" value="request.name"/>
                </include>
            </if>

            <if test="request.excludeId != null">
                and api_test.id != #{request.excludeId}
            </if>
            <if test="request.name != null">
                AND api_test.name LIKE CONCAT('%', #{request.name},'%')
            </if>
            <if test="request.workspaceId != null">
                AND project.workspace_id = #{request.workspaceId}
            </if>
            <if test="request.projectId != null">
                AND project.id = #{request.projectId}
            </if>
            <if test="request.id != null">
                AND api_test.id = #{request.id}
            </if>
            <if test="request.userId != null">
                AND api_test.user_id = #{request.userId}
            </if>
            <if test="request.filters != null and request.filters.size() > 0">
                <foreach collection="request.filters.entrySet()" index="key" item="values">
                    <if test="values != null and values.size() > 0">
                        AND api_test.status IN
                        <foreach collection="values" item="value" separator="," open="(" close=")">
                            #{value}
                        </foreach>
                    </if>
                </foreach>
            </if>
        </where>
        <if test="request.orders != null and request.orders.size() > 0">
            ORDER BY
            <foreach collection="request.orders" separator="," item="order">
                api_test.${order.name} ${order.type}
            </foreach>
        </if>
    </select>
    <select id="getApiTestByProjectId" resultType="io.metersphere.base.domain.ApiTest">
        SELECT id,name,status
        FROM api_test
        WHERE project_id = #{projectId}
    </select>

    <select id="listByIds" resultType="io.metersphere.base.domain.ApiTest">
        SELECT *
        FROM api_test
        <where>
            <if test="ids != null and ids.size() > 0">
                id IN
                <foreach collection="ids" item="id" separator="," open="(" close=")">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>

    <select id="checkApiTestOwner" resultType="int">
        SELECT COUNT(1)
        FROM api_test
        LEFT JOIN project ON api_test.project_id = project.id
        <where>
            <if test="testId != null">
                and api_test.id = #{testId}
            </if>
            <if test="projectIds != null and projectIds.size() > 0">
                AND project_id IN
                <foreach collection="projectIds" item="id" separator="," open="(" close=")">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>
</mapper>