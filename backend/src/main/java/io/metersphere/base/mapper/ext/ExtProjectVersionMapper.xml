<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.metersphere.base.mapper.ext.ExtProjectVersionMapper">
    <select id="selectProjectVersionList" resultType="io.metersphere.dto.ProjectVersionDTO">
        SELECT DISTINCT project_version.*, user.name AS createUserName
        FROM project_version
                     LEFT JOIN user ON user.id = project_version.create_user
        <where>
            <if test="request.projectId != null and request.projectId != ''">
                AND project_version.project_id = #{request.projectId, jdbcType=VARCHAR}
            </if>
            <if test="request.name != null and request.name != ''">
                AND project_version.name LIKE #{request.name, jdbcType=VARCHAR}
            </if>
            <if test="request.latest != null and request.latest != ''">
                AND project_version.latest = #{request.latest, jdbcType=INTEGER}
            </if>
            <if test="request.filters != null and request.filters.size() > 0">
                <foreach collection="request.filters.entrySet()" index="key" item="values">
                    <if test="values != null and values.size() > 0">
                        <choose>
                            <when test="key == 'create_user'">
                                AND project_version.create_user IN
                                <foreach collection="values" item="value" separator="," open="(" close=")">
                                    #{value}
                                </foreach>
                            </when>
                            <when test="key == 'project_id'">
                                AND project_version.project_id IN
                                <foreach collection="values" item="value" separator="," open="(" close=")">
                                    #{value}
                                </foreach>
                            </when>
                            <when test="key == 'status'">
                                AND project_version.status IN
                                <foreach collection="values" item="value" separator="," open="(" close=")">
                                    #{value}
                                </foreach>
                            </when>
                        </choose>
                    </if>
                </foreach>
            </if>
        </where>
        <if test="request.orders != null and request.orders.size() > 0">
            ORDER BY
            <foreach collection="request.orders" separator="," item="order">
                project_version.${order.name} ${order.type}
            </foreach>
        </if>
    </select>

    <select id="getDefaultVersion" resultType="java.lang.String">
        SELECT id
        FROM project_version
        WHERE project_id = #{projectId} AND status = 'open' AND latest = TRUE
        LIMIT 1
    </select>

    <update id="updateLatestToFalse">
        UPDATE project_version set latest = FALSE where project_id = #{projectId}
    </update>

    <select id="isVersionEnable" resultType="boolean">
        select version_enable from project where id = #{projectId}
    </select>

    <update id="changeVersionEnable">
        update project set version_enable = #{status} where id = #{projectId}
    </update>

    <select id="checkForDelete" resultType="boolean">
        SELECT COUNT(1) > 0
        FROM (
             SELECT 1
             FROM api_definition
             WHERE version_id = #{id}
             UNION
             SELECT 1
             FROM api_scenario
             WHERE version_id = #{id}
             UNION
             SELECT 1
             FROM api_test_case
             WHERE version_id = #{id}
             UNION
             SELECT 1
             FROM load_test
             WHERE version_id = #{id}
        ) AS tmp
    </select>
</mapper>
