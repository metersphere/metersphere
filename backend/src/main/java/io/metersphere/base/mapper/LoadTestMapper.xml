<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.base.mapper.LoadTestMapper">
  <resultMap id="BaseResultMap" type="io.metersphere.base.domain.LoadTest">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="project_id" jdbcType="VARCHAR" property="projectId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="test_resource_pool_id" jdbcType="VARCHAR" property="testResourcePoolId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="scenario_version" jdbcType="INTEGER" property="scenarioVersion" />
    <result column="scenario_id" jdbcType="VARCHAR" property="scenarioId" />
    <result column="order" jdbcType="BIGINT" property="order" />
    <result column="version_id" jdbcType="VARCHAR" property="versionId" />
    <result column="ref_id" jdbcType="VARCHAR" property="refId" />
    <result column="latest" jdbcType="BIT" property="latest" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="io.metersphere.base.domain.LoadTestWithBLOBs">
    <result column="load_configuration" jdbcType="LONGVARCHAR" property="loadConfiguration" />
    <result column="advanced_configuration" jdbcType="LONGVARCHAR" property="advancedConfiguration" />
    <result column="env_info" jdbcType="LONGVARCHAR" property="envInfo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, project_id, `name`, description, create_time, update_time, `status`, test_resource_pool_id, 
    user_id, num, create_user, scenario_version, scenario_id, `order`, version_id, ref_id, 
    latest
  </sql>
  <sql id="Blob_Column_List">
    load_configuration, advanced_configuration, env_info
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="io.metersphere.base.domain.LoadTestExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from load_test
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="io.metersphere.base.domain.LoadTestExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from load_test
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from load_test
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from load_test
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="io.metersphere.base.domain.LoadTestExample">
    delete from load_test
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.metersphere.base.domain.LoadTestWithBLOBs">
    insert into load_test (id, project_id, `name`, 
      description, create_time, update_time, 
      `status`, test_resource_pool_id, user_id, 
      num, create_user, scenario_version, 
      scenario_id, `order`, version_id, 
      ref_id, latest, load_configuration, 
      advanced_configuration, env_info)
    values (#{id,jdbcType=VARCHAR}, #{projectId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, 
      #{status,jdbcType=VARCHAR}, #{testResourcePoolId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{num,jdbcType=INTEGER}, #{createUser,jdbcType=VARCHAR}, #{scenarioVersion,jdbcType=INTEGER}, 
      #{scenarioId,jdbcType=VARCHAR}, #{order,jdbcType=BIGINT}, #{versionId,jdbcType=VARCHAR}, 
      #{refId,jdbcType=VARCHAR}, #{latest,jdbcType=BIT}, #{loadConfiguration,jdbcType=LONGVARCHAR}, 
      #{advancedConfiguration,jdbcType=LONGVARCHAR}, #{envInfo,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="io.metersphere.base.domain.LoadTestWithBLOBs">
    insert into load_test
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="testResourcePoolId != null">
        test_resource_pool_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="scenarioVersion != null">
        scenario_version,
      </if>
      <if test="scenarioId != null">
        scenario_id,
      </if>
      <if test="order != null">
        `order`,
      </if>
      <if test="versionId != null">
        version_id,
      </if>
      <if test="refId != null">
        ref_id,
      </if>
      <if test="latest != null">
        latest,
      </if>
      <if test="loadConfiguration != null">
        load_configuration,
      </if>
      <if test="advancedConfiguration != null">
        advanced_configuration,
      </if>
      <if test="envInfo != null">
        env_info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="testResourcePoolId != null">
        #{testResourcePoolId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="scenarioVersion != null">
        #{scenarioVersion,jdbcType=INTEGER},
      </if>
      <if test="scenarioId != null">
        #{scenarioId,jdbcType=VARCHAR},
      </if>
      <if test="order != null">
        #{order,jdbcType=BIGINT},
      </if>
      <if test="versionId != null">
        #{versionId,jdbcType=VARCHAR},
      </if>
      <if test="refId != null">
        #{refId,jdbcType=VARCHAR},
      </if>
      <if test="latest != null">
        #{latest,jdbcType=BIT},
      </if>
      <if test="loadConfiguration != null">
        #{loadConfiguration,jdbcType=LONGVARCHAR},
      </if>
      <if test="advancedConfiguration != null">
        #{advancedConfiguration,jdbcType=LONGVARCHAR},
      </if>
      <if test="envInfo != null">
        #{envInfo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.metersphere.base.domain.LoadTestExample" resultType="java.lang.Long">
    select count(*) from load_test
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update load_test
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.testResourcePoolId != null">
        test_resource_pool_id = #{record.testResourcePoolId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.scenarioVersion != null">
        scenario_version = #{record.scenarioVersion,jdbcType=INTEGER},
      </if>
      <if test="record.scenarioId != null">
        scenario_id = #{record.scenarioId,jdbcType=VARCHAR},
      </if>
      <if test="record.order != null">
        `order` = #{record.order,jdbcType=BIGINT},
      </if>
      <if test="record.versionId != null">
        version_id = #{record.versionId,jdbcType=VARCHAR},
      </if>
      <if test="record.refId != null">
        ref_id = #{record.refId,jdbcType=VARCHAR},
      </if>
      <if test="record.latest != null">
        latest = #{record.latest,jdbcType=BIT},
      </if>
      <if test="record.loadConfiguration != null">
        load_configuration = #{record.loadConfiguration,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.advancedConfiguration != null">
        advanced_configuration = #{record.advancedConfiguration,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.envInfo != null">
        env_info = #{record.envInfo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update load_test
    set id = #{record.id,jdbcType=VARCHAR},
      project_id = #{record.projectId,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      `status` = #{record.status,jdbcType=VARCHAR},
      test_resource_pool_id = #{record.testResourcePoolId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      scenario_version = #{record.scenarioVersion,jdbcType=INTEGER},
      scenario_id = #{record.scenarioId,jdbcType=VARCHAR},
      `order` = #{record.order,jdbcType=BIGINT},
      version_id = #{record.versionId,jdbcType=VARCHAR},
      ref_id = #{record.refId,jdbcType=VARCHAR},
      latest = #{record.latest,jdbcType=BIT},
      load_configuration = #{record.loadConfiguration,jdbcType=LONGVARCHAR},
      advanced_configuration = #{record.advancedConfiguration,jdbcType=LONGVARCHAR},
      env_info = #{record.envInfo,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update load_test
    set id = #{record.id,jdbcType=VARCHAR},
      project_id = #{record.projectId,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      `status` = #{record.status,jdbcType=VARCHAR},
      test_resource_pool_id = #{record.testResourcePoolId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      scenario_version = #{record.scenarioVersion,jdbcType=INTEGER},
      scenario_id = #{record.scenarioId,jdbcType=VARCHAR},
      `order` = #{record.order,jdbcType=BIGINT},
      version_id = #{record.versionId,jdbcType=VARCHAR},
      ref_id = #{record.refId,jdbcType=VARCHAR},
      latest = #{record.latest,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.metersphere.base.domain.LoadTestWithBLOBs">
    update load_test
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="testResourcePoolId != null">
        test_resource_pool_id = #{testResourcePoolId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="scenarioVersion != null">
        scenario_version = #{scenarioVersion,jdbcType=INTEGER},
      </if>
      <if test="scenarioId != null">
        scenario_id = #{scenarioId,jdbcType=VARCHAR},
      </if>
      <if test="order != null">
        `order` = #{order,jdbcType=BIGINT},
      </if>
      <if test="versionId != null">
        version_id = #{versionId,jdbcType=VARCHAR},
      </if>
      <if test="refId != null">
        ref_id = #{refId,jdbcType=VARCHAR},
      </if>
      <if test="latest != null">
        latest = #{latest,jdbcType=BIT},
      </if>
      <if test="loadConfiguration != null">
        load_configuration = #{loadConfiguration,jdbcType=LONGVARCHAR},
      </if>
      <if test="advancedConfiguration != null">
        advanced_configuration = #{advancedConfiguration,jdbcType=LONGVARCHAR},
      </if>
      <if test="envInfo != null">
        env_info = #{envInfo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="io.metersphere.base.domain.LoadTestWithBLOBs">
    update load_test
    set project_id = #{projectId,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      `status` = #{status,jdbcType=VARCHAR},
      test_resource_pool_id = #{testResourcePoolId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=VARCHAR},
      scenario_version = #{scenarioVersion,jdbcType=INTEGER},
      scenario_id = #{scenarioId,jdbcType=VARCHAR},
      `order` = #{order,jdbcType=BIGINT},
      version_id = #{versionId,jdbcType=VARCHAR},
      ref_id = #{refId,jdbcType=VARCHAR},
      latest = #{latest,jdbcType=BIT},
      load_configuration = #{loadConfiguration,jdbcType=LONGVARCHAR},
      advanced_configuration = #{advancedConfiguration,jdbcType=LONGVARCHAR},
      env_info = #{envInfo,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.metersphere.base.domain.LoadTest">
    update load_test
    set project_id = #{projectId,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      `status` = #{status,jdbcType=VARCHAR},
      test_resource_pool_id = #{testResourcePoolId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=VARCHAR},
      scenario_version = #{scenarioVersion,jdbcType=INTEGER},
      scenario_id = #{scenarioId,jdbcType=VARCHAR},
      `order` = #{order,jdbcType=BIGINT},
      version_id = #{versionId,jdbcType=VARCHAR},
      ref_id = #{refId,jdbcType=VARCHAR},
      latest = #{latest,jdbcType=BIT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>