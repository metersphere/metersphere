<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.base.mapper.TestCaseMapper">
  <resultMap id="BaseResultMap" type="io.metersphere.base.domain.TestCase">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="node_id" jdbcType="VARCHAR" property="nodeId" />
    <result column="node_path" jdbcType="VARCHAR" property="nodePath" />
    <result column="project_id" jdbcType="VARCHAR" property="projectId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="maintainer" jdbcType="VARCHAR" property="maintainer" />
    <result column="priority" jdbcType="VARCHAR" property="priority" />
    <result column="method" jdbcType="VARCHAR" property="method" />
    <result column="prerequisite" jdbcType="VARCHAR" property="prerequisite" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="test_id" jdbcType="VARCHAR" property="testId" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="other_test_name" jdbcType="VARCHAR" property="otherTestName" />
    <result column="review_status" jdbcType="VARCHAR" property="reviewStatus" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="io.metersphere.base.domain.TestCaseWithBLOBs">
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
    <result column="steps" jdbcType="LONGVARCHAR" property="steps" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, node_id, node_path, project_id, `name`, `type`, maintainer, priority, `method`, 
    prerequisite, create_time, update_time, test_id, sort, num, other_test_name, review_status
  </sql>
  <sql id="Blob_Column_List">
    remark, steps
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="io.metersphere.base.domain.TestCaseExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from test_case
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="io.metersphere.base.domain.TestCaseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from test_case
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from test_case
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from test_case
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="io.metersphere.base.domain.TestCaseExample">
    delete from test_case
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.metersphere.base.domain.TestCaseWithBLOBs">
    insert into test_case (id, node_id, node_path, 
      project_id, `name`, `type`, 
      maintainer, priority, `method`, 
      prerequisite, create_time, update_time, 
      test_id, sort, num, 
      other_test_name, review_status, remark, 
      steps)
    values (#{id,jdbcType=VARCHAR}, #{nodeId,jdbcType=VARCHAR}, #{nodePath,jdbcType=VARCHAR}, 
      #{projectId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{maintainer,jdbcType=VARCHAR}, #{priority,jdbcType=VARCHAR}, #{method,jdbcType=VARCHAR}, 
      #{prerequisite,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, 
      #{testId,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}, #{num,jdbcType=INTEGER}, 
      #{otherTestName,jdbcType=VARCHAR}, #{reviewStatus,jdbcType=VARCHAR}, #{remark,jdbcType=LONGVARCHAR}, 
      #{steps,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="io.metersphere.base.domain.TestCaseWithBLOBs">
    insert into test_case
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="nodeId != null">
        node_id,
      </if>
      <if test="nodePath != null">
        node_path,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="maintainer != null">
        maintainer,
      </if>
      <if test="priority != null">
        priority,
      </if>
      <if test="method != null">
        `method`,
      </if>
      <if test="prerequisite != null">
        prerequisite,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="testId != null">
        test_id,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="otherTestName != null">
        other_test_name,
      </if>
      <if test="reviewStatus != null">
        review_status,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="steps != null">
        steps,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="nodeId != null">
        #{nodeId,jdbcType=VARCHAR},
      </if>
      <if test="nodePath != null">
        #{nodePath,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="maintainer != null">
        #{maintainer,jdbcType=VARCHAR},
      </if>
      <if test="priority != null">
        #{priority,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="prerequisite != null">
        #{prerequisite,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="testId != null">
        #{testId,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="otherTestName != null">
        #{otherTestName,jdbcType=VARCHAR},
      </if>
      <if test="reviewStatus != null">
        #{reviewStatus,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="steps != null">
        #{steps,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.metersphere.base.domain.TestCaseExample" resultType="java.lang.Long">
    select count(*) from test_case
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update test_case
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.nodeId != null">
        node_id = #{record.nodeId,jdbcType=VARCHAR},
      </if>
      <if test="record.nodePath != null">
        node_path = #{record.nodePath,jdbcType=VARCHAR},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.maintainer != null">
        maintainer = #{record.maintainer,jdbcType=VARCHAR},
      </if>
      <if test="record.priority != null">
        priority = #{record.priority,jdbcType=VARCHAR},
      </if>
      <if test="record.method != null">
        `method` = #{record.method,jdbcType=VARCHAR},
      </if>
      <if test="record.prerequisite != null">
        prerequisite = #{record.prerequisite,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.testId != null">
        test_id = #{record.testId,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.otherTestName != null">
        other_test_name = #{record.otherTestName,jdbcType=VARCHAR},
      </if>
      <if test="record.reviewStatus != null">
        review_status = #{record.reviewStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.steps != null">
        steps = #{record.steps,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update test_case
    set id = #{record.id,jdbcType=VARCHAR},
      node_id = #{record.nodeId,jdbcType=VARCHAR},
      node_path = #{record.nodePath,jdbcType=VARCHAR},
      project_id = #{record.projectId,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      `type` = #{record.type,jdbcType=VARCHAR},
      maintainer = #{record.maintainer,jdbcType=VARCHAR},
      priority = #{record.priority,jdbcType=VARCHAR},
      `method` = #{record.method,jdbcType=VARCHAR},
      prerequisite = #{record.prerequisite,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      test_id = #{record.testId,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      num = #{record.num,jdbcType=INTEGER},
      other_test_name = #{record.otherTestName,jdbcType=VARCHAR},
      review_status = #{record.reviewStatus,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=LONGVARCHAR},
      steps = #{record.steps,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update test_case
    set id = #{record.id,jdbcType=VARCHAR},
      node_id = #{record.nodeId,jdbcType=VARCHAR},
      node_path = #{record.nodePath,jdbcType=VARCHAR},
      project_id = #{record.projectId,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      `type` = #{record.type,jdbcType=VARCHAR},
      maintainer = #{record.maintainer,jdbcType=VARCHAR},
      priority = #{record.priority,jdbcType=VARCHAR},
      `method` = #{record.method,jdbcType=VARCHAR},
      prerequisite = #{record.prerequisite,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      test_id = #{record.testId,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      num = #{record.num,jdbcType=INTEGER},
      other_test_name = #{record.otherTestName,jdbcType=VARCHAR},
      review_status = #{record.reviewStatus,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.metersphere.base.domain.TestCaseWithBLOBs">
    update test_case
    <set>
      <if test="nodeId != null">
        node_id = #{nodeId,jdbcType=VARCHAR},
      </if>
      <if test="nodePath != null">
        node_path = #{nodePath,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="maintainer != null">
        maintainer = #{maintainer,jdbcType=VARCHAR},
      </if>
      <if test="priority != null">
        priority = #{priority,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        `method` = #{method,jdbcType=VARCHAR},
      </if>
      <if test="prerequisite != null">
        prerequisite = #{prerequisite,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="testId != null">
        test_id = #{testId,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="otherTestName != null">
        other_test_name = #{otherTestName,jdbcType=VARCHAR},
      </if>
      <if test="reviewStatus != null">
        review_status = #{reviewStatus,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="steps != null">
        steps = #{steps,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="io.metersphere.base.domain.TestCaseWithBLOBs">
    update test_case
    set node_id = #{nodeId,jdbcType=VARCHAR},
      node_path = #{nodePath,jdbcType=VARCHAR},
      project_id = #{projectId,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=VARCHAR},
      maintainer = #{maintainer,jdbcType=VARCHAR},
      priority = #{priority,jdbcType=VARCHAR},
      `method` = #{method,jdbcType=VARCHAR},
      prerequisite = #{prerequisite,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      test_id = #{testId,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      other_test_name = #{otherTestName,jdbcType=VARCHAR},
      review_status = #{reviewStatus,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=LONGVARCHAR},
      steps = #{steps,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.metersphere.base.domain.TestCase">
    update test_case
    set node_id = #{nodeId,jdbcType=VARCHAR},
      node_path = #{nodePath,jdbcType=VARCHAR},
      project_id = #{projectId,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=VARCHAR},
      maintainer = #{maintainer,jdbcType=VARCHAR},
      priority = #{priority,jdbcType=VARCHAR},
      `method` = #{method,jdbcType=VARCHAR},
      prerequisite = #{prerequisite,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      test_id = #{testId,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      other_test_name = #{otherTestName,jdbcType=VARCHAR},
      review_status = #{reviewStatus,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>