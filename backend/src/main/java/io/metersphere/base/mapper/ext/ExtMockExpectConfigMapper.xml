<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.metersphere.base.mapper.ext.ExtMockExpectConfigMapper">

    <select id="selectByProjectIdAndStatusIsOpen" resultType="io.metersphere.base.domain.MockExpectConfigWithBLOBs">
        SELECT * FROM mock_expect_config WHERE status = 'true' AND mock_config_id IN
            (SELECT id FROM mock_config WHERE api_path IS NULL AND project_id = #{0} )
    </select>
    <select id="selectByApiId" resultType="io.metersphere.base.domain.MockExpectConfigWithBLOBs">
        SELECT * FROM mock_expect_config WHERE mock_config_id IN
            (
                SELECT id FROM mock_config WHERE api_id = #{0}
            )
    </select>
    <select id="selectByApiIdIn" resultType="io.metersphere.base.domain.MockExpectConfigWithBLOBs">
        SELECT * FROM mock_expect_config WHERE mock_config_id IN
        (
        SELECT id FROM mock_config WHERE api_id IN
        <foreach collection="values" item="value" separator="," open="(" close=")">
            #{value}
        </foreach>
        )
    </select>

    <select id="selectExlectNumByMockConfigId" resultType="java.lang.String">
        SELECT expect_num FROM mock_expect_config WHERE mock_config_id = #{0}
    </select>

    <select id="selectApiNumberByMockConfigId" resultType="java.lang.String">
        SELECT num FROM api_definition WHERE id IN (
            select api_id from  mock_config WHERE id = #{0}
            )
    </select>

    <insert id="insertNewVersionMockConfigs">
        INSERT INTO mock_config (id, project_id, api_id, api_path, api_method, create_time, update_time, create_user_id)
        SELECT UUID(), project_id, #{api.id}, api_path, api_method, create_time, update_time, #{api.createUser}
        FROM mock_config
        WHERE api_id = #{old.id}
    </insert>

    <insert id="insertNewVersionMockExpectConfigs">
        INSERT INTO mock_expect_config(id, mock_config_id, name, tags, request, response, status, create_time, update_time,
                                       create_user_id, expect_num)
        SELECT UUID(), mock_config_id, name, tags, request, response, status, create_time, update_time, #{api.createUser},
               expect_num
        FROM mock_expect_config
        WHERE mock_config_id IN (SELECT id FROM mock_config WHERE api_id = '')
    </insert>
</mapper>