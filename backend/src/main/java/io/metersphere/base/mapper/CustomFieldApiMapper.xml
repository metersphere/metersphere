<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.base.mapper.CustomFieldApiMapper">
    <resultMap id="BaseResultMap" type="io.metersphere.base.domain.CustomFieldApi">
        <id column="resource_id" jdbcType="VARCHAR" property="resourceId"/>
        <id column="field_id" jdbcType="VARCHAR" property="fieldId"/>
        <result column="value" jdbcType="VARCHAR" property="value"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="io.metersphere.base.domain.CustomFieldApi">
        <result column="text_value" jdbcType="LONGVARCHAR" property="textValue"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        resource_id
        , field_id, `value`
    </sql>
    <sql id="Blob_Column_List">
        text_value
    </sql>
    <select id="selectByExampleWithBLOBs" parameterType="io.metersphere.base.domain.CustomFieldApiExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from custom_field_api
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="io.metersphere.base.domain.CustomFieldApiExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from custom_field_api
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="io.metersphere.base.domain.CustomFieldApiKey"
            resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from custom_field_api
        where resource_id = #{resourceId,jdbcType=VARCHAR}
        and field_id = #{fieldId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="io.metersphere.base.domain.CustomFieldApiKey">
        delete
        from custom_field_api
        where resource_id = #{resourceId,jdbcType=VARCHAR}
          and field_id = #{fieldId,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="io.metersphere.base.domain.CustomFieldApiExample">
        delete from custom_field_api
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="io.metersphere.base.domain.CustomFieldApi">
        insert into custom_field_api (resource_id, field_id, `value`,
                                      text_value)
        values (#{resourceId,jdbcType=VARCHAR}, #{fieldId,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR},
                #{textValue,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="io.metersphere.base.domain.CustomFieldApi">
        insert into custom_field_api
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="resourceId != null">
                resource_id,
            </if>
            <if test="fieldId != null">
                field_id,
            </if>
            <if test="value != null">
                `value`,
            </if>
            <if test="textValue != null">
                text_value,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="resourceId != null">
                #{resourceId,jdbcType=VARCHAR},
            </if>
            <if test="fieldId != null">
                #{fieldId,jdbcType=VARCHAR},
            </if>
            <if test="value != null">
                #{value,jdbcType=VARCHAR},
            </if>
            <if test="textValue != null">
                #{textValue,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="io.metersphere.base.domain.CustomFieldApiExample"
            resultType="java.lang.Long">
        select count(*) from custom_field_api
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update custom_field_api
        <set>
            <if test="record.resourceId != null">
                resource_id = #{record.resourceId,jdbcType=VARCHAR},
            </if>
            <if test="record.fieldId != null">
                field_id = #{record.fieldId,jdbcType=VARCHAR},
            </if>
            <if test="record.value != null">
                `value` = #{record.value,jdbcType=VARCHAR},
            </if>
            <if test="record.textValue != null">
                text_value = #{record.textValue,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update custom_field_api
        set resource_id = #{record.resourceId,jdbcType=VARCHAR},
        field_id = #{record.fieldId,jdbcType=VARCHAR},
        `value` = #{record.value,jdbcType=VARCHAR},
        text_value = #{record.textValue,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update custom_field_api
        set resource_id = #{record.resourceId,jdbcType=VARCHAR},
        field_id = #{record.fieldId,jdbcType=VARCHAR},
        `value` = #{record.value,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="io.metersphere.base.domain.CustomFieldApi">
        update custom_field_api
        <set>
            <if test="value != null">
                `value` = #{value,jdbcType=VARCHAR},
            </if>
            <if test="textValue != null">
                text_value = #{textValue,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where resource_id = #{resourceId,jdbcType=VARCHAR}
        and field_id = #{fieldId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="io.metersphere.base.domain.CustomFieldApi">
        update custom_field_api
        set `value`    = #{value,jdbcType=VARCHAR},
            text_value = #{textValue,jdbcType=LONGVARCHAR}
        where resource_id = #{resourceId,jdbcType=VARCHAR}
          and field_id = #{fieldId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="io.metersphere.base.domain.CustomFieldApi">
        update custom_field_api
        set `value` = #{value,jdbcType=VARCHAR}
        where resource_id = #{resourceId,jdbcType=VARCHAR}
          and field_id = #{fieldId,jdbcType=VARCHAR}
    </update>
</mapper>