<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.base.mapper.ApiScenarioReportMapper">
  <resultMap id="BaseResultMap" type="io.metersphere.base.domain.ApiScenarioReport">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="project_id" jdbcType="VARCHAR" property="projectId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="trigger_mode" jdbcType="VARCHAR" property="triggerMode" />
    <result column="execute_type" jdbcType="VARCHAR" property="executeType" />
    <result column="scenario_name" jdbcType="VARCHAR" property="scenarioName" />
    <result column="scenario_id" jdbcType="VARCHAR" property="scenarioId" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="actuator" jdbcType="VARCHAR" property="actuator" />
    <result column="end_time" jdbcType="BIGINT" property="endTime" />
    <result column="report_version" jdbcType="INTEGER" property="reportVersion" />
    <result column="version_id" jdbcType="VARCHAR" property="versionId" />
    <result column="report_type" jdbcType="VARCHAR" property="reportType" />
    <result column="relevance_test_plan_report_id" jdbcType="VARCHAR" property="relevanceTestPlanReportId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="io.metersphere.base.domain.ApiScenarioReportWithBLOBs">
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
    <result column="env_config" jdbcType="LONGVARCHAR" property="envConfig" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, project_id, `name`, create_time, update_time, `status`, user_id, trigger_mode, 
    execute_type, scenario_name, scenario_id, create_user, actuator, end_time, report_version, 
    version_id, report_type, relevance_test_plan_report_id
  </sql>
  <sql id="Blob_Column_List">
    description, env_config
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="io.metersphere.base.domain.ApiScenarioReportExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from api_scenario_report
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="io.metersphere.base.domain.ApiScenarioReportExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from api_scenario_report
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from api_scenario_report
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from api_scenario_report
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="io.metersphere.base.domain.ApiScenarioReportExample">
    delete from api_scenario_report
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.metersphere.base.domain.ApiScenarioReportWithBLOBs">
    insert into api_scenario_report (id, project_id, `name`, 
      create_time, update_time, `status`, 
      user_id, trigger_mode, execute_type, 
      scenario_name, scenario_id, create_user, 
      actuator, end_time, report_version, 
      version_id, report_type, relevance_test_plan_report_id, 
      description, env_config)
    values (#{id,jdbcType=VARCHAR}, #{projectId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{status,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR}, #{triggerMode,jdbcType=VARCHAR}, #{executeType,jdbcType=VARCHAR}, 
      #{scenarioName,jdbcType=VARCHAR}, #{scenarioId,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, 
      #{actuator,jdbcType=VARCHAR}, #{endTime,jdbcType=BIGINT}, #{reportVersion,jdbcType=INTEGER}, 
      #{versionId,jdbcType=VARCHAR}, #{reportType,jdbcType=VARCHAR}, #{relevanceTestPlanReportId,jdbcType=VARCHAR}, 
      #{description,jdbcType=LONGVARCHAR}, #{envConfig,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="io.metersphere.base.domain.ApiScenarioReportWithBLOBs">
    insert into api_scenario_report
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="triggerMode != null">
        trigger_mode,
      </if>
      <if test="executeType != null">
        execute_type,
      </if>
      <if test="scenarioName != null">
        scenario_name,
      </if>
      <if test="scenarioId != null">
        scenario_id,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="actuator != null">
        actuator,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="reportVersion != null">
        report_version,
      </if>
      <if test="versionId != null">
        version_id,
      </if>
      <if test="reportType != null">
        report_type,
      </if>
      <if test="relevanceTestPlanReportId != null">
        relevance_test_plan_report_id,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="envConfig != null">
        env_config,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="triggerMode != null">
        #{triggerMode,jdbcType=VARCHAR},
      </if>
      <if test="executeType != null">
        #{executeType,jdbcType=VARCHAR},
      </if>
      <if test="scenarioName != null">
        #{scenarioName,jdbcType=VARCHAR},
      </if>
      <if test="scenarioId != null">
        #{scenarioId,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="actuator != null">
        #{actuator,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=BIGINT},
      </if>
      <if test="reportVersion != null">
        #{reportVersion,jdbcType=INTEGER},
      </if>
      <if test="versionId != null">
        #{versionId,jdbcType=VARCHAR},
      </if>
      <if test="reportType != null">
        #{reportType,jdbcType=VARCHAR},
      </if>
      <if test="relevanceTestPlanReportId != null">
        #{relevanceTestPlanReportId,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="envConfig != null">
        #{envConfig,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.metersphere.base.domain.ApiScenarioReportExample" resultType="java.lang.Long">
    select count(*) from api_scenario_report
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update api_scenario_report
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.triggerMode != null">
        trigger_mode = #{record.triggerMode,jdbcType=VARCHAR},
      </if>
      <if test="record.executeType != null">
        execute_type = #{record.executeType,jdbcType=VARCHAR},
      </if>
      <if test="record.scenarioName != null">
        scenario_name = #{record.scenarioName,jdbcType=VARCHAR},
      </if>
      <if test="record.scenarioId != null">
        scenario_id = #{record.scenarioId,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.actuator != null">
        actuator = #{record.actuator,jdbcType=VARCHAR},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=BIGINT},
      </if>
      <if test="record.reportVersion != null">
        report_version = #{record.reportVersion,jdbcType=INTEGER},
      </if>
      <if test="record.versionId != null">
        version_id = #{record.versionId,jdbcType=VARCHAR},
      </if>
      <if test="record.reportType != null">
        report_type = #{record.reportType,jdbcType=VARCHAR},
      </if>
      <if test="record.relevanceTestPlanReportId != null">
        relevance_test_plan_report_id = #{record.relevanceTestPlanReportId,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.envConfig != null">
        env_config = #{record.envConfig,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update api_scenario_report
    set id = #{record.id,jdbcType=VARCHAR},
      project_id = #{record.projectId,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      `status` = #{record.status,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      trigger_mode = #{record.triggerMode,jdbcType=VARCHAR},
      execute_type = #{record.executeType,jdbcType=VARCHAR},
      scenario_name = #{record.scenarioName,jdbcType=VARCHAR},
      scenario_id = #{record.scenarioId,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      actuator = #{record.actuator,jdbcType=VARCHAR},
      end_time = #{record.endTime,jdbcType=BIGINT},
      report_version = #{record.reportVersion,jdbcType=INTEGER},
      version_id = #{record.versionId,jdbcType=VARCHAR},
      report_type = #{record.reportType,jdbcType=VARCHAR},
      relevance_test_plan_report_id = #{record.relevanceTestPlanReportId,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=LONGVARCHAR},
      env_config = #{record.envConfig,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update api_scenario_report
    set id = #{record.id,jdbcType=VARCHAR},
      project_id = #{record.projectId,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      `status` = #{record.status,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      trigger_mode = #{record.triggerMode,jdbcType=VARCHAR},
      execute_type = #{record.executeType,jdbcType=VARCHAR},
      scenario_name = #{record.scenarioName,jdbcType=VARCHAR},
      scenario_id = #{record.scenarioId,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      actuator = #{record.actuator,jdbcType=VARCHAR},
      end_time = #{record.endTime,jdbcType=BIGINT},
      report_version = #{record.reportVersion,jdbcType=INTEGER},
      version_id = #{record.versionId,jdbcType=VARCHAR},
      report_type = #{record.reportType,jdbcType=VARCHAR},
      relevance_test_plan_report_id = #{record.relevanceTestPlanReportId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.metersphere.base.domain.ApiScenarioReportWithBLOBs">
    update api_scenario_report
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="triggerMode != null">
        trigger_mode = #{triggerMode,jdbcType=VARCHAR},
      </if>
      <if test="executeType != null">
        execute_type = #{executeType,jdbcType=VARCHAR},
      </if>
      <if test="scenarioName != null">
        scenario_name = #{scenarioName,jdbcType=VARCHAR},
      </if>
      <if test="scenarioId != null">
        scenario_id = #{scenarioId,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="actuator != null">
        actuator = #{actuator,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=BIGINT},
      </if>
      <if test="reportVersion != null">
        report_version = #{reportVersion,jdbcType=INTEGER},
      </if>
      <if test="versionId != null">
        version_id = #{versionId,jdbcType=VARCHAR},
      </if>
      <if test="reportType != null">
        report_type = #{reportType,jdbcType=VARCHAR},
      </if>
      <if test="relevanceTestPlanReportId != null">
        relevance_test_plan_report_id = #{relevanceTestPlanReportId,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="envConfig != null">
        env_config = #{envConfig,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="io.metersphere.base.domain.ApiScenarioReportWithBLOBs">
    update api_scenario_report
    set project_id = #{projectId,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      `status` = #{status,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      trigger_mode = #{triggerMode,jdbcType=VARCHAR},
      execute_type = #{executeType,jdbcType=VARCHAR},
      scenario_name = #{scenarioName,jdbcType=VARCHAR},
      scenario_id = #{scenarioId,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      actuator = #{actuator,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=BIGINT},
      report_version = #{reportVersion,jdbcType=INTEGER},
      version_id = #{versionId,jdbcType=VARCHAR},
      report_type = #{reportType,jdbcType=VARCHAR},
      relevance_test_plan_report_id = #{relevanceTestPlanReportId,jdbcType=VARCHAR},
      description = #{description,jdbcType=LONGVARCHAR},
      env_config = #{envConfig,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.metersphere.base.domain.ApiScenarioReport">
    update api_scenario_report
    set project_id = #{projectId,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      `status` = #{status,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      trigger_mode = #{triggerMode,jdbcType=VARCHAR},
      execute_type = #{executeType,jdbcType=VARCHAR},
      scenario_name = #{scenarioName,jdbcType=VARCHAR},
      scenario_id = #{scenarioId,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      actuator = #{actuator,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=BIGINT},
      report_version = #{reportVersion,jdbcType=INTEGER},
      version_id = #{versionId,jdbcType=VARCHAR},
      report_type = #{reportType,jdbcType=VARCHAR},
      relevance_test_plan_report_id = #{relevanceTestPlanReportId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>