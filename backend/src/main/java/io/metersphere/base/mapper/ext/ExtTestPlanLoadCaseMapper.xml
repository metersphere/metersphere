<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.base.mapper.ext.ExtTestPlanLoadCaseMapper">
    <update id="updateCaseStatus">
        update test_plan_load_case tplc
        set status = #{status}
        where tplc.load_report_id = #{reportId}
    </update>
    <update id="updateCaseStatusByApi">
        update test_plan_load_case tplc
        set status = #{status}
        where tplc.load_case_id = #{loadCaseId}
          and tplc.test_plan_id = #{testPlanId}
    </update>

    <select id="selectIdsNotInPlan" resultType="java.lang.String">
        select load_test.id
        from load_test
        where load_test.project_id = #{request.projectId}
        <if test="request.name != null and request.name != ''">
            and load_test.name like CONCAT('%', #{request.name},'%')
        </if>
        <if test="request.filters != null and request.filters.size() > 0">
            <foreach collection="request.filters.entrySet()" index="key" item="values">
                <if test="values != null and values.size() > 0">
                    <choose>
                        <when test="key=='status'">
                            and load_test.status in
                            <foreach collection="values" item="value" separator="," open="(" close=")">
                                #{value}
                            </foreach>
                        </when>
                    </choose>
                </if>
            </foreach>
        </if>
        and load_test.id not in (
        select tplc.load_case_id from test_plan_load_case tplc where tplc.test_plan_id = #{request.testPlanId}
        )
    </select>
    <select id="selectTestPlanLoadCaseList" resultType="io.metersphere.track.dto.TestPlanLoadCaseDTO">
        select tplc.id,
        u.name as userName,
        tplc.create_time,
        tplc.update_time,
        tplc.test_plan_id,
        tplc.load_case_id,
        lt.status,
        lt.num,
        tplc.status as caseStatus,
        lt.name as caseName,
        tplc.load_report_id,
        p.name as projectName
        from test_plan_load_case tplc
        inner join load_test lt on tplc.load_case_id = lt.id
        left join user u on lt.user_id = u.id
        left join project p on lt.project_id = p.id
        <where>
            tplc.test_plan_id = #{request.testPlanId}
            <if test="request.caseIds != null and request.caseIds.size > 0">
                AND lt.id IN
                <foreach collection="request.caseIds" item="value" separator="," open="(" close=")">
                    #{value}
                </foreach>
            </if>
            <if test="request.projectId != null and request.projectId != ''">
                and lt.project_id = #{request.projectId}
            </if>
            <if test="request.name != null">
                and (lt.name like CONCAT('%', #{request.name},'%') or lt.num like CONCAT('%', #{request.name},'%'))
            </if>
            <if test="request.status != null">
                and tplc.status like CONCAT('%', #{request.status},'%')
            </if>
            <if test="request.filters != null and request.filters.size() > 0">
                <foreach collection="request.filters.entrySet()" index="key" item="values">
                    <if test="values != null and values.size() > 0">
                        <choose>
                            <when test="key=='status'">
                                and lt.status in
                                <foreach collection="values" item="value" separator="," open="(" close=")">
                                    #{value}
                                </foreach>
                            </when>
                        </choose>
                    </if>
                </foreach>
            </if>
        </where>
        <if test="request.orders != null and request.orders.size() > 0">
            order by
            <foreach collection="request.orders" separator="," item="order">
                <choose>
                    <when test="order.name == 'num'">
                        lt.${order.name} ${order.type}
                    </when>
                    <when test="order.name == 'case_name'">
                        lt.name ${order.type}
                    </when>
                    <otherwise>
                        tplc.${order.name} ${order.type}
                    </otherwise>
                </choose>
            </foreach>
        </if>
    </select>

    <select id="selectByIdIn" resultType="io.metersphere.track.dto.TestPlanLoadCaseDTO">
        select tplc.id,
        u.name as userName,
        tplc.create_time,
        tplc.update_time,
        tplc.test_plan_id,
        tplc.load_case_id,
        lt.status,
        lt.num,
        tplc.status as caseStatus,
        lt.name as caseName,
        tplc.load_report_id,
        p.name as projectName
        from test_plan_load_case tplc
        inner join load_test lt on tplc.load_case_id = lt.id
        inner join user u on lt.user_id = u.id
        inner join project p on lt.project_id = p.id
        WHERE tplc.id in
        <foreach collection="request.ids" item="value" separator="," open="(" close=")">
            #{value}
        </foreach>
        <if test="request.orders != null and request.orders.size() > 0">
            order by
            <foreach collection="request.orders" separator="," item="order">
                tplc.${order.name} ${order.type}
            </foreach>
        </if>
    </select>
    <select id="selectTestPlanLoadCaseId" resultType="java.lang.String">
        select tplc.id
        from test_plan_load_case tplc
        inner join load_test lt on tplc.load_case_id = lt.id
        inner join user u on lt.user_id = u.id
        inner join project p on lt.project_id = p.id
        <where>
            tplc.test_plan_id = #{request.testPlanId}
            <if test="request.projectId != null and request.projectId != ''">
                and lt.project_id = #{request.projectId}
            </if>
            <if test="request.name != null">
                and (lt.name like CONCAT('%', #{request.name},'%') or lt.num like CONCAT('%', #{request.name},'%'))
            </if>
            <if test="request.status != null">
                and tplc.status like CONCAT('%', #{request.status},'%')
            </if>
            <if test="request.filters != null and request.filters.size() > 0">
                <foreach collection="request.filters.entrySet()" index="key" item="values">
                    <if test="values != null and values.size() > 0">
                        <choose>
                            <when test="key=='status'">
                                and lt.status in
                                <foreach collection="values" item="value" separator="," open="(" close=")">
                                    #{value}
                                </foreach>
                            </when>
                        </choose>
                    </if>
                </foreach>
            </if>
        </where>
        <if test="request.orders != null and request.orders.size() > 0">
            order by
            <foreach collection="request.orders" separator="," item="order">
                tplc.${order.name} ${order.type}
            </foreach>
        </if>
    </select>
    <select id="getStatusByTestPlanId" resultType="java.lang.String">
        select status from test_plan_load_case tplc where tplc.test_plan_id = #{planId}
    </select>
</mapper>
