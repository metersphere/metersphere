<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.metersphere.base.mapper.ext.ExtTaskMapper">
    <select id="getTasks" resultType="io.metersphere.task.dto.TaskCenterDTO"
            parameterType="java.lang.String">
        SELECT tt.* FROM (
        (select t.id,if(t.scenario_id like "[\"%\"]", t.name,t.scenario_name) as name ,'SCENARIO' as
        executionModule,t.report_type, ifnull(t2.name,'LOCAL') as actuator, t1.`name` as executor,t.create_time as
        executionTime, t.trigger_mode as triggerMode ,t.status as executionStatus
        from api_scenario_report t inner join `user` t1 ON t.user_id = t1.id left join test_resource_pool t2 on
        t.actuator = t2.id
        where to_days(FROM_UNIXTIME(t.create_time/1000))= to_days(now()) and t.execute_type !='Debug' and t.execute_type
        !='Marge' and t.project_id in
        <foreach collection="request.projects" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
        <if test="request.triggerMode != null and request.triggerMode != ''">
            and t.trigger_mode = #{request.triggerMode}
        </if>
        <if test="request.executionStatus != null and request.executionStatus != ''">
            and t.status = #{request.executionStatus}
        </if>
        <if test="request.executor != null and request.executor != ''">
            and t.user_id = #{request.executor}
        </if>
        )
        UNION ALL
        (select t.id,t.name,'API' as executionModule, t.report_type, ifnull(t2.name,'LOCAL') as actuator, t1.`name` as
        executor,t.create_time as executionTime, ifnull(t.trigger_mode,'MANUAL') as triggerMode
        ,ifnull(t.status,'Saved') as executionStatus
        from api_definition_exec_result t inner join `user` t1 ON t.user_id = t1.id left join test_resource_pool t2 on
        t.actuator = t2.id
        where to_days(FROM_UNIXTIME(t.create_time/1000))= to_days(now()) and t.project_id in
        <foreach collection="request.projects" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>

        <if test="request.triggerMode != null and request.triggerMode != ''">
            and t.trigger_mode = #{request.triggerMode}
        </if>
        <if test="request.executionStatus != null and request.executionStatus != ''">
            and t.status = #{request.executionStatus}
        </if>
        <if test="request.executor != null and request.executor != ''">
            and t.user_id = #{request.executor}
        </if>
        and (t.integrated_report_id is null or t.integrated_report_id = 'null')
        )
        UNION ALL
        (select t.id,t.name,'PERFORMANCE' as executionModule,'PERFORMANCE' as report_type, ifnull(t2.name,'LOCAL') as
        actuator, t1.`name` as executor,t.create_time as executionTime, t.trigger_mode as triggerMode ,t.`status` as
        executionStatus
        from load_test_report t inner join `user` t1 ON t.user_id = t1.id left join test_resource_pool t2 on
        t.test_resource_pool_id = t2.id
        where to_days(FROM_UNIXTIME(t.create_time/1000))= to_days(now()) and t.project_id in
        <foreach collection="request.projects" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
        <if test="request.triggerMode != null and request.triggerMode != ''">
            and t.trigger_mode = #{request.triggerMode}
        </if>
        <if test="request.executionStatus != null and request.executionStatus != ''">
            and t.status = #{request.executionStatus}
        </if>
        <if test="request.executor != null and request.executor != ''">
            and t.user_id = #{request.executor}
        </if>
        )
        )tt ORDER BY tt.executionTime DESC
    </select>

    <select id="getCases" resultType="io.metersphere.task.dto.TaskCenterDTO" parameterType="java.lang.String">
        select t.id,t.name,'API' as executionModule, ifnull(t2.name,'LOCAL') as actuator, t1.`name` as executor,t.create_time as executionTime, ifnull(t.trigger_mode,'MANUAL') as triggerMode ,ifnull(t.status,'Saved') as executionStatus
        from api_definition_exec_result t
        left join `user` t1 ON t.user_id = t1.id
        left join test_resource_pool t2 on t.actuator  = t2.id
        left join api_test_case t4 on t4.id = t.resource_id
        where t4.id=#{id} and t.content != "" order by t.create_time desc LIMIT 5;
    </select>

    <select id="getScenario" resultType="io.metersphere.task.dto.TaskCenterDTO" parameterType="java.lang.String">
        select t.id,if(t.scenario_id like "[\"%\"]", t.name,t.scenario_name) as name ,'SCENARIO' as executionModule, ifnull(t2.name,'LOCAL') as actuator, t1.`name` as executor,t.create_time as executionTime, t.trigger_mode as triggerMode ,t.status as executionStatus
        from api_scenario_report t
        left join `user` t1 ON t.user_id = t1.id
        left join test_resource_pool t2 on t.actuator  = t2.id
        where  t.execute_type ='Debug' and t.scenario_id=#{id} ORDER BY t.create_time desc LIMIT 5;
    </select>

    <select id="getRunningTasks" resultType="java.lang.Integer" parameterType="java.lang.String">
        SELECT count(tt.id) FROM (
        (select t.id,'SCENARIO' as executionModule,t.report_type, ifnull(t2.name,'LOCAL') as actuator, t1.`name` as
        executor,t.create_time as executionTime, t.trigger_mode as triggerMode ,t.status as executionStatus
        from api_scenario_report t left join `user` t1 ON t.user_id = t1.id left join test_resource_pool t2 on
        t.actuator = t2.id
        where to_days(FROM_UNIXTIME(t.create_time/1000))= to_days(now()) and t.execute_type !='Debug' and t.execute_type
        !='Marge' and t.project_id in
        <foreach collection="request.projects" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
        <if test="request.triggerMode != null and request.triggerMode != ''">
            and t.trigger_mode = #{request.triggerMode}
        </if>
        <if test="request.executionStatus != null and request.executionStatus != ''">
            and t.status = #{request.executionStatus}
        </if>
        <if test="request.executor != null and request.executor != ''">
            and t.user_id = #{request.executor}
        </if>
        and t.status in ("running","starting","waiting")
        )
        UNION ALL
        (select t.id,'API' as executionModule, t.report_type, ifnull(t2.name,'LOCAL') as actuator, t1.`name` as
        executor,t.create_time as executionTime, ifnull(t.trigger_mode,'MANUAL') as triggerMode
        ,ifnull(t.status,'Saved') as executionStatus
        from api_definition_exec_result t left join `user` t1 ON t.user_id = t1.id left join test_resource_pool t2 on
        t.actuator = t2.id
        where to_days(FROM_UNIXTIME(t.create_time/1000))= to_days(now()) and t.project_id in
        <foreach collection="request.projects" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>

        <if test="request.triggerMode != null and request.triggerMode != ''">
            and t.trigger_mode = #{request.triggerMode}
        </if>
        <if test="request.executionStatus != null and request.executionStatus != ''">
            and t.status = #{request.executionStatus}
        </if>
        <if test="request.executor != null and request.executor != ''">
            and t.user_id = #{request.executor}
        </if>
        and (t.integrated_report_id is null or t.integrated_report_id = 'null')
        and t.status in ("running","starting","waiting")
        )
        UNION ALL
        (select t.id,'PERFORMANCE' as executionModule,'PERFORMANCE' as report_type, ifnull(t2.name,'LOCAL') as actuator,
        t1.`name` as executor,t.create_time as executionTime, t.trigger_mode as triggerMode ,t.`status` as
        executionStatus
        from load_test_report t left join `user` t1 ON t.user_id = t1.id left join test_resource_pool t2 on
        t.test_resource_pool_id = t2.id
        where to_days(FROM_UNIXTIME(t.create_time/1000))= to_days(now()) and t.project_id in
        <foreach collection="request.projects" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
        <if test="request.triggerMode != null and request.triggerMode != ''">
            and t.trigger_mode = #{request.triggerMode}
        </if>
        <if test="request.executionStatus != null and request.executionStatus != ''">
            and t.status = #{request.executionStatus}
        </if>
        <if test="request.executor != null and request.executor != ''">
            and t.user_id = #{request.executor}
        </if>
        and t.status in ("running","starting","waiting")
        )
        )tt;
    </select>

    <select id="checkActuator" resultType="java.lang.String" parameterType="java.lang.String">
        SELECT
            name
        FROM
            api_scenario_report
        WHERE
            actuator =#{actuator}
            AND `status` in ('Running','Waiting')

        UNION ALL

        SELECT
            name
        FROM
            api_definition_exec_result
        WHERE
            actuator = #{actuator}
        AND `status` in ('Running','Waiting')
    </select>

    <update id="stopScenario">
        update api_scenario_report set status ='STOP' where status in ("running","starting","waiting") and
        project_id in
        <foreach collection="request.projects" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>


    <update id="stopApi">
        update api_definition_exec_result set status ='STOP' where status in ("running","starting","waiting") and
        project_id in
        <foreach collection="request.projects" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>
</mapper>