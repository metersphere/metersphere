<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.base.mapper.MockConfigMapper">
    <resultMap id="BaseResultMap" type="io.metersphere.base.domain.MockConfig">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="project_id" jdbcType="VARCHAR" property="projectId"/>
        <result column="api_id" jdbcType="VARCHAR" property="apiId"/>
        <result column="api_path" jdbcType="VARCHAR" property="apiPath"/>
        <result column="api_method" jdbcType="VARCHAR" property="apiMethod"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="update_time" jdbcType="BIGINT" property="updateTime"/>
        <result column="create_user_id" jdbcType="VARCHAR" property="createUserId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, project_id, api_id, api_path, api_method, create_time, update_time, create_user_id
    </sql>
    <select id="selectByExample" parameterType="io.metersphere.base.domain.MockConfigExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from mock_config
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from mock_config
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from mock_config
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="io.metersphere.base.domain.MockConfigExample">
        delete from mock_config
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="io.metersphere.base.domain.MockConfig">
        insert into mock_config (id, project_id, api_id,
                                 api_path, api_method, create_time,
                                 update_time, create_user_id)
        values (#{id,jdbcType=VARCHAR}, #{projectId,jdbcType=VARCHAR}, #{apiId,jdbcType=VARCHAR},
                #{apiPath,jdbcType=VARCHAR}, #{apiMethod,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT},
                #{updateTime,jdbcType=BIGINT}, #{createUserId,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="io.metersphere.base.domain.MockConfig">
        insert into mock_config
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="projectId != null">
                project_id,
            </if>
            <if test="apiId != null">
                api_id,
            </if>
            <if test="apiPath != null">
                api_path,
            </if>
            <if test="apiMethod != null">
                api_method,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="createUserId != null">
                create_user_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="projectId != null">
                #{projectId,jdbcType=VARCHAR},
            </if>
            <if test="apiId != null">
                #{apiId,jdbcType=VARCHAR},
            </if>
            <if test="apiPath != null">
                #{apiPath,jdbcType=VARCHAR},
            </if>
            <if test="apiMethod != null">
                #{apiMethod,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=BIGINT},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="io.metersphere.base.domain.MockConfigExample"
            resultType="java.lang.Long">
        select count(*) from mock_config
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update mock_config
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.projectId != null">
                project_id = #{record.projectId,jdbcType=VARCHAR},
            </if>
            <if test="record.apiId != null">
                api_id = #{record.apiId,jdbcType=VARCHAR},
            </if>
            <if test="record.apiPath != null">
                api_path = #{record.apiPath,jdbcType=VARCHAR},
            </if>
            <if test="record.apiMethod != null">
                api_method = #{record.apiMethod,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=BIGINT},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=BIGINT},
            </if>
            <if test="record.createUserId != null">
                create_user_id = #{record.createUserId,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update mock_config
        set id = #{record.id,jdbcType=VARCHAR},
        project_id = #{record.projectId,jdbcType=VARCHAR},
        api_id = #{record.apiId,jdbcType=VARCHAR},
        api_path = #{record.apiPath,jdbcType=VARCHAR},
        api_method = #{record.apiMethod,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=BIGINT},
        update_time = #{record.updateTime,jdbcType=BIGINT},
        create_user_id = #{record.createUserId,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="io.metersphere.base.domain.MockConfig">
        update mock_config
        <set>
            <if test="projectId != null">
                project_id = #{projectId,jdbcType=VARCHAR},
            </if>
            <if test="apiId != null">
                api_id = #{apiId,jdbcType=VARCHAR},
            </if>
            <if test="apiPath != null">
                api_path = #{apiPath,jdbcType=VARCHAR},
            </if>
            <if test="apiMethod != null">
                api_method = #{apiMethod,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=BIGINT},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="io.metersphere.base.domain.MockConfig">
        update mock_config
        set project_id     = #{projectId,jdbcType=VARCHAR},
            api_id         = #{apiId,jdbcType=VARCHAR},
            api_path       = #{apiPath,jdbcType=VARCHAR},
            api_method     = #{apiMethod,jdbcType=VARCHAR},
            create_time    = #{createTime,jdbcType=BIGINT},
            update_time    = #{updateTime,jdbcType=BIGINT},
            create_user_id = #{createUserId,jdbcType=VARCHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>
</mapper>