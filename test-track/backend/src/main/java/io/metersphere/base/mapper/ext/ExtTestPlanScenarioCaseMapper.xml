<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.base.mapper.ext.ExtTestPlanScenarioCaseMapper">
    <select id="selectLegalDataByTestPlanId" resultType="io.metersphere.plan.dto.TestPlanApiScenarioInfoDTO">
        SELECT tpas.id,
               tpas.api_scenario_id,
               tpas.environment,
               tpas.environment_type,
               tpas.environment_group_id,
               apis.project_id
        FROM test_plan_api_scenario tpas
                 INNER JOIN api_scenario apis ON tpas.api_scenario_id = apis.id
        WHERE (apis.`status` IS NULL OR apis.`status` != 'Trash')
          AND tpas.test_plan_id = #{0}
        ORDER BY tpas.`order` DESC;
    </select>

    <select id="selectLegalUiDataByTestPlanId" resultType="io.metersphere.plan.dto.TestPlanApiScenarioInfoDTO">
        SELECT tpas.id,
               tpas.ui_scenario_id,
               tpas.environment,
               tpas.environment_type,
               tpas.environment_group_id,
               apis.project_id
        FROM test_plan_ui_scenario tpas
                 INNER JOIN ui_scenario apis ON tpas.ui_scenario_id = apis.id
        WHERE (apis.`status` IS NULL OR apis.`status` != 'Trash')
          AND tpas.test_plan_id = #{0}
        ORDER BY tpas.`order` DESC;
    </select>

    <select id="selectExecResult" resultType="io.metersphere.plan.dto.CaseExecResult">
        SELECT t.api_scenario_id AS id, a.name AS caseName,t.last_result AS execResult
        FROM test_plan_api_scenario t
        INNER JOIN api_scenario a ON t.api_scenario_id = a.id
        WHERE t.test_plan_id = #{testPlanId} AND  t.api_scenario_id in
        <foreach collection="scenarioCaseIds" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </select>

    <select id="selectReportStatusByReportIds" resultType="io.metersphere.base.domain.ApiScenarioReport">
        select id,status from api_scenario_report
        WHERE id IN
        <foreach collection="ids" item="value" separator="," open="(" close=")">
            #{value}
        </foreach>
    </select>

    <select id="findFailureCaseInTestPlanByProjectIDAndExecuteTimeAndLimitNumber"
            resultType="io.metersphere.dto.ExecutedCaseInfoResult">
        SELECT * FROM (
        SELECT scene.id AS testCaseID,
        scene.id AS id,
        scene.`name` AS caseName,
        apiScene.testPlanName AS testPlan,
        apiScene.testPlanId AS testPlanId,
        count(executionInfo.id) AS failureTimes,
        'scenario' AS caseType,
        scene.project_id AS projectId
        FROM scenario_execution_info executionInfo
        INNER JOIN (
        SELECT testPlanScenario.id, testPlanScenario.api_scenario_id, testPlan.id AS testPlanId, testPlan.`name` AS
        testPlanName
        FROM test_plan_api_scenario testPlanScenario
        INNER JOIN test_plan testPlan ON testPlan.id = testPlanScenario.test_plan_id
        WHERE testPlan.project_id = #{projectId}
        ) apiScene ON apiScene.id = executionInfo.source_id
        INNER JOIN api_scenario scene ON scene.id = apiScene.api_scenario_id
        WHERE scene.`status` != 'Trash'
        AND ( executionInfo.result = 'ERROR' )
        AND executionInfo.create_time >= #{startTimestamp}
        <if test="versionId != null">
          AND executionInfo.version = #{versionId}
        </if>
        GROUP BY scene.id,apiScene.testPlanId
        ) showTable ORDER BY showTable.failureTimes DESC LIMIT ${limitNumber}
    </select>
</mapper>
