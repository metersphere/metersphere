<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.metersphere.base.mapper.ext.ExtTestAnalysisMapper">

    <select id="getCreateCaseReport" resultType="io.metersphere.dto.TestAnalysisChartResult">
        select dateStr, ifnull(tt.num,0) countNum
        from
        (
        select adddate('2019-01-01',t4.i*10000 + t3.i*1000 + t2.i*100 + t1.i*10 + t0.i) dateStr from
        (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union
        select 7 union select 8 union select 9) t0,
        (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union
        select 7 union select 8 union select 9) t1,
        (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union
        select 7 union select 8 union select 9) t2,
        (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union
        select 7 union select 8 union select 9) t3,
        (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union
        select 7 union select 8 union select 9) t4
        ) v
        left join
        (select FROM_UNIXTIME(t.create_time/1000, '%Y-%m-%d') as
        create_times,t.project_id,t.node_id,t.priority,count(id) num ,t.maintainer from test_case t
        WHERE project_id in
        <foreach collection="projects" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
        <if test="modules != null and modules.size() > 0">
            and node_id in
            <foreach collection="modules" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>
        <if test="prioritys != null and prioritys.size() > 0">
            and priority in
            <foreach collection="prioritys" item="p" separator="," open="(" close=")">
                #{p}
            </foreach>
        </if>
        <if test="users != null and users.size() > 0">
            and maintainer in
            <foreach collection="users" item="p" separator="," open="(" close=")">
                #{p}
            </foreach>
        </if>
        GROUP BY create_times
        ) tt
        on dateStr = tt.create_times
        where dateStr BETWEEN #{startTime} and #{endTime}
        <if test="order == null or order == ''">
            order by dateStr
        </if>
        <if test="order != null and order != ''">
            order by countNum ${order}
        </if>
    </select>

    <select id="getUpdateCaseReport" resultType="io.metersphere.dto.TestAnalysisChartResult">
        select dateStr, ifnull(tt.num,0) countNum
        from
        (
        select adddate('2019-01-01',t4.i*10000 + t3.i*1000 + t2.i*100 + t1.i*10 + t0.i) dateStr from
        (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union
        select 7 union select 8 union select 9) t0,
        (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union
        select 7 union select 8 union select 9) t1,
        (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union
        select 7 union select 8 union select 9) t2,
        (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union
        select 7 union select 8 union select 9) t3,
        (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union
        select 7 union select 8 union select 9) t4
        ) v
        left join
        (select FROM_UNIXTIME(t.update_time/1000, '%Y-%m-%d') as
        update_times,t.project_id,t.node_id,t.priority,t.create_time,t.update_time,count(id) num ,t.maintainer from
        test_case t
        WHERE create_time!= update_time
        and project_id in
        <foreach collection="projects" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
        <if test="modules != null and modules.size() > 0">
            and node_id in
            <foreach collection="modules" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>
        <if test="prioritys != null and prioritys.size() > 0">
            and priority in
            <foreach collection="prioritys" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>
        <if test="users != null and users.size() > 0">
            and maintainer in
            <foreach collection="users" item="p" separator="," open="(" close=")">
                #{p}
            </foreach>
        </if>
        GROUP BY update_times
        ) tt
        on dateStr = tt.update_times
        where dateStr BETWEEN #{startTime} and #{endTime}
        <if test="order == null or order == ''">
            order by dateStr
        </if>
        <if test="order != null and order != ''">
            order by countNum ${order}
        </if>
    </select>

</mapper>
