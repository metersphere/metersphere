<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.base.mapper.ext.ExtApiTestCaseMapper">

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id
        , project_id, name,api_definition_id,priority,description, create_user_id, update_user_id, create_time, update_time
    </sql>
    <sql id="Blob_Column_List">
        request
    </sql>
    <sql id="condition">
        <choose>
            <when test='${object}.operator == "like"'>
                like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "not like"'>
                not like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "in"'>
                in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
                <if test="${object}.value.contains(''.toString())">
                    or t3.status is null
                </if>
                <if test="${condition}.exec_result != null">
                    )
                </if>
            </when>
            <when test='${object}.operator == "not in"'>
                not in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
                <if test="${condition}.exec_result != null">
                    )
                </if>
            </when>
            <when test='${object}.operator == "between"'>
                between #{${object}.value[0]} and #{${object}.value[1]}
            </when>
            <when test='${object}.operator == "gt"'>
                &gt; #{${object}.value}
            </when>
            <when test='${object}.operator == "lt"'>
                &lt; #{${object}.value}
            </when>
            <when test='${object}.operator == "ge"'>
                &gt;= #{${object}.value}
            </when>
            <when test='${object}.operator == "le"'>
                &lt;= #{${object}.value}
            </when>
            <when test='${object}.operator == "current user"'>
                = '${@io.metersphere.commons.utils.SessionUtils@getUserId()}'
            </when>
            <otherwise>
                = #{${object}.value}
            </otherwise>
        </choose>
    </sql>
    <sql id="combine">
        <if test='${condition}.name != null and (${name} == null or ${name} == "")'>
            and t1.name
            <include refid="condition">
                <property name="object" value="${condition}.name"/>
            </include>
        </if>
        <if test='${condition}.id != null'>
            and t1.num
            <include refid="condition">
                <property name="object" value="${condition}.id"/>
            </include>
        </if>
        <if test="${condition}.followPeople != null">
            and t1.id in (
            select case_id from api_test_case_follow where follow_id
            <include refid="condition">
                <property name="object" value="${condition}.followPeople"/>
            </include>
            )
        </if>
        <if test="${condition}.updateTime != null">
            and t1.update_time
            <include refid="condition">
                <property name="object" value="${condition}.updateTime"/>
            </include>
        </if>
        <if test="${condition}.createTime != null">
            and t1.create_time
            <include refid="condition">
                <property name="object" value="${condition}.createTime"/>
            </include>
        </if>
        <if test="${condition}.priority != null">
            and t1.priority
            <include refid="condition">
                <property name="object" value="${condition}.priority"/>
            </include>
        </if>
        <if test="${condition}.creator != null">
            and t1.create_user_id
            <include refid="condition">
                <property name="object" value="${condition}.creator"/>
            </include>
        </if>
        <if test='${condition}.tags != null and ${objectKey}.operator == "not like"'>
            and (t1.tags is null or t1.tags
            <include refid="condition">
                <property name="object" value="${condition}.tags"/>
            </include>
            )
        </if>
        <if test='${condition}.tags != null and ${objectKey}.operator == "like"'>
            and t1.tags
            <include refid="condition">
                <property name="object" value="${condition}.tags"/>
            </include>
        </if>
        <if test="${condition}.isReference != null">
            and t1.id
            <if test='${condition}.isReference.value == "true"'>
                in (SELECT reference_id FROM api_scenario_reference_id WHERE reference_id is not null )
            </if>
            <if test='${condition}.isReference.value == "false"'>
                not in (SELECT reference_id FROM api_scenario_reference_id WHERE reference_id is not null )
            </if>
        </if>
        <if test="${condition}.path != null">
            and a.path
            <include refid="condition">
                <property name="object" value="${condition}.path"/>
            </include>
        </if>
        <if test="${condition}.status != null">
            and t1.status
            <include refid="condition">
                <property name="object" value="${condition}.status"/>
            </include>
        </if>
        <if test="${condition}.exec_result != null">
            and (t3.status
            <include refid="condition">
                <property name="object" value="${condition}.exec_result"/>
            </include>
        </if>

    </sql>
    <sql id="countCombine">
        <if test='${condition}.name != null and (${name} == null or ${name} == "")'>
            and api_test_case.name
            <include refid="condition">
                <property name="object" value="${condition}.name"/>
            </include>
        </if>
        <if test="${condition}.followPeople != null">
            and api_test_case.id in (
            select case_id from api_test_case_follow where follow_id
            <include refid="condition">
                <property name="object" value="${condition}.followPeople"/>
            </include>
            )
        </if>
        <if test="${condition}.updateTime != null">
            and api_test_case.update_time
            <include refid="condition">
                <property name="object" value="${condition}.updateTime"/>
            </include>
        </if>
        <if test="${condition}.createTime != null">
            and api_test_case.create_time
            <include refid="condition">
                <property name="object" value="${condition}.createTime"/>
            </include>
        </if>
        <if test="${condition}.priority != null">
            and api_test_case.priority
            <include refid="condition">
                <property name="object" value="${condition}.priority"/>
            </include>
        </if>
        <if test="${condition}.creator != null">
            and api_test_case.create_user_id
            <include refid="condition">
                <property name="object" value="${condition}.creator"/>
            </include>
        </if>
        <if test='${condition}.tags != null and ${objectKey}.operator == "not like"'>
            and (api_test_case.tags is null or api_test_case.tags
            <include refid="condition">
                <property name="object" value="${condition}.tags"/>
            </include>
            )
        </if>
        <if test='${condition}.tags != null and ${objectKey}.operator == "like"'>
            and api_test_case.tags
            <include refid="condition">
                <property name="object" value="${condition}.tags"/>
            </include>
        </if>
        <if test="${condition}.isReference != null">
            and api_test_case.id
            <if test='${condition}.isReference.value == "true"'>
                in (SELECT reference_id FROM api_scenario_reference_id WHERE reference_id is not null )
            </if>
            <if test='${condition}.isReference.value == "false"'>
                not in (SELECT reference_id FROM api_scenario_reference_id WHERE reference_id is not null )
            </if>
        </if>
    </sql>


    <select id="moduleCount" resultType="java.lang.Integer">
        SELECT count(api_test_case.id) FROM api_test_case
        inner join project on api_test_case.project_id = project.id
        inner JOIN api_definition a ON api_test_case.api_definition_id = a.id
        <include refid="criCondition"/>
        and a.latest = 1
    </select>
    <select id="getCountFollow" resultType="java.lang.Integer">
        select count(*) from api_test_case ac where
        ac.id in (select af.case_id from api_test_case_follow  af where  af.follow_id = #{userId,jdbcType=VARCHAR})
        and
        ac.project_id  in
        <foreach collection="projectIds" item="projectId" separator="," open="(" close=")">
            #{projectId}
        </foreach>
        and (ac.status is null or ac.status != 'Trash');
    </select>
    <select id="getUpdateCount" resultType="java.lang.Integer">
        select count(*) from api_test_case ac where ac.project_id = #{projectId,jdbcType=VARCHAR} and ac.create_user_id = #{userId,jdbcType=VARCHAR}
        and case_status in ('Prepare', 'Underway', 'Completed')
        <if test="statusList !=null and statusList.size() > 0">
            and ( ac.to_be_updated = 'true' or ac.status
            in  <foreach collection="statusList" item="value" separator="," open="(" close=")">
            #{value}
        </foreach>)
        </if>
        <if test="statusList ==null or statusList.size() == 0">
            and ac.to_be_updated = 'true'
        </if>
        <if test="toBeUpdateTime !=null and statusList !=null and statusList.size() > 0">
            and (ac.to_be_update_time >= #{toBeUpdateTime} or ( ac.status in
            <foreach collection="statusList" item="value" separator="," open="(" close=")">
                #{value}
            </foreach>
         ))
        </if>
        <if test="toBeUpdateTime !=null and (statusList ==null or statusList.size() == 0)">
            and ac.to_be_update_time >= #{toBeUpdateTime}
        </if>
    </select>
    <select id="getCountUpcoming" resultType="java.lang.Integer">
        select count(*) from api_test_case ac where
        ac.project_id  in
        <foreach collection="projectIds" item="projectId" separator="," open="(" close=")">
            #{projectId}
        </foreach>
        and ac.create_user_id = #{userId,jdbcType=VARCHAR}
        and case_status in ('Prepare', 'Underway')
        and (ac.status is null or ac.status != 'Trash');
    </select>

    <sql id="queryWhereCondition">
        <where>
            <if test="request.name != null and request.name!=''">
                and t1.name like CONCAT('%', #{request.name},'%')
            </if>
            <if test="request.id != null and request.id!=''">
                AND t1.id = #{request.id}
            </if>
            <if test="request.priority != null and request.priority!=''">
                AND t1.priority = #{request.priority}
            </if>
            <if test="request.projectId != null and request.projectId!=''">
                AND t1.project_id = #{request.projectId}
            </if>
            <if test="request.apiDefinitionId != null and request.apiDefinitionId!=''">
                AND t1.api_definition_id = #{request.apiDefinitionId}
            </if>
            <if test="request.filters != null and request.filters.size() > 0">
                <foreach collection="request.filters.entrySet()" index="key" item="values">
                    <if test="values != null and values.size() > 0">
                        <choose>
                            <when test="key == 'priority'">
                                and t1.priority in
                                <foreach collection="values" item="value" separator="," open="(" close=")">
                                    #{value}
                                </foreach>
                            </when>
                            <when test="key=='status'">
                                and t1.status in
                                <foreach collection="values" item="value" separator="," open="(" close=")">
                                    #{value}
                                </foreach>
                            </when>
                        </choose>
                    </if>
                    <if test="key=='status' and values.size == 0">
                        and (t1.status is null or t1.status != 'Trash')
                    </if>
                </foreach>
            </if>
            <if test="request.filters == null || request.filters.size() == 0 ">
                and (t1.status is null or t1.status != 'Trash')
            </if>
            <if test="request.moduleIds != null and request.moduleIds.size() > 0">
                and a.module_id in
                <foreach collection="request.moduleIds" item="nodeId" separator="," open="(" close=")">
                    #{nodeId}
                </foreach>
            </if>
            <if test="request.protocol != null and request.protocol !=''">
                and a.protocol = #{request.protocol}
            </if>
            <if test="request.combine != null">
                <include refid="combine">
                    <property name="condition" value="request.combine"/>
                    <property name="name" value="request.name"/>
                    <property name="objectKey" value="request.combine.tags"/>
                </include>
            </if>
        </where>
    </sql>

    <sql id="criCondition">
        <where>
            <if test="request.combine != null">
                <include refid="countCombine">
                    <property name="condition" value="request.combine"/>
                    <property name="name" value="request.name"/>
                    <property name="objectKey" value="request.combine.tags"/>
                </include>
            </if>
            <if test="request.workspaceId != null">
                AND project.workspace_id = #{request.workspaceId}
            </if>
            <if test="request.filters == null || request.filters.size() == 0 ">
                and (api_test_case.status is null or api_test_case.status != 'Trash')
            </if>
        </where>
    </sql>

    <sql id="queryVersionCondition">
        <if test="request.versionId != null">
            and ${versionTable}.version_id = #{request.versionId}
        </if>
        <if test="request.versionId == null and request.id == null">
            AND a.latest = 1
        </if>
    </sql>

</mapper>
